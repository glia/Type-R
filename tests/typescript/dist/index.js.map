{"version":3,"file":"index.js","sources":["../../../node_modules/tslib/tslib.es6.js","../../../src/object-plus/tools.ts","../../../src/object-plus/mixins.ts","../../../src/object-plus/eventsource.ts","../../../src/object-plus/events.ts","../../../src/object-plus/index.ts","../../../src/validation.ts","../../../src/traversable.ts","../../../src/io-tools.ts","../../../src/transactions.ts","../../../src/record/attributes/updates.ts","../../../src/record/attributes/any.ts","../../../src/record/attributes/owned.ts","../../../src/record/attributes/attrDef.ts","../../../src/record/attributes/date.ts","../../../src/record/attributes/basic.ts","../../../src/record/attributes/shared.ts","../../../src/record/attributes/index.ts","../../../src/record/io-mixin.ts","../../../src/record/record.ts","../../../src/record/index.ts","../../../src/collection/commons.ts","../../../src/collection/add.ts","../../../src/collection/set.ts","../../../src/collection/remove.ts","../../../src/collection/index.ts","../../../src/relations/commons.ts","../../../src/relations/from.ts","../../../src/relations/subsetOf.ts","../../../src/relations/store.ts","../../../node_modules/assertion-error/index.js","../../../node_modules/pathval/index.js","../../../node_modules/chai/lib/chai/utils/flag.js","../../../node_modules/chai/lib/chai/utils/test.js","../../../node_modules/type-detect/index.js","../../../node_modules/chai/lib/chai/utils/expectTypes.js","../../../node_modules/chai/lib/chai/utils/getActual.js","../../../node_modules/get-func-name/index.js","../../../node_modules/chai/lib/chai/utils/getProperties.js","../../../node_modules/chai/lib/chai/utils/getEnumerableProperties.js","../../../node_modules/chai/lib/chai/config.js","../../../node_modules/chai/lib/chai/utils/inspect.js","../../../node_modules/chai/lib/chai/utils/objDisplay.js","../../../node_modules/chai/lib/chai/utils/getMessage.js","../../../node_modules/chai/lib/chai/utils/transferFlags.js","../../../node_modules/deep-eql/index.js","../../../node_modules/chai/lib/chai/utils/isProxyEnabled.js","../../../node_modules/chai/lib/chai/utils/addProperty.js","../../../node_modules/chai/lib/chai/utils/addLengthGuard.js","../../../node_modules/chai/lib/chai/utils/proxify.js","../../../node_modules/chai/lib/chai/utils/addMethod.js","../../../node_modules/chai/lib/chai/utils/overwriteProperty.js","../../../node_modules/chai/lib/chai/utils/overwriteMethod.js","../../../node_modules/chai/lib/chai/utils/addChainableMethod.js","../../../node_modules/chai/lib/chai/utils/overwriteChainableMethod.js","../../../node_modules/chai/lib/chai/utils/compareByInspect.js","../../../node_modules/chai/lib/chai/utils/getOwnEnumerablePropertySymbols.js","../../../node_modules/chai/lib/chai/utils/getOwnEnumerableProperties.js","../../../node_modules/check-error/index.js","../../../node_modules/chai/lib/chai/utils/isNaN.js","../../../node_modules/chai/lib/chai/utils/index.js","../../../node_modules/chai/lib/chai/assertion.js","../../../node_modules/chai/lib/chai/core/assertions.js","../../../node_modules/chai/lib/chai/interface/expect.js","../../../node_modules/chai/lib/chai/interface/should.js","../../../node_modules/chai/lib/chai/interface/assert.js","../../../node_modules/chai/lib/chai.js","../../../node_modules/chai/index.js","../src/mixins.test.ts","../../../node_modules/reflect-metadata/Reflect.ts","../src/primitives.ts","../src/common.ts","../src/reported-bugs.ts","../../../src/endpoints/memory.ts","../../../src/endpoints/attributes.ts","../../../src/endpoints/localStorage.ts","../src/io.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n","/**\n * Simple overridable logging stubs, writing to `console` by default.\n * Node.js users might want to redirect logging somewhere.\n * \n * This is the singleton avaliable globally through `Object.log` or \n * exported [[log]] variable.\n */\n\n// Logger is the function.\nexport type Logger = ( level : LogLevel, error : string, props? : object ) => void;\n\nexport type LogLevel = 'none' | 'error' | 'warn' | 'info' | 'debug' | 'log';\n\nconst levelToNumber = {\n    none : 0, error : 1, warn : 2, info : 3, log : 4, debug : 5\n}\n\nexport interface Log extends Logger {\n    level : number\n    throw : number\n    stop : number\n    logger : Logger\n}\n\nexport const log : Log = <any>function( a_level : LogLevel, a_msg : string, a_props : object ){\n    let levelAsNumber = levelToNumber[ a_level ], msg, props, level;\n\n    if( levelAsNumber === void 0 && !a_props ){\n        levelAsNumber = 4;\n        msg = a_level;\n        props = a_msg;\n        level = 'log';\n    }\n    else{\n        msg = a_msg, level = a_level, props = a_props;\n    }\n\n    if( levelAsNumber <= log.level ){\n        if( levelAsNumber <= log.throw || !log.logger ){\n            const error = new Error( msg );\n            (error as any).props = props;\n            throw error;\n        }\n        else{\n            log.logger( level, msg, props );\n            \n            if( levelAsNumber <= log.stop ){\n                debugger;\n            }\n        }\n    }\n}\n\ndeclare var process: any;\n\nlog.level = typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'production' ? 1 : 2;\nlog.throw = 0;\nlog.stop = 0;\n\nif( typeof console !== 'undefined' ) {\n    log.logger = function _console( level : LogLevel, error : string, props : object ){\n        const args = [ error ];\n        for( let name in props ){\n            args.push( `\\n\\t${name}:`, props[ name ] );\n        }\n\n        console[ level ].apply( console, args );\n    }\n}\n\n/** Check if value is raw JSON */\nexport function isValidJSON( value : any ) : boolean {\n    if( value === null ){\n        return true;\n    }\n\n    switch( typeof value ){\n    case 'number' :\n    case 'string' :\n    case 'boolean' :\n        return true;\n\n    case 'object':\n        var proto = Object.getPrototypeOf( value );\n\n        if( proto === Object.prototype || proto === Array.prototype ){\n            return every( value, isValidJSON );\n        }\n    }\n\n    return false;\n}\n\n/** Get the base class constructor function.\n * @param Class Subclass constructor function.\n * @returns Base class constructor function.\n */\nexport function getBaseClass( Class : Function ) {\n    return Object.getPrototypeOf( Class.prototype ).constructor\n}\n\nexport function assignToClassProto<T, K extends keyof T>( Class, definition : T, ...names : K[] ) : void {\n    for( let name of names ){\n        const value = definition[ name ];\n        value === void 0 || ( Class.prototype[ name ] = value );\n    }\n}\n\n/** Checks whenever given object is an empty hash `{}` */\nexport function isEmpty( obj : {} ) : boolean {\n    if( obj ){\n        for( let key in obj ){\n            if( obj.hasOwnProperty( key ) ){\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n\nexport type Iteratee = ( value : any, key? : string | number ) => any;\n\n/** @hidden */\nfunction someArray( arr : any[], fun : Iteratee ) : any {\n    let result;\n\n    for( let i = 0; i < arr.length; i++ ){\n        if( result = fun( arr[ i ], i ) ){\n            return result;\n        }\n    }\n}\n\n/** @hidden */\nfunction someObject( obj : {}, fun : Iteratee ) : any {\n    let result;\n\n    for( let key in obj ){\n        if( obj.hasOwnProperty( key ) ){\n            if( result = fun( obj[ key ], key ) ){\n                return result;\n            }\n        }\n    }\n}\n\n/** Similar to underscore `_.some` */\nexport function some( obj, fun : Iteratee ) : any {\n    if( Object.getPrototypeOf( obj ) === ArrayProto ){\n        return someArray( obj, fun );\n    }\n    else{\n        return someObject( obj, fun );\n    }\n}\n\n/** Similar to underscore `_.every` */\nexport function every( obj : { }, predicate : Iteratee ) : boolean {\n    return !some( obj, x => !predicate( x ) );\n}\n\n/** Similar to `getOwnPropertyDescriptor`, but traverse the whole prototype chain. */\nexport function getPropertyDescriptor( obj : {}, prop : string ) : PropertyDescriptor {\n    let desc : PropertyDescriptor;\n\n    for( let proto = obj; !desc && proto; proto = Object.getPrototypeOf( proto ) ) {\n        desc = Object.getOwnPropertyDescriptor( proto, prop );\n    }\n\n    return desc;\n}\n\n/** Similar to underscore `_.omit` */\nexport function omit( source : {}, ...rest : string[] ) : {}\nexport function omit( source ) : {} {\n    const dest = {}, discard = {};\n\n    for( let i = 1; i < arguments.length; i ++ ){\n        discard[ arguments[ i ] ] = true;\n    }\n\n    for( var name in source ) {\n        if( !discard.hasOwnProperty( name ) && source.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    return dest;\n}\n\n/** map `source` object properties with a given function, and assign the result to the `dest` object.\n * When `fun` returns `undefined`, skip this value. \n */\nexport function transform< A, B >( dest : { [ key : string ] : A }, source : { [ key : string ] : B }, fun : ( value : B, key : string ) => A | void ) : { [ key : string ] : A } {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) ) {\n            var value = fun( source[ name ], name );\n            value === void 0 || ( dest[ name ] = < A >value );\n        }\n    }\n\n    return dest;\n}\n\n/** @hidden */\nexport function fastAssign< A >( dest : A, source : {} ) : A {\n    for( var name in source ) {\n        dest[ name ] = source[ name ];\n    }\n\n    return dest;\n}\n\n/** @hidden */\nexport function fastDefaults< A >( dest : A, source : {} ) : A {\n    for( var name in source ) {\n        if( dest[ name ] === void 0 ){\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    return dest;\n}\n\n/** Similar to underscore `_.extend` and `Object.assign` */\nexport function assign< T >( dest : T, ...sources : Object[] ) : T\nexport function assign< T >( dest : T, source : Object ) : T {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    if( arguments.length > 2 ){\n        for( let i = 2; i < arguments.length; i++ ){\n            const other = arguments[ i ];\n            other && assign( dest, other );\n        }\n    }\n\n    return dest;\n}\n\n/** Similar to underscore `_.defaults` */\nexport function defaults< T >( dest : T, ...sources : Object[] ) : T\nexport function defaults< T >( dest : T, source : Object ) : T {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) && !dest.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    if( arguments.length > 2 ){\n        for( let i = 2; i < arguments.length; i++ ){\n            const other = arguments[ i ];\n            other && defaults( dest, other );\n        }\n    }\n\n    return dest;\n}\n\n// Polyfill for IE10. Should fix problems with babel and statics inheritance.\ndeclare global {\n    interface ObjectConstructor {\n        setPrototypeOf( target : Object, proto : Object );\n    }\n}\n\nObject.setPrototypeOf || ( Object.setPrototypeOf = defaults ); \n\n/** Similar to underscore `_.keys` */\nexport function keys( o : any ) : string[]{\n    return o ? Object.keys( o ) : [];\n}\n\n/** Similar to underscore `_.once` */\nexport function once( func : Function ) : Function {\n    var memo, first = true;\n    return function() {\n        if ( first ) {\n            first = false;\n            memo = func.apply(this, arguments);\n            func = null;\n        }\n        return memo;\n    };\n}\n\n/** @hidden */\nconst ArrayProto = Array.prototype,\n      DateProto = Date.prototype,\n      ObjectProto = Object.prototype;\n\n/**\n * Determine whenever two values are not equal, deeply traversing \n * arrays and plain JS objects (hashes). Dates are compared by enclosed timestamps, all other\n * values are compared with strict comparison.\n */\nexport function notEqual( a : any, b : any) : boolean {\n    if( a === b ) return false;\n\n    if( a && b && typeof a == 'object' && typeof b == 'object' ) {\n        const protoA = Object.getPrototypeOf( a );\n\n        if( protoA !== Object.getPrototypeOf( b ) ) return true;\n\n        switch( protoA ){\n            case DateProto   : return +a !== +b;\n            case ArrayProto  : return arraysNotEqual( a, b );\n            case ObjectProto :\n            case null:\n                return objectsNotEqual( a, b );\n        }\n    }\n\n    return true;\n}\n\n/** @hidden */\nfunction objectsNotEqual( a, b ) {\n    const keysA = Object.keys( a );\n\n    if( keysA.length !== Object.keys( b ).length ) return true;\n\n    for( let i = 0; i < keysA.length; i++ ) {\n        const key = keysA[ i ];\n\n        if( !b.hasOwnProperty( key ) || notEqual( a[ key ], b[ key ] ) ) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/** @hidden */\nfunction arraysNotEqual( a, b ) {\n    if( a.length !== b.length ) return true;\n\n    for( let i = 0; i < a.length; i++ ) {\n        if( notEqual( a[ i ], b[ i ] ) ) return true;\n    }\n\n    return false;\n}\n\n/**\n * Create an object without Object prototype members except hasOwnProperty.\n * @param obj - optional parameter to populate the hash map from.\n */\nconst HashProto = Object.create( null );\nHashProto.hasOwnProperty = ObjectProto.hasOwnProperty;\n\nexport function hashMap( obj? ){\n    const hash = Object.create( HashProto );\n    return obj ? assign( hash, obj ) : hash;\n}","/*****************************************************************\n * Mixins engine and @define metaprogramming class extensions\n *\n * Vlad Balin & Volicon, (c) 2016-2017\n */\nimport { log, assign, omit, hashMap, getPropertyDescriptor, getBaseClass, defaults, transform } from './tools'\nimport { __extends } from 'tslib'\n\nexport interface Subclass< T > extends MixableConstructor {\n    new ( ...args ) : T\n    prototype : T\n}\n\nexport interface MixableConstructor extends Function{\n    __super__? : object;\n    mixins? : MixinsState;\n    onExtend? : ( BaseClass : Function ) => void;\n    onDefine? : ( definition : object, BaseClass : Function ) => void;\n    define? : ( definition? : object, statics? : object ) => MixableConstructor;\n    extend? : <T extends object>( definition? : T, statics? : object ) => Subclass<T>;\n}\n\nexport interface MixableDefinition {\n    mixins? : Mixin[]\n}\n\n/**\n * Base class, holding metaprogramming class extensions.\n * Supports mixins and Class.define metaprogramming method.\n */\nexport class Mixable {\n    static onExtend : ( BaseClass : Function ) => void;\n    static onDefine : ( definition : object, BaseClass : Function ) => object;    \n    static __super__ : object\n    static mixins : MixinsState;\n\n    /** \n     *  Must be called after inheritance and before 'define'.\n     */\n    static define( protoProps : MixableDefinition = {}, staticProps? : object ) : MixableConstructor {\n        const BaseClass : MixableConstructor = getBaseClass( this );\n\n        // Assign statics.\n        staticProps && assign( this, staticProps );\n\n        // Extract and apply mixins from the definition.\n        const { mixins, ...defineMixin } = protoProps;\n        mixins && this.mixins.merge( mixins );\n\n        // Unshift definition to the the prototype.\n        this.mixins.mergeObject( this.prototype, defineMixin, true );\n\n        // Unshift definition from statics to the prototype.\n        this.mixins.mergeObject( this.prototype, this.mixins.getStaticDefinitions( BaseClass ), true );\n\n        // Call onDefine hook, if it's present.\n        this.onDefine && this.onDefine( this.mixins.definitions, BaseClass );\n        \n        // Apply merge rules to inherited members. No mixins can be added after this point.\n        this.mixins.mergeInheritedMembers( BaseClass );\n\n        return this;\n    }\n\n    /** Backbone-compatible extend method to be used in ES5 and for backward compatibility */\n    static extend< T extends object>(spec? : T, statics? : {} ) : Subclass< T > {\n        let TheSubclass : Subclass< T >;\n\n        // 1. Create the subclass (ES5 compatibility shim).\n        // If constructor function is given...\n        if( spec && spec.hasOwnProperty( 'constructor' ) ){\n            // ...we need to manually call internal TypeScript __extend function. Hack! Hack!\n            TheSubclass = spec.constructor as any;\n            __extends( TheSubclass, this );\n        }\n        // Otherwise, create the subclall in usual way.\n        else{\n            TheSubclass = class Subclass extends this {} as any;\n        }\n\n        predefine( TheSubclass );\n        spec && TheSubclass.define( spec, statics );\n\n        return TheSubclass;\n    }\n}\n\n/** @decorator `@predefine` for forward definitions. Can be used with [[Mixable]] classes only.\n * Forwards the call to the [[Mixable.predefine]];\n */\nexport function predefine( Constructor : MixableConstructor ) : void {\n    const BaseClass : MixableConstructor = getBaseClass( Constructor );\n\n    // Legacy systems support\n    Constructor.__super__ = BaseClass.prototype;\n    \n    // Initialize mixins structures...\n    Constructor.define || MixinsState.get( Mixable ).populate( Constructor );\n\n    // Make sure Ctor.mixins are ready before the callback...\n    MixinsState.get( Constructor );\n\n    // Call extend hook.\n    Constructor.onExtend && Constructor.onExtend( BaseClass );\n}\n\n/** @decorator `@define` for metaprogramming magic. Can be used with [[Mixable]] classes only.\n *  Forwards the call to [[Mixable.define]].\n */\nexport function define( ClassOrDefinition : Function ) : void;\nexport function define( ClassOrDefinition : object ) : ClassDecorator;\nexport function define( ClassOrDefinition : object | MixableConstructor ){\n    // @define class\n    if( typeof ClassOrDefinition === 'function' ){\n        predefine( ClassOrDefinition );\n        ClassOrDefinition.define();\n    }\n    // @define({ prop : val, ... }) class\n    else{\n        return function( Ctor : MixableConstructor ){\n            predefine( Ctor );\n            Ctor.define( ClassOrDefinition );\n        }\n    }\n}\n\nexport function definitions( rules : MixinMergeRules ) : ClassDecorator {\n    return ( Class : Function ) => {\n        const mixins = MixinsState.get( Class );\n        mixins.definitionRules = defaults( hashMap(), rules, mixins.definitionRules );\n    }\n}\n\nexport function definitionDecorator( definitionKey, value ){\n    return ( proto : object, name : string ) => {\n        MixinsState\n            .get( proto.constructor )\n            .mergeObject( proto, {\n                [ definitionKey ] : {\n                    [ name ] : value\n                }\n            });\n    }\n}\n\nexport class MixinsState {\n    mergeRules : MixinMergeRules;\n    definitionRules : MixinMergeRules;\n    definitions : object = {};\n    appliedMixins : Mixin[];\n\n    // Return mixins state for the class. Initialize if it's not exist.\n    static get( Class ) : MixinsState {\n        const { mixins } = Class;\n    \n        return mixins && Class === mixins.Class ? mixins :\n             Class.mixins = new MixinsState( Class );\n    }\n\n    constructor( public Class : MixableConstructor ){\n        const { mixins } = getBaseClass( Class );\n\n        this.mergeRules = ( mixins && mixins.mergeRules ) || hashMap();\n        this.definitionRules = ( mixins && mixins.definitionRules ) || hashMap();\n        this.appliedMixins = ( mixins && mixins.appliedMixins ) || [];\n    }\n\n    getStaticDefinitions( BaseClass : Function ){\n        const definitions = hashMap(),\n            { Class } = this;\n\n        return transform( definitions, this.definitionRules, ( rule, name ) =>{\n            if( BaseClass[ name ] !== Class[ name ]){\n                return Class[ name ];\n            }\n        });\n    }\n\n    merge( mixins : Mixin[] ){\n        const proto      = this.Class.prototype,\n            { mergeRules } = this;\n\n        // Copy applied mixins array as it's going to be updated.\n        const appliedMixins = this.appliedMixins = this.appliedMixins.slice();\n\n        // Apply mixins in sequence...\n        for( let mixin of mixins ) {\n            // Mixins array should be flattened.\n            if( Array.isArray( mixin ) ) {\n                this.merge( mixin );\n            }\n            // Don't apply mixins twice.\n            else if( appliedMixins.indexOf( mixin ) < 0 ){\n                appliedMixins.push( mixin );\n\n                // For constructors, merge _both_ static and prototype members.\n                if( typeof mixin === 'function' ){\n                    if( getBaseClass( mixin ) !== Object ){\n                        //TODO log error\n                        console.log( 'Mixin error' );\n                    }\n\n                    // Merge static members\n                    this.mergeObject( this.Class, mixin );\n\n                    // merge definitionRules and mergeRules\n                    const sourceMixins = ( mixin as any ).mixins;\n                    if( sourceMixins ){\n                        this.mergeRules = defaults( hashMap(), this.mergeRules, sourceMixins.mergeRules );\n                        this.definitionRules = defaults( hashMap(), this.definitionRules, sourceMixins.definitionRules );\n                        this.appliedMixins = this.appliedMixins.concat( sourceMixins.appliedMixins );\n                    }\n\n                    // Prototypes are merged according with rules.\n                    this.mergeObject( proto, mixin.prototype );\n                }\n                // Handle plain object mixins.\n                else {\n                    this.mergeObject( proto, mixin );\n                }\n            }\n        }\n    }\n\n    populate( ...ctors : Function[] ){\n        for( let Ctor of ctors ) {\n            MixinsState.get( Ctor ).merge([ this.Class ]);\n        }\n    }\n\n    mergeObject( dest : object, source : object, unshift? : boolean ) {\n        forEachOwnProp( source, name => {\n            const sourceProp = Object.getOwnPropertyDescriptor( source, name );\n            let rule : MixinMergeRule;\n\n            if( rule = this.definitionRules[ name ] ){\n                assignProperty( this.definitions, name, sourceProp, rule, unshift );\n            }\n\n            if( !rule || rule === mixinRules.protoValue  ){\n                assignProperty( dest, name, sourceProp, this.mergeRules[ name ], unshift );\n            }\n        });\n    }\n\n    mergeInheritedMembers( BaseClass : Function ){\n        const { mergeRules, Class } = this;\n\n        if( mergeRules ){\n            const proto = Class.prototype,\n                baseProto = BaseClass.prototype;\n\n            for( let name in mergeRules ) {\n                const rule = mergeRules[ name ];\n\n                if( proto.hasOwnProperty( name ) && name in baseProto ){\n                    proto[ name ] = resolveRule( proto[ name ], baseProto[ name ], rule );\n                }\n            }\n        }\n    }\n}\n\nconst dontMix = {\n    function : hashMap({\n        length : true,\n        prototype : true,\n        caller : true,\n        arguments : true,\n        name : true,\n        __super__ : true\n    }),\n    \n    object : hashMap({\n        constructor : true\n    })    \n}\n\nfunction forEachOwnProp( object : object, fun : ( name : string ) => void ){\n    const ignore = dontMix[ typeof object ];\n\n    for( let name of Object.getOwnPropertyNames( object ) ) {\n        ignore[ name ] || fun( name );\n    }\n}\n\nexport interface MixinMergeRules {\n    [ name : string ] : MixinMergeRule\n}\n\nexport type MixinMergeRule = ( a : any, b : any ) => any\nexport type Mixin = { [ key : string ] : any } | Function\n\n// @mixins( A, B, ... ) decorator.\nexport interface MixinRulesDecorator {\n    ( rules : MixinMergeRules ) : ClassDecorator\n    value( a : object, b : object) : object;\n    protoValue( a : object, b : object) : object;\n    merge( a : object, b : object ) : object;\n    pipe( a: Function, b : Function ) : Function;\n    defaults( a: Function, b : Function ) : Function;\n    classFirst( a: Function, b : Function ) : Function;\n    classLast( a: Function, b : Function ) : Function;\n    every( a: Function, b : Function ) : Function;\n    some( a: Function, b : Function ) : Function;\n}\n\nexport const mixins = ( ...list : Mixin[] ) => (\n    ( Class : Function ) => MixinsState.get( Class ).merge( list )\n);\n\n// @mixinRules({ name : rule, ... }) decorator.\nexport const mixinRules = ( ( rules : MixinMergeRules ) => (\n    ( Class : Function ) => {\n        const mixins = MixinsState.get( Class );\n        mixins.mergeRules = defaults( rules, mixins.mergeRules );\n    }\n) ) as MixinRulesDecorator;\n\n// Pre-defined mixin merge rules\n\nmixinRules.value = ( a, b ) => a;\n\nmixinRules.protoValue = ( a, b ) => a;\n\n// Recursively merge members\nmixinRules.merge = ( a, b ) => defaults( {}, a, b );\n\n    // Execute methods in pipe, with the class method executed last.\nmixinRules.pipe = ( a, b ) => (\n    function( x : any ) : any {\n        return a.call( this, b.call( this, x ) );\n    }\n);\n\n    // Assume methods return an object, and merge results with defaults (class method executed first)\nmixinRules.defaults = ( a : Function, b : Function ) => (\n    function() : object {\n        return defaults( a.apply( this, arguments ), b.apply( this, arguments ) );\n    }\n);\n\n// Execute methods in sequence staring with the class method.\nmixinRules.classFirst = ( a : Function, b : Function ) => (\n    function() : void {\n        a.apply( this, arguments );\n        b.apply( this, arguments );\n    }\n);\n\n    // Execute methods in sequence ending with the class method.\nmixinRules.classLast = ( a : Function, b : Function ) => (\n    function() : void {\n        b.apply( this, arguments );\n        a.apply( this, arguments );\n    }\n)\n\n    // Execute methods in sequence returning the first falsy result.\nmixinRules.every = ( a : Function, b : Function ) =>(\n    function() : any {\n        return a.apply( this, arguments ) && b.apply( this, arguments );\n    }\n);\n    // Execute methods in sequence returning the first truthy result.\nmixinRules.some = ( a : Function, b : Function ) =>(\n    function() : any {\n        return a.apply( this, arguments ) || b.apply( this, arguments );\n    }\n);\n\n/**\n * Helpers\n */\n\nfunction assignProperty( dest : object, name : string, sourceProp : PropertyDescriptor, rule : MixinMergeRule, unshift? : boolean ){\n// Destination prop is defined, thus the merge rules must be applied.\n    if( dest.hasOwnProperty( name ) ){\n        const destProp = Object.getOwnPropertyDescriptor( dest, name );\n\n        if( destProp.configurable && 'value' in destProp ){\n            dest[ name ] = unshift ?\n                resolveRule( sourceProp.value, destProp.value, rule ) :\n                resolveRule( destProp.value, sourceProp.value, rule ) ;\n        }\n    }\n    // If destination is empty, just copy the prop over.\n    else{\n        Object.defineProperty( dest, name, sourceProp );\n    }\n}\n\nfunction resolveRule( dest, source, rule : MixinMergeRule ){\n    // When destination is empty, take the source.\n    if( dest === void 0 ) return source;\n\n    // In these cases we take non-empty destination:\n    if( !rule || source === void 0 ) return dest;\n\n    // In other cases we must merge values.\n    return rule( dest, source );\n}","import { once as _once } from './tools'\n\n/*******************\n * Prebuilt events map, used for optimized bulk event subscriptions.\n *\n * const events = new EventMap({\n *      'change' : true, // Resend this event from self as it is.\n *      'change:attr' : 'localTargetFunction',\n *      'executedInTargetContext' : function(){ ... }\n *      'executedInNativeContext' : '^props.handler'\n * })\n */\n/** @hidden */\nexport interface EventsDefinition {\n    [ events : string ] : Function | string | boolean\n}\n\n/** @hidden */\nexport class EventMap {\n    handlers : EventDescriptor[] = [];\n\n    constructor( map? : EventsDefinition | EventMap ){\n        if( map ){\n            if( map instanceof EventMap ){\n                this.handlers = map.handlers.slice();\n            }\n            else{\n                map && this.addEventsMap( map );\n            }\n        }\n    }\n\n    merge( map : EventMap ){\n        this.handlers = this.handlers.concat( map.handlers );\n    }\n\n    addEventsMap( map : EventsDefinition ){\n        for( let names in map ){\n            this.addEvent( names, map[ names ] )\n        }\n    }\n\n    bubbleEvents( names : string ){\n        for( let name of names.split( eventSplitter ) ){\n            this.addEvent( name, getBubblingHandler( name ) );\n        }\n    }\n\n    addEvent( names : string, callback : Function | string | boolean ){\n        const { handlers } = this;\n\n        for( let name of names.split( eventSplitter ) ){\n            handlers.push( new EventDescriptor( name, callback ) );\n        }\n    }\n\n    subscribe( target : {}, source : EventSource ){\n        for( let event of this.handlers ){\n            on( source, event.name, event.callback, target );\n        }\n    }\n\n    unsubscribe( target : {}, source : EventSource ){\n        for( let event of this.handlers ){\n            off( source, event.name, event.callback, target );\n        }\n    }\n}\n\n/** @hidden */\nexport class EventDescriptor {\n    callback : Function\n\n    constructor(\n        public name : string,\n        callback : Function | string | boolean\n    ){\n        if( callback === true ){\n            this.callback = getBubblingHandler( name );\n        }\n        else if( typeof callback === 'string' ){\n            this.callback =\n                function localCallback(){\n                    const handler = this[ callback ];\n                    handler && handler.apply( this, arguments );\n                };\n        }\n        else{\n            this.callback = <Function>callback;\n        }\n    }\n}\n\n/** @hidden */\nconst _bubblingHandlers = {};\n\n/** @hidden */\nfunction getBubblingHandler( event : string ){\n    return _bubblingHandlers[ event ] || (\n        _bubblingHandlers[ event ] = function( a?, b?, c?, d?, e? ){\n            if( d !== void 0 || e !== void 0 ) trigger5( this, event, a, b, c, d, e );\n            if( c !== void 0 ) trigger3( this, event, a, b, c );\n            else trigger2( this, event, a, b );\n        }\n    );\n}\n\n/** @hidden */\nexport interface HandlersByEvent {\n    [ name : string ] : EventHandler\n}\n\n/** @hidden */\nexport class EventHandler {\n    constructor( public callback : Callback, public context : any, public next = null ){}\n}\n\n/** @hidden */\nfunction listOff( _events : HandlersByEvent, name : string, callback : Callback, context : any ){\n    const head = _events[ name ];\n\n    let filteredHead, prev;\n\n    for( let ev = head; ev; ev = ev.next ){\n        // Element must be kept\n        if( ( callback && callback !== ev.callback && callback !== ev.callback._callback ) ||\n            ( context && context !== ev.context ) ){\n            \n            prev = ev;\n            filteredHead || ( filteredHead = ev );\n        }\n        // Element must be skipped\n        else{\n            if( prev ) prev.next = ev.next;\n        }\n    }\n\n    if( head !== filteredHead ) _events[ name ] = filteredHead;\n}\n\n/** @hidden */\nfunction listSend2( head : EventHandler, a, b ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b );\n}\n\n/** @hidden */\nfunction listSend3( head : EventHandler, a, b, c ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c );\n}\n\n/** @hidden */\nfunction listSend4( head : EventHandler, a, b, c, d ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d );\n}\n\n/** @hidden */\nfunction listSend5( head : EventHandler, a, b, c, d, e ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d, e );\n}\n\n/** @hidden */\nfunction listSend6( head : EventHandler, a, b, c, d, e, f ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d, e, f );\n}\n\n/** @hidden */\nexport interface Callback extends Function {\n    _callback? : Function\n}\n\n/** @hidden */\nexport function on( source : EventSource, name : string, callback : Callback, context? : any ) : void {\n    if( callback ){\n        const _events = source._events || ( source._events = Object.create( null ) );\n        _events[ name ] = new EventHandler( callback, context, _events[ name ] );\n    }\n}\n\n/** @hidden */\nexport function once( source : EventSource, name : string, callback : Callback, context? : any ) : void {\n    if( callback ){\n        const once : Callback = _once( function(){\n            off( source, name, once );\n            callback.apply(this, arguments);\n        });\n\n        once._callback = callback;\n        on( source, name, once, context );\n    }\n}\n\n/** @hidden */\nexport function off( source : EventSource, name? : string, callback? : Callback, context? : any ) : void {\n    const { _events } = source;\n    if( _events ){\n        if( callback || context ) {\n            if( name ){\n                listOff( _events, name, callback, context );\n            }\n            else{\n                for( let name in _events ){\n                    listOff( _events, name, callback, context );\n                }\n            }\n        }\n        else if( name ){\n            _events[ name ] = void 0;\n        }\n        else{\n            source._events = void 0;\n        }\n    }\n}\n\n/** @hidden */\nexport interface EventSource {\n    _events : HandlersByEvent\n}\n\n/** @hidden */\nconst eventSplitter = /\\s+/;\n\n/** @hidden */\nexport function strings( api : ApiEntry, source : EventSource, events : string, callback : Callback, context ){\n    if( eventSplitter.test( events ) ){\n        const names = events.split( eventSplitter );\n        for( let name of names ) api( source, name, callback, context );\n    }\n    else api( source, events, callback, context );\n}\n\n/** @hidden */\nexport type ApiEntry = ( source : EventSource, event : string, callback : Callback, context? : any ) => void\n\n/*********************************\n * Event-triggering API\n */\n\n/** @hidden */\nexport function trigger2( self : EventSource, name : string, a, b ) : void {\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend2( queue, a, b );\n        listSend3( all, name, a, b );\n    }\n};\n\n/** @hidden */\nexport function trigger3( self : EventSource, name : string, a, b, c ) : void{\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend3( queue, a, b, c );\n        listSend4( all, name, a, b, c );\n    }\n};\n\n/** @hidden */\nexport function trigger5( self : EventSource, name : string, a, b, c, d, e ) : void{\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend5( queue, a, b, c, d, e );\n        listSend6( all, name, a, b, c, d, e );\n    }\n};","import { define, mixins, Mixable, Mixin, MixableConstructor, MixinsState, mixinRules, definitions, MixinMergeRules } from './mixins'\nimport { omit, transform } from './tools'\nimport { EventMap, EventsDefinition, EventSource, HandlersByEvent } from './eventsource'\nimport * as _eventsApi from './eventsource'\n\nconst { EventHandler, strings, on, off, once, trigger5, trigger2, trigger3 } = _eventsApi;\n\n/** @hidden */\nconst eventSplitter = /\\s+/;\n\n/** @hidden */\nlet _idCount = 0;\n\n/** @hidden */\nfunction uniqueId() : string {\n    return 'l' + _idCount++;\n}\n\nexport { EventMap, EventsDefinition }\n\nexport interface MessengerDefinition {\n    _localEvents? : EventMap\n    localEvents? : EventsDefinition\n    properties? : PropertyMap\n    [ name : string ] : any\n}\n\nexport interface PropertyMap {\n    [ name : string ] : Property\n}\n\nexport type Property = PropertyDescriptor | ( () => any )\n\n/** @hidden */\nexport interface MessengersByCid {\n    [ cid : string ] : Messenger\n}\n\n/** @hidden */\nexport type CallbacksByEvents = { [ events : string ] : Function }\n\n/*************************\n * Messenger is mixable class with capabilities of sending and receiving synchronous events.\n * This class itself can serve as both mixin and base class.\n */\n\n@define\n@definitions({\n    properties : mixinRules.merge,\n    localEvents : mixinRules.merge\n})\nexport abstract class Messenger implements Mixable, EventSource {\n    // Define extendable mixin static properties.\n    static __super__ : object;\n    static mixins : MixinsState;\n    static onExtend : ( BaseClass : Function ) => void;\n    static define : ( definition? : MessengerDefinition, statics? : object ) => MixableConstructor;\n    static extend : ( definition? : MessengerDefinition, statics? : object ) => MixableConstructor;\n    static onDefine({ localEvents, _localEvents, properties } : MessengerDefinition, BaseClass? : typeof Mixable ){\n        // Handle localEvents definition\n        if( localEvents || _localEvents ){\n            const eventsMap = new EventMap( this.prototype._localEvents );\n\n            localEvents && eventsMap.addEventsMap( localEvents );\n            _localEvents && eventsMap.merge( _localEvents );\n            \n            this.prototype._localEvents = eventsMap;\n        }\n\n        // Handle properties definitions...\n        if( properties ){\n            Object.defineProperties( this.prototype, transform( {}, <PropertyMap>properties, toPropertyDescriptor ) );\n        }\n    }\n\n    /** @hidden */ \n    _events : HandlersByEvent = void 0;\n\n    /** @hidden */ \n    _listeningTo : MessengersByCid = void 0\n\n    /** Unique client-only id. */\n    cid : string\n\n    /** @hidden Prototype-only property to manage automatic local events subscription */ \n    _localEvents : EventMap\n\n    /** @hidden */ \n    constructor(){\n        this.cid = uniqueId();\n        this.initialize.apply( this, arguments );\n\n        // TODO: local events subscribe?\n    }\n\n    /** Method is called at the end of the constructor */\n    initialize() : void {}\n    \n    on( events : string | CallbacksByEvents, callback, context? ) : this {\n        if( typeof events === 'string' ) strings( on, this, events, callback, context );\n        else for( let name in events ) strings( on, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    once( events : string | CallbacksByEvents, callback, context? ) : this {\n        if( typeof events === 'string' ) strings( once, this, events, callback, context );\n        else for( let name in events ) strings( once, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    off( events? : string | CallbacksByEvents, callback?, context? ) : this {\n        if( !events ) off( this, void 0, callback, context );\n        else if( typeof events === 'string' ) strings( off, this, events, callback, context );\n        else for( let name in events ) strings( off, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    // Trigger one or many events, firing all bound callbacks. Callbacks are\n    // passed the same arguments as `trigger` is, apart from the event name\n    // (unless you're listening on `\"all\"`, which will cause your callback to\n    // receive the true name of the event as the first argument).\n    trigger(name : string, a?, b?, c?, d?, e? ) : this {\n        if( d !== void 0 || e !== void 0 ) trigger5( this, name, a, b, c, d, e );\n        else if( c !== void 0 ) trigger3( this, name, a, b, c );\n        else trigger2( this, name, a, b );\n        return this;\n    }\n\n    listenTo( source : Messenger, a : string | CallbacksByEvents, b? : Function ) : this {\n        if( source ){\n            addReference( this, source );\n            source.on( a, !b && typeof a === 'object' ? this : b, this );\n        }\n\n        return this;\n    }\n\n    listenToOnce( source : Messenger, a : string | CallbacksByEvents, b? : Function ) : this {\n        if( source ){\n            addReference( this, source );\n            source.once( a, !b && typeof a === 'object' ? this : b, this );\n        }\n\n        return this;\n    }\n\n    stopListening( a_source? : Messenger, a? : string | CallbacksByEvents, b? : Function ) : this {\n        const { _listeningTo } = this;\n        if( _listeningTo ){\n            const removeAll = !( a || b ),\n                  second = !b && typeof a === 'object' ? this : b;\n\n            if( a_source ){\n                const source = _listeningTo[ a_source.cid ];\n                if( source ){\n                    if( removeAll ) delete _listeningTo[ a_source.cid ];\n                    source.off( a, second, this );\n                }\n            }\n            else if( a_source == null ){\n                for( let cid in _listeningTo ) _listeningTo[ cid ].off( a, second, this );\n\n                if( removeAll ) ( this._listeningTo = void 0 );\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Destructor. Stops messenger from listening to all objects,\n     * and stop others from listening to the messenger. \n     */\n    _disposed : boolean\n\n    dispose() : void {\n        if( this._disposed ) return;\n\n        this.stopListening();\n        this.off();\n\n        this._disposed = true;\n    }\n}\n\n/**\n * Backbone 1.2 API conformant Events mixin.\n */\nexport const Events : Messenger = <Messenger> omit( Messenger.prototype, 'constructor', 'initialize' );\n\n/**\n * Messenger Private Helpers \n */\n\nfunction toPropertyDescriptor( x : Property ) : PropertyDescriptor {\n    if( x ){\n        return typeof x === 'function' ? { get : < () => any >x } : <PropertyDescriptor> x;\n    }\n}\n\n/** @hidden */\nfunction addReference( listener : Messenger, source : Messenger ){\n      const listeningTo = listener._listeningTo || (listener._listeningTo = Object.create( null ) ),\n            cid = source.cid || ( source.cid = uniqueId() );\n\n      listeningTo[ cid ] = source;\n}","// (c) 2016 Vlad Balin and Volicon\n// MixtureJS may be freely distributed under the MIT license. \n\nimport * as tools from './tools'\nexport { tools }\nexport * from './mixins'\nexport * from './events'\nimport * as eventsApi from './eventsource'\nexport { eventsApi }\n\nimport { Mixable, MixableConstructor } from './mixins'\n\ndeclare global {\n    interface ObjectConstructor {\n        /** Polyfill for Object.assign */\n        assign< T >( dest : T, ...sources : Object[] ) : T\n\n        /** Global logging interface, for console debugging. */\n        log : tools.Log\n\n        /** ES5 Object.extend */\n        extend( protoProps : {}, staticProps : {} ) : MixableConstructor\n    }\n}\n\nObject.extend = ( protoProps, staticProps ) => Mixable.extend( protoProps, staticProps );\nObject.assign || ( Object.assign = tools.assign );\nObject.log = tools.log;","export interface ChildrenErrors {\n    [ key : string ] : ValidationError | any\n} \n\nexport interface Validatable {\n    _validateNested( errors : ChildrenErrors ) : number;\n    validate( self : any ) : any\n    get( key : string ) : any\n}\n\n// Validation error object.\nexport class ValidationError {\n    // Invalid nested object keys \n    nested : ChildrenErrors \n    length : number\n\n    // Local error\n    error : any\n\n    constructor( obj : Validatable ){\n        this.length = obj._validateNested( this.nested = {} );\n\n        if( this.error = obj.validate( obj ) ){\n            this.length++;\n        }\n    }\n\n    each( iteratee : ( value : any, key : string ) => void ) : void {\n        const { error, nested } = this;\n\n        if( error ) iteratee( error, null );\n\n        for( const key in nested ){\n            iteratee( nested[ key ], key );\n        }\n    }\n\n    eachError( iteratee : ( error : any, key : string, object : Validatable ) => void, object : Validatable ) : void {\n        this.each( ( value : any, key : string ) => {\n            if( value instanceof ValidationError ){\n                (<ValidationError>value).eachError( iteratee, object.get( key ) );\n            }\n            else{\n                iteratee( value, key, object );\n            }\n        });\n    }\n}","/**\n * Some sketches for reference resolution.\n *\n * \n * a : Model.from( '~collection' )\n * \n * We need two functions. One for get, and one for compile. \n */\nexport interface Traversable {\n    getStore() : Traversable\n    getOwner() : Traversable\n    get( key : string ) : any \n}\n\nconst referenceMask =  /\\^|(store\\.[^.]+)|([^.]+)/g;\n\n// Compile reference to function\nexport type ResolveReference = ( root : Traversable ) => any;  \n\nexport class CompiledReference {\n    resolve : ResolveReference\n    tail : string\n    local : boolean\n\n    constructor( reference : string, splitTail : boolean = false ){\n        const path = reference\n                        .match( referenceMask )\n                        .map( key => {\n                            if( key === '^' || key === 'owner' ) return 'getOwner()';\n\n                            if( key[ 0 ] === '~' ) return `getStore().get(\"${ key.substr( 1 ) }\")`;\n\n                            if( key.indexOf( 'store.' ) === 0 ) return `getStore().get(\"${ key.substr( 6 ) }\")`;\n                            \n                            return key;\n                        } );\n               \n        this.tail = splitTail && path.pop();\n        this.local = !path.length;\n        \n        this.resolve = <any> new Function( 'self', `\n            var v = self.${ path.shift() };\n                           \n            ${ path.map( x => `\n                v = v && v.${ x };\n            `).join('')}\n\n            return v;\n        ` );\n    }\n}\n\nexport function resolveReference( root : Traversable, reference : string, action : ( object, key : string ) => any ) : any {\n    const path = reference.match( referenceMask ),\n          skip = path.length - 1;\n    \n    let self = root;\n\n    for( var i = 0; i < skip; i++ ){\n        const key = path[ i ];\n        switch( key ){\n            case '~' : self = self.getStore(); break;\n            case '^' : self = self.getOwner(); break;\n            default  : self = self.get( key );\n        }\n\n        // Do nothing if object on the path doesn't exist.\n        if( !self ) return;\n    }\n\n    return action( self, path[ skip ] );\n}","export interface IONode {\n    _endpoint : IOEndpoint\n    _ioPromise : IOPromise< any >\n}\n\nexport interface IOPromise<T> extends Promise<T> {\n    abort? : () => void\n}\n\nexport interface IOEndpoint {\n    list( options : IOOptions, collection? ) : IOPromise<any>\n    create( json : any, options : IOOptions, record? ) : IOPromise<any>\n    update( id : string | number, json :any, options : IOOptions, record? ) : IOPromise<any>\n    read( id : string | number, options : IOOptions, record? ) : IOPromise<any>\n    destroy( id : string | number, options : IOOptions, record? ) : IOPromise<any>\n    subscribe( events : IOEvents, collection? ) : IOPromise<any>\n    unsubscribe( events : IOEvents, collection? ) : void\n}\n\nexport interface IOOptions {\n    ioUpdate? : boolean\n}\n\nexport interface IOEvents {\n    updated? : ( json : any ) => void\n    removed? : ( json : any ) => void\n}\n\nexport function getOwnerEndpoint( self ) : IOEndpoint {\n    // Check if we are the member of the collection...\n    const { collection } = self;\n    if( collection ){\n        return getOwnerEndpoint( collection );\n    }\n\n    // Now, if we're the member of the model...\n    if( self._owner ){\n        const { _endpoints } = self._owner;\n        return _endpoints && _endpoints[ self._ownerKey ];\n    }\n}\n\n/**\n * Create abortable promise.\n * Adds `promise.abort()` function which rejects the promise by default\n * initialize() function takes third optional argument `abort : ( resolve, reject ) => void`,\n * which can be used to add custom abort handling.\n */\ndeclare var Promise: PromiseConstructorLike;\n\nexport function createIOPromise( initialize : InitIOPromise ) : IOPromise<any>{\n    let resolve, reject, onAbort;\n\n    function abort( fn ){\n        onAbort = fn;\n    }\n\n    const promise : IOPromise<any> = new Promise( ( a_resolve, a_reject ) =>{\n        reject = a_reject;\n        resolve = a_resolve;\n        initialize( resolve, reject, abort );\n    }) as IOPromise<any>;\n\n    promise.abort = () => {\n        onAbort ? onAbort( resolve, reject ) : reject( new Error( \"I/O Aborted\" ) );\n    }\n\n    return promise;\n}\n\nexport type InitIOPromise = ( resolve : ( x? : any ) => void, reject : ( x? : any ) => void, abort? : ( fn : Function ) => void ) => void;\n\nexport function startIO( self : IONode, promise : IOPromise<any>, options : IOOptions, thenDo : ( json : any ) => any ) : IOPromise<any> {\n    // Stop pending I/O first...\n    abortIO( self );\n\n    // Mark future update transaction as IO transaction.\n    options.ioUpdate = true;\n\n    self._ioPromise = promise\n        .then( resp => {\n            self._ioPromise = null;\n    \n            const result = thenDo ? thenDo( resp ) : resp;\n                \n            triggerAndBubble( self, 'sync', self, resp, options );\n                \n            return result;\n        } )  \n        .catch( err => {\n            self._ioPromise = null;\n\n            console.error( err );\n            \n            triggerAndBubble( self, 'error', self, err, options );\n            \n            throw err;\n        } ) as IOPromise<any>;\n\n    self._ioPromise.abort = promise.abort;\n\n    return self._ioPromise;\n}\n\nexport function abortIO( self : IONode ){\n    if( self._ioPromise && self._ioPromise.abort ){\n        self._ioPromise.abort();\n        self._ioPromise = null;\n    }\n}\n\nexport function triggerAndBubble( eventSource, ...args ){\n    eventSource.trigger.apply( eventSource, args );\n    const { collection } = eventSource;\n    collection && collection.trigger.apply( collection, args ); \n}","import { Messenger, CallbacksByEvents, MessengersByCid, MixinsState, MixinMergeRules, MessengerDefinition, tools, mixins, mixinRules, definitions, eventsApi, define, Subclass } from './object-plus'\nimport { ValidationError, Validatable, ChildrenErrors } from './validation'\nimport { Traversable, resolveReference } from './traversable'\nimport { IOEndpoint, IOPromise, IONode, abortIO } from './io-tools'\n\nconst { assign } = tools,\n      { trigger2, trigger3, on, off } = eventsApi;\n/***\n * Abstract class implementing ownership tree, tho-phase transactions, and validation. \n * 1. createTransaction() - apply changes to an object tree, and if there are some events to send, transaction object is created.\n * 2. transaction.commit() - send and process all change events, and close transaction.\n */\n\n/** @private */\nexport interface TransactionalDefinition extends MessengerDefinition {\n    endpoint? : IOEndpoint\n}\n\nexport enum ItemsBehavior {\n    share       = 0b0001,\n    listen      = 0b0010,\n    persistent  = 0b0100\n}\n\n// Transactional object interface\n@define\n@definitions({\n    endpoint : mixinRules.value\n})\n@mixins( Messenger )\nexport abstract class Transactional implements Messenger, IONode, Validatable, Traversable {\n    // Mixins are hard in TypeScript. We need to copy type signatures over...\n    // Here goes 'Mixable' mixin.\n    static __super__ : object;\n    static mixins : MixinsState;\n    static define : ( definition? : TransactionalDefinition, statics? : object ) => typeof Transactional;\n    static extend : <T extends TransactionalDefinition>( definition? : T, statics? : object ) => any;\n\n    static onDefine( definitions : TransactionalDefinition, BaseClass : typeof Transactional ){\n        if( definitions.endpoint ) this.prototype._endpoint = definitions.endpoint;\n        Messenger.onDefine.call( this, definitions, BaseClass );\n    };\n\n    static onExtend( BaseClass : typeof Transactional ) : void {\n        // Make sure we don't inherit class factories.\n        if( BaseClass.create === this.create ) {\n            this.create = Transactional.create;\n        }\n    }\n\n    // Define extendable mixin static properties.\n    static create( a : any, b? : any ) : Transactional {\n        return new (this as any)( a, b );\n    }\n\n    /** Generic class factory. May be overridden for abstract classes. Not inherited. */\n    on : ( events : string | CallbacksByEvents, callback, context? ) => this\n    once : ( events : string | CallbacksByEvents, callback, context? ) => this\n    off : ( events? : string | CallbacksByEvents, callback?, context? ) => this\n    trigger      : (name : string, a?, b?, c?, d?, e? ) => this\n\n    stopListening : ( source? : Messenger, a? : string | CallbacksByEvents, b? : Function ) => this\n    listenTo : ( source : Messenger, a : string | CallbacksByEvents, b? : Function ) => this\n    listenToOnce : ( source : Messenger, a : string | CallbacksByEvents, b? : Function ) => this\n    \n    _disposed : boolean;\n\n    // State accessor. \n    readonly __inner_state__ : any;\n\n    // Shared modifier (used by collections of shared models)\n    _shared? : number; \n    \n    dispose() : void {\n        if( this._disposed ) return;\n        \n        abortIO( this );\n        this._owner = void 0;\n        this._ownerKey = void 0;\n        this.off();\n        this.stopListening();\n        this._disposed = true;\n    }\n\n    // Must be called at the end of the constructor in the subclass.\n    initialize() : void {}\n\n    /** @private */\n    _events : eventsApi.HandlersByEvent = void 0;\n\n    /** @private */\n    _listeningTo : MessengersByCid\n\n    /** @private */\n    _localEvents : eventsApi.EventMap\n\n    cid : string\n    cidPrefix : string\n\n    static shared : any;\n\n    // Unique version token replaced on change\n    /** @private */\n    _changeToken : {} = {}\n\n    // true while inside of the transaction\n    /** @private */\n    _transaction : boolean = false;\n\n    // Holds current transaction's options, when in the middle of transaction and there're changes but is an unsent change event\n    /** @private */\n    _isDirty  : TransactionOptions = null;\n\n    // Backreference set by owner (Record, Collection, or other object)\n    /** @private */\n    _owner : Owner = void 0;\n\n    // Key supplied by owner. Used by record to identify attribute key.\n    // Only collections doesn't set the key, which is used to distinguish collections.\n    /** @private */  \n    _ownerKey : string = void 0;\n\n    // Name of the change event\n    /** @private */\n    _changeEventName : string\n\n    /**\n     * Subsribe for the changes.\n     */\n    onChanges( handler : Function, target? : Messenger ){\n        on( this, this._changeEventName, handler, target );\n    }\n\n    /**\n     * Unsubscribe from changes.\n     */\n    offChanges( handler? : Function, target? : Messenger ){\n        off( this, this._changeEventName, handler, target );\n    }\n\n    /**\n     * Listen to changes event. \n     */\n    listenToChanges( target : Transactional, handler ){\n        this.listenTo( target, target._changeEventName, handler );\n    }\n\n    constructor( cid : string | number ){\n        this.cid = this.cidPrefix + cid;\n    }\n\n    // Deeply clone ownership subtree\n    abstract clone( options? : CloneOptions ) : this\n    \n    // Execute given function in the scope of ad-hoc transaction.\n    transaction( fun : ( self : this ) => void, options : TransactionOptions = {} ) : void{\n        const isRoot = transactionApi.begin( this );\n        const update = fun.call( this, this );\n        update && this.set( update );\n        isRoot && transactionApi.commit( this );\n    }\n\n    // Loop through the members in the scope of transaction.\n    // Transactional version of each()\n    updateEach( iteratee : ( val : any, key : string | number ) => void, options? : TransactionOptions ){\n        const isRoot = transactionApi.begin( this );\n        this.each( iteratee );\n        isRoot && transactionApi.commit( this );\n    }\n\n    // Apply bulk in-place object update in scope of ad-hoc transaction \n    set( values : any, options? : TransactionOptions ) : this {\n        if( values ){ \n            const transaction = this._createTransaction( values, options );\n            transaction && transaction.commit();\n        } \n\n        return this;\n    }\n\n    // Assign transactional object \"by value\", copying aggregated items.\n    assignFrom( source : Transactional | Object ) : this {\n        // Need to delay change events until change token willl by synced.\n        this.transaction( () =>{\n            this.set( ( <any>source ).__inner_state__ || source, { merge : true } );\n\n            // Synchronize change tokens\n            const { _changeToken } = source as any;\n    \n            if( _changeToken ){\n                this._changeToken = _changeToken;\n            }    \n        });\n\n        return this;\n    }\n\n    // Apply bulk object update without any notifications, and return open transaction.\n    // Used internally to implement two-phase commit.\n    // Returns null if there are no any changes.\n    /** @private */  \n    abstract _createTransaction( values : any, options? : TransactionOptions ) : Transaction | void\n    \n    // Parse function applied when 'parse' option is set for transaction.\n    parse( data : any, options? : TransactionOptions ) : any { return data }\n\n    // Convert object to the serializable JSON structure\n    abstract toJSON() : {}\n\n    /*******************\n     * Traversals and member access\n     */\n    \n    // Get object member by its key.\n    abstract get( key : string ) : any\n\n    // Get object member by symbolic reference.\n    deepGet( reference : string ) : any {\n        return resolveReference( this, reference, ( object, key ) => object.get ? object.get( key ) : object[ key ] );\n    }\n\n    //_isCollection : boolean\n\n    // Return owner skipping collections.\n    getOwner() : Owner {\n        return this._owner;\n    }\n\n    // Store used when owner chain store lookup failed. Static value in the prototype. \n    /** @private */\n    _defaultStore : Transactional\n\n    // Locate the closest store. Store object stops traversal by overriding this method. \n    getStore() : Transactional {\n        const { _owner } = this;\n        return _owner ? <Transactional> _owner.getStore() : this._defaultStore;\n    }\n\n\n    /***************************************************\n     * Iteration API\n     */\n\n    // Loop through the members. Must be efficiently implemented in container class.\n    abstract each( iteratee : ( val : any, key : string | number ) => void, context? : any )\n\n    // Map members to an array\n    map<T>( iteratee : ( val : any, key : string | number ) => T, context? : any ) : T[]{\n        const arr : T[] = [],\n              fun = context !== void 0 ? ( v, k ) => iteratee.call( context, v, k ) : iteratee;\n        \n        this.each( ( val, key ) => {\n            const result = fun( val, key );\n            if( result !== void 0 ) arr.push( result );\n        } );\n\n        return arr;\n    }\n\n    _endpoint : IOEndpoint\n    _ioPromise : IOPromise<any>\n\n    hasPendingIO() : IOPromise<any> { return this._ioPromise; }\n\n    fetch( options? : object ) : IOPromise<any> { throw new Error( \"Not implemented\" ); }\n\n    getEndpoint() : IOEndpoint {\n        return getOwnerEndpoint( this ) || this._endpoint;\n    }\n\n    // Map members to an object\n    mapObject<T>( iteratee : ( val : any, key : string | number ) => T, context? : any ) : { [ key : string ] : T }{\n        const obj : { [ key : string ] : T } = {},\n            fun = context !== void 0 ? ( v, k ) => iteratee.call( context, v, k ) : iteratee;\n        \n        this.each( ( val, key ) => {\n            const result = iteratee( val, key );\n            if( result !== void 0 ) obj[ key ] = result;\n        } );\n\n        return obj;\n    }\n    \n    /*********************************\n     * Validation API\n     */\n\n    // Lazily evaluated validation error\n    /** @private */\n    _validationError : ValidationError = void 0\n\n    // Validate ownership tree and return valudation error \n    get validationError() : ValidationError {\n        const error = this._validationError || ( this._validationError = new ValidationError( this ) );\n        return error.length ? error : null; \n    }\n\n    // Validate nested members. Returns errors count.\n    /** @private */\n    abstract _validateNested( errors : ChildrenErrors ) : number\n\n    // Object-level validator. Returns validation error.\n    validate( obj? : Transactional ) : any {}\n\n    // Return validation error (or undefined) for nested object with the given key. \n    getValidationError( key : string ) : any {\n        var error = this.validationError;\n        return ( key ? error && error.nested[ key ] : error ) || null;\n    }\n\n    // Get validation error for the given symbolic reference.\n    deepValidationError( reference : string ) : any {\n        return resolveReference( this, reference, ( object, key ) => object.getValidationError( key ) );\n    }\n\n    // Iterate through all validation errors across the ownership tree.\n    eachValidationError( iteratee : ( error : any, key : string, object : Transactional ) => void ) : void {\n        const { validationError } = this;\n        validationError && validationError.eachError( iteratee, this );\n    }\n\n    // Check whenever member with a given key is valid. \n    isValid( key : string ) : boolean {\n        return !this.getValidationError( key );\n    }\n\n    valueOf() : Object { return this.cid; }\n    toString(){ return this.cid; }\n\n    // Get class name for an object instance. Works fine with ES6 classes definitions (not in IE).\n    getClassName() : string {\n        const { name } = <any>this.constructor;\n        if( name !== 'Subclass' ) return name;\n    }\n\n    // Logging interface for run time errors and warnings.\n    abstract _log( level : string, text : string, value : any ) : void;\n}\n\nexport interface CloneOptions {\n    // 'Pin store' shall assign this._defaultStore = this.getStore();\n    pinStore? : boolean\n}\n\n// Owner must accept children update events. It's an only way children communicates with an owner.\n/** @private */\nexport interface Owner extends Traversable, Messenger {\n    _onChildrenChange( child : Transactional, options : TransactionOptions ) : void;\n    getOwner() : Owner\n    getStore() : Transactional\n}\n\n// Transaction object used for two-phase commit protocol.\n// Must be implemented by subclasses.\n// Transaction must be created if there are actual changes and when markIsDirty returns true.\n/** @private */ \nexport interface Transaction {\n    // Object transaction is being made on.\n    object : Transactional\n\n    // Send out change events, process update triggers, and close transaction.\n    // Nested transactions must be marked with isNested flag (it suppress owner notification).\n    commit( initiator? : Transactional )\n}\n\n// Options for distributed transaction  \nexport interface TransactionOptions {\n    // Invoke parsing \n    parse? : boolean\n\n    // Suppress change notifications and update triggers\n    silent? : boolean\n\n    // Update existing transactional members in place, or skip the update (ignored by models)\n    merge? : boolean // =true\n\n    // Should collections remove elements in set (ignored by models)  \n    remove? : boolean // =true\n\n    // Always replace enclosed objects with new instances\n    reset? : boolean // = false\n\n    // Do not dispose aggregated members\n    unset? : boolean\n\n    validate? : boolean\n\n    // `true` if the transaction is initiated as a result of IO operation\n    ioUpdate? : boolean\n\n    // The hint for IOEndpoint\n    // If `true`, `record.save()` will behave as \"upsert\" operation for the records having id.\n    upsert? : boolean\n}\n\n/**\n * Low-level transactions API. Must be used like this:\n * const isRoot = begin( record );\n * ...\n * isRoot && commit( record, options );\n * \n * When committing nested transaction, the flag must be set to true. \n * commit( object, options, isNested ) \n */\n\nexport const transactionApi = {\n    // Start transaction. Return true if it's the root one.\n    /** @private */\n    begin( object : Transactional ) : boolean {\n        return object._transaction ? false : ( object._transaction = true );  \n    },\n\n    // Mark object having changes inside of the current transaction.\n    // Returns true whenever there notifications are required.\n    /** @private */\n    markAsDirty( object : Transactional, options : TransactionOptions ) : boolean {\n        // If silent option is in effect, don't set isDirty flag.\n        const dirty = !options.silent;\n        if( dirty ) object._isDirty = options;\n        \n        // Reset version token.\n        object._changeToken = {};\n\n        // Object is changed, so validation must happen again. Clear the cache.\n        object._validationError = void 0;\n\n        return dirty;\n    },\n\n    // Commit transaction. Send out change event and notify owner. Returns true if there were changes.\n    // Must be executed for the root transaction only.\n    /** @private */\n    commit( object : Transactional, initiator? : Transactional ){\n        let originalOptions = object._isDirty;\n\n        if( originalOptions ){\n            // Send the sequence of change events, handling chained handlers.\n            while( object._isDirty ){\n                const options = object._isDirty;\n                object._isDirty = null; \n                trigger3( object, object._changeEventName, object, options, initiator );\n            }\n            \n            // Mark transaction as closed.\n            object._transaction = false;\n\n            // Notify owner on changes out of transaction scope.  \n            const { _owner } = object;  \n            if( _owner && _owner !== <any> initiator ){ // If it's the nested transaction, owner is already aware there are some changes.\n                _owner._onChildrenChange( object, originalOptions );\n            }\n        }\n        else{\n            // No changes. Silently close transaction.\n            object._isDirty = null;\n            object._transaction = false;\n        }\n    },\n\n    /************************************\n     * Ownership management\n     */\n\n    // Add reference to the record.\n    /** @private */\n    aquire( owner : Owner, child : Transactional, key? : string ) : boolean {\n        if( !child._owner ){\n            child._owner = owner;\n            child._ownerKey = key;\n            return true;\n        }\n\n        return child._owner === owner;\n    },\n\n    // Remove reference to the record.\n    /** @private */\n    free( owner : Owner, child : Transactional ) : void {\n        if( owner === child._owner ){\n            child._owner = void 0;\n            child._ownerKey = void 0;\n        }\n    }\n}\n\nfunction getOwnerEndpoint( self : Transactional ) : IOEndpoint {\n    // Check if we are the member of the collection...\n    const { collection } = self as any;\n    if( collection ){\n        return getOwnerEndpoint( collection );\n    }\n\n    // Now, if we're the member of the model...\n    if( self._owner ){\n        const { _endpoints } = self._owner as any;\n        return _endpoints && _endpoints[ self._ownerKey ];\n    }\n}\n","import { Transactional, Transaction, TransactionOptions, Owner, transactionApi } from \"../../transactions\"\nconst { begin : _begin, markAsDirty : _markAsDirty, commit } = transactionApi;\n\nimport { eventsApi } from '../../object-plus'\nconst { trigger3 } = eventsApi;\n\nexport interface ConstructorsMixin {\n    Attributes : AttributesConstructor\n    AttributesCopy : AttributesCopyConstructor\n}\n\nexport interface ConstructorOptions extends TransactionOptions{\n    clone? : boolean\n}\n\nexport type AttributesConstructor = new ( record : AttributesContainer, values : object, options : TransactionOptions ) => AttributesValues;\nexport type AttributesCopyConstructor = new ( values : object ) => AttributesValues;\n\nexport interface AttributesContainer extends Transactional, Owner, ConstructorsMixin {\n    // Attribute descriptors.\n    _attributes : AttributesDescriptors\n\n    // Attribute values.\n    attributes : AttributesValues\n\n    // Previous attribute values.\n    _previousAttributes : AttributesValues\n\n    // Changed attributes cache. \n    _changedAttributes : AttributesValues\n}\n\nexport interface AttributesValues {\n    [ name : string ] : any\n}\n\nexport interface AttributesDescriptors {\n    [ name : string ] : AttributeUpdatePipeline\n}\n\nexport interface AttributeUpdatePipeline{\n    doUpdate( value, record : AttributesContainer, options : TransactionOptions, nested? : Transaction[] ) : boolean\n}\n\n // Optimized single attribute transactional update. To be called from attributes setters\n // options.silent === false, parse === false. \nexport function setAttribute( record : AttributesContainer, name : string, value : any ) : void {\n    // Open the transaction.\n    const isRoot  = begin( record ),\n          options = {};\n\n    // Update attribute.      \n    if( record._attributes[ name ].doUpdate( value, record, options ) ){\n        // Notify listeners on changes.\n        markAsDirty( record, options );\n        trigger3( record, 'change:' + name, record, record.attributes[ name ], options );\n    }\n\n    // Close the transaction.\n    isRoot && commit( record );\n}\n\nfunction begin( record : AttributesContainer ){\n    if( _begin( record ) ){\n        record._previousAttributes = new record.AttributesCopy( record.attributes );\n        record._changedAttributes = null;\n        return true;\n    }\n    \n    return false;\n}\n\nfunction markAsDirty( record : AttributesContainer, options : TransactionOptions ){\n    // Need to recalculate changed attributes, when we have nested set in change:attr handler\n    if( record._changedAttributes ){\n        record._changedAttributes = null;\n    }\n\n    return _markAsDirty( record, options );\n}\n\n/**\n * TODO: There's an opportunity to create an optimized pipeline for primitive types and Date, which makes the majority\n * of attributes. It might create the major speedup.\n * \n * Create the dedicated pipeline for owned and shared attributes as well.\n * \n * Three elements of the pipeline:\n * - from constructor\n * - from assignment\n * - from `set`\n */\n\nexport const UpdateRecordMixin = {\n// Need to override it here, since begin/end transaction brackets are overriden. \n    transaction( this : AttributesContainer, fun : ( self : AttributesContainer ) => void, options : TransactionOptions = {} ) : void{\n        const isRoot = begin( this );\n        fun.call( this, this );\n        isRoot && commit( this );\n    },\n            \n    // Handle nested changes. TODO: propagateChanges == false, same in transaction.\n    _onChildrenChange( child : Transactional, options : TransactionOptions ) : void {\n        const { _ownerKey } = child,\n              attribute = this._attributes[ _ownerKey ];\n\n        if( !attribute /* TODO: Must be an opposite, likely the bug */ || attribute.propagateChanges ) this.forceAttributeChange( _ownerKey, options );\n    },\n\n    // Simulate attribute change \n    forceAttributeChange( key : string, options : TransactionOptions = {} ){\n        // Touch an attribute in bounds of transaction\n        const isRoot = begin( this );\n\n        if( markAsDirty( this, options ) ){\n            trigger3( this, 'change:' + key, this, this.attributes[ key ], options );\n        }\n        \n        isRoot && commit( this );\n    },\n\n    _createTransaction( this : AttributesContainer, a_values : {}, options : TransactionOptions = {} ) : Transaction {\n        const isRoot = begin( this ),\n                changes : string[] = [],\n                nested : RecordTransaction[]= [],\n                { _attributes } = this,\n                values = options.parse ? this.parse( a_values, options ) : a_values;\n\n        let unknown;\n\n        if( shouldBeAnObject( this, values ) ){\n            for( let name in values ){\n                const spec = _attributes[ name ];\n\n                if( spec ){\n                    if( spec.doUpdate( values[ name ], this, options, nested ) ){\n                        changes.push( name );\n                    }\n                }\n                else{\n                    unknown || ( unknown = [] );\n                    unknown.push( `'${ name }'` );\n                }\n            }\n\n            if( unknown ){\n                // this._log( 'warn', `Undefined attributes ${ unknown.join(', ')} are ignored!`, values );\n            }\n        }\n        \n        if( changes.length && markAsDirty( this, options ) ){\n            return new RecordTransaction( this, isRoot, nested, changes );\n        }\n        \n        // No changes, but there might be silent attributes with open transactions.\n        for( let pendingTransaction of nested ){\n            pendingTransaction.commit( this );\n        }\n\n        isRoot && commit( this );\n    }\n};\n\n// One of the main performance tricks of Type-R.\n// Create loop unrolled constructors for internal attribute hash,\n// so the hidden class JIT optimization will be engaged and they will become static structs.\n// It dramatically improves record performance.\nexport function constructorsMixin( attrDefs : AttributesDescriptors ) : ConstructorsMixin {\n    const attrs = Object.keys( attrDefs );\n\n    const AttributesCopy : AttributesCopyConstructor = new Function( 'values', `\n        ${ attrs.map( attr =>`\n            this.${ attr } = values.${ attr };\n        `).join( '' ) }\n    `) as any;\n\n    AttributesCopy.prototype = Object.prototype;\n\n    const Attributes : AttributesConstructor = new Function( 'record', 'values', 'options', `\n        var _attrs = record._attributes;\n\n        ${ attrs.map( attr =>`\n            this.${ attr } = _attrs.${ attr }.doInit( values.${ attr }, record, options );\n        `).join( '' ) }\n    `) as any;\n\n    Attributes.prototype = Object.prototype;\n\n    return { Attributes, AttributesCopy };\n}\n\nexport function shouldBeAnObject( record : AttributesContainer, values : object ){\n    if( values && values.constructor === Object ) return true;\n\n    record._log( 'warn', 'update with non-object is ignored!', { values } );\n    return false;\n}\n\n// Transaction class. Implements two-phase transactions on object's tree. \n// Transaction must be created if there are actual changes and when markIsDirty returns true. \nexport class RecordTransaction implements Transaction {\n    // open transaction\n    constructor( public object : AttributesContainer,\n                 public isRoot : boolean,\n                 public nested : Transaction[],\n                 public changes : string[] ){}\n\n    // commit transaction\n    commit( initiator? : AttributesContainer ) : void {\n        const { nested, object, changes } = this;\n\n        // Commit all pending nested transactions...\n        for( let transaction of nested ){ \n            transaction.commit( object );\n        }\n\n        // Notify listeners on attribute changes...\n        // Transaction is never created when silent option is set, so just send events out.\n        const { attributes, _isDirty } = object;\n        for( let key of changes ){\n            trigger3( object, 'change:' + key, object, attributes[ key ], _isDirty );\n        }\n\n        this.isRoot && commit( object, initiator );\n    }\n}","import { setAttribute, AttributesContainer, AttributeUpdatePipeline, RecordTransaction } from './updates'\nimport { tools } from '../../object-plus'\nimport { Owner, Transactional, TransactionOptions } from '../../transactions'\nimport { IOEndpoint } from '../../io-tools'\n\nconst { notEqual, assign} = tools;\n\ndeclare global {\n    interface Function {\n        _attribute : typeof AnyType\n    }\n}\n\nexport type Transform = ( this : AnyType, next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) => any;\nexport type ChangeHandler = ( this : AnyType, next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) => void;\n\nexport interface AttributeOptions {\n    _attribute? : typeof AnyType\n    validate? : ( record : AttributesContainer, value : any, key : string ) => any\n    isRequired? : boolean\n    changeEvents? : boolean\n\n    endpoint? : IOEndpoint\n\n    type? : Function\n    value? : any\n    hasCustomDefault? : boolean\n\n    parse? : Parse\n    toJSON? : AttributeToJSON\n   \n    getHooks? : GetHook[]\n    transforms? : Transform[]\n    changeHandlers? : ChangeHandler[]\n\n    _onChange? : ChangeAttrHandler\n}\n\nexport type Parse = ( value : any, key : string ) => any;\nexport type GetHook = ( value : any, key : string ) => any;\nexport type AttributeToJSON = ( value : any, key : string ) => any\nexport type AttributeParse = ( value : any, key : string ) => any\nexport type ChangeAttrHandler = ( ( value : any, attr : string ) => void ) | string;\n\n// TODO: interface differs from options, do something obout it\nconst emptyOptions : TransactionOptions = {};\n\n/**\n * Typeless attribute. Is the base class for all other attributes.\n */\nexport class AnyType implements AttributeUpdatePipeline {\n    // Factory method to create attribute from options \n    static create( options : AttributeOptions, name : string ) : AnyType {\n        const type = options.type,\n              AttributeCtor = options._attribute || ( type ? type._attribute : AnyType );\n\n        return new AttributeCtor( name, options );\n    }\n    /**\n     * Update pipeline functions\n     * =========================\n     *\n     * Stage 0. canBeUpdated( value )\n     * - presence of this function implies attribute's ability to update in place.\n     */\n    canBeUpdated( prev, next, options : TransactionOptions ) : any {}\n\n    /**\n     * Stage 1. Transform stage\n     */\n    transform( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) : any { return next; }\n\n    // convert attribute type to `this.type`.\n    convert( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) : any { return next; }\n\n    /**\n     * Stage 2. Check if attr value is changed\n     */\n    isChanged( a : any, b : any ) : boolean {\n        return notEqual( a, b );\n    }\n\n    /**\n     * Stage 3. Handle attribute change\n     */\n    handleChange( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) {}\n\n    /**\n     * End update pipeline definitions.\n     */\n\n    // create empty object passing backbone options to constructor...\n    create() { return void 0; }\n\n    // generic clone function for typeless attributes\n    // Must be overriden in sublass\n    clone( value : any, record : AttributesContainer ) {\n        return value;\n    }\n\n    dispose( record : AttributesContainer, value : any ) : void {\n        this.handleChange( void 0, value, record, emptyOptions );\n    }\n\n    validate( record : AttributesContainer, value : any, key : string ){}\n\n    toJSON( value, key ) {\n        return value && value.toJSON ? value.toJSON() : value;\n    }\n\n    createPropertyDescriptor() : PropertyDescriptor | void {\n        const { name, getHook } = this;\n\n        if( name !== 'id' ){\n            return {\n                // call to optimized set function for single argument.\n                set( value ){\n                    setAttribute( this, name, value );\n                },\n\n                // attach get hook to the getter function, if it present\n                get : (\n                    getHook ?\n                        function() {\n                            return getHook.call( this, this.attributes[ name ], name );\n                        } :\n                        function() { return this.attributes[ name ]; }\n                )\n            }\n        }\n    }\n\n    value : any\n\n    // Used as global default value for the given metatype\n    static defaultValue : any;\n\n    type : Function\n\n    initialize( name : string, options : TransactionOptions ){}\n\n    options : AttributeOptions\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        const v = value === void 0 ? this.defaultValue() : value,\n            x = this.transform( v, void 0, record, options );\n            \n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record : AttributesContainer, options : TransactionOptions, nested? : RecordTransaction[] ){\n        const { name } = this,\n            { attributes } = record,\n              prev = attributes[ name ];\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ name ] = next;\n\n        if( this.isChanged( next, prev ) ) {\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n            return true;\n        }\n\n        return false;\n    }\n\n    propagateChanges : boolean\n\n    _log( level : tools.LogLevel, text : string, value, record : AttributesContainer ){\n        tools.log( level, `[Attribute Update Error] ${ record.getClassName() }.${ this.name }: ` + text, {\n            'Record' : record,\n            'Attribute definition' : this,\n            'Prev. value' : record.attributes[ this.name ],\n            'New value' : value\n        });\n    }\n\n    defaultValue(){\n        return this.value;\n    }\n\n    parse : Parse\n\n    constructor( public name : string, a_options : AttributeOptions ) {        \n        // Save original options...\n        this.options = a_options;\n\n        // Clone options.\n        const options : AttributeOptions = assign( { getHooks : [], transforms : [], changeHandlers : [] }, a_options );\n        options.getHooks = options.getHooks.slice();\n        options.transforms = options.transforms.slice();\n        options.changeHandlers = options.changeHandlers.slice();\n\n        const {\n                  value, type, parse, toJSON, changeEvents,\n                  validate, getHooks, transforms, changeHandlers\n              } = options;\n\n        // Initialize default value...\n        this.value = value;\n        this.type  = type;\n\n        // TODO: An opportunity to optimize for attribute subtype.\n        if( !options.hasCustomDefault && type ){\n            this.defaultValue = this.create;\n        }\n        else if( tools.isValidJSON( value ) ){ \n            // JSON literals must be deep copied.\n            this.defaultValue = new Function( `return ${ JSON.stringify( value ) };` ) as any;\n        }\n        else{\n            this.defaultValue = this.defaultValue;\n        }\n\n        // Changes must be bubbled when they are not disabled for an attribute and transactional object.\n        this.propagateChanges = changeEvents !== false;\n\n        this.toJSON = toJSON === void 0 ? this.toJSON : toJSON;\n\n        this.validate = validate || this.validate;\n        \n        if( options.isRequired ){\n            this.validate = wrapIsRequired( this.validate );\n        }\n\n        /**\n         * Assemble pipelines...\n         */\n\n        // `convert` is default transform, which is always present...\n        transforms.unshift( this.convert );\n\n        // Attribute-level parse transform must always go first...\n        this.parse = parse || this.parse;\n\n        // Get hook from the attribute will be used first...\n        if( this.get ) getHooks.unshift( this.get );\n\n        // let subclasses configure the pipeline...\n        this.initialize.call( this, options );\n\n        // let attribute spec configure the pipeline...\n        if( getHooks.length ){\n            const getHook = this.getHook = getHooks.reduce( chainGetHooks );\n\n            const { validate } = this;\n            this.validate = function( record : AttributesContainer, value : any, key : string ){\n                return validate.call( this, record, getHook.call( record, value, key ), key );\n            }\n        }\n        \n        this.transform = transforms.length ? transforms.reduce( chainTransforms ) : this.transform;\n        \n        this.handleChange = changeHandlers.length ? changeHandlers.reduce( chainChangeHandlers ) : this.handleChange;\n    }\n\n    getHook : ( value, key : string ) => any = null\n    get : ( value, key : string ) => any\n}\n\n\nfunction chainGetHooks( prevHook : GetHook, nextHook : GetHook ) : GetHook {\n    return function( value, name ) {\n        return nextHook.call( this, prevHook.call( this, value, name ), name );\n    }\n}\n\nfunction chainTransforms( prevTransform : Transform, nextTransform : Transform ) : Transform {\n    return function( next, prev, record, options ) {\n        return nextTransform.call( this, prevTransform.call( this, next, prev, record, options ), prev, record, options );\n    }\n}\n\nfunction chainChangeHandlers( prevHandler : ChangeHandler, nextHandler : ChangeHandler ) : ChangeHandler {\n    return function( next, prev, record, options ) {\n        prevHandler.call( this, next, prev, record, options );\n        nextHandler.call( this, next, prev, record, options );\n    }\n}\n\nfunction wrapIsRequired( validate ){\n    return function( record : AttributesContainer, value : any, key : string ){\n        return value ? validate.call( this, record, value, key ) : 'Required';\n    }\n}","import { AnyType } from './any'\nimport { Owner, transactionApi, Transactional, ItemsBehavior, TransactionOptions } from '../../transactions'\nimport { tools } from '../../object-plus'\nimport { AttributesContainer, ConstructorOptions } from './updates'\nimport { ValidationError } from '../../validation'\n\nconst { free, aquire } = transactionApi;\n\nexport class AggregatedType extends AnyType {\n    type : typeof Transactional\n\n    clone( value : Transactional ) : Transactional {\n        return value ? value.clone() : value;\n    }\n\n    toJSON( x ){ return x && x.toJSON(); }\n\n    doInit( value, record : AttributesContainer, options : ConstructorOptions ){\n        const v = options.clone ? this.clone( value ) : (\n            value === void 0 ? this.defaultValue() : value\n        );\n\n        const x = this.transform( v, void 0, record, options );\n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record, options, nested : any[] ){ // Last to things can be wrapped to an object, either transaction or ad-hoc\n        const key = this.name, { attributes } = record; \n        const prev = attributes[ key ];\n        let update;\n\n        // This can be moved to transactional attribute. And chained with the rest.\n        if( update = this.canBeUpdated( prev, value, options ) ) { // todo - skip empty updates.\n            const nestedTransaction = prev._createTransaction( update, options );\n            if( nestedTransaction ){\n                if( nested ){\n                    nested.push( nestedTransaction );\n                }\n                else{\n                    nestedTransaction.commit( record );\n                }\n\n                if( this.propagateChanges ) return true;\n            }\n\n            return false;\n        }\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ key ] = next;\n\n        if( this.isChanged( next, prev ) ) { // Primitives and nested comparison can be inlined.\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    canBeUpdated( prev : Transactional, next : any, options : TransactionOptions ) : any {\n        // If an object already exists, and new value is of incompatible type, let object handle the update.\n        if( prev && next != null ){\n            if( next instanceof this.type ){\n                // In case if merge option explicitly specified, force merge.\n                if( options.merge ) return next.__inner_state__;\n            }\n            else{\n                return next;\n            }\n        }\n    }\n\n    convert( next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) : Transactional {\n        // Invoke class factory to handle abstract classes\n        if( next == null ) return next;\n        \n        if( next instanceof this.type ){\n            if( next._shared && !( next._shared & ItemsBehavior.persistent ) ) { // TODO: think more about shared types assignment compatibility. \n                this._log( 'error', 'aggregated collection attribute is assigned with shared collection', next, record );\n            }\n\n            // With explicit 'merge' option we need to clone an object if its previous value was 'null'.\n            // This is an only case we could be here when merge === true.\n            return options.merge ? next.clone() : next;\n        }\n\n        return <any>this.type.create( next, options );\n    }\n\n    dispose ( record : AttributesContainer, value : Transactional ){\n        if( value ){\n            this.handleChange( void 0, value, record, {} );\n        }\n    }\n\n    validate( record : AttributesContainer, value : Transactional ) : ValidationError {\n        var error = value && value.validationError;\n        if( error ) return error;\n    }\n\n    create() : Transactional {\n        return (<any>this.type).create(); // this the subclass of Transactional here.\n    }\n\n    initialize( options ){\n        options.changeHandlers.unshift( this._handleChange );\n    }\n\n    _handleChange( next : Transactional, prev : Transactional, record : AttributesContainer, options : TransactionOptions ){\n        if( prev ){\n            free( record, prev );\n            options.unset || prev.dispose();\n        } \n        \n        if( next && !aquire( record, next, this.name ) ){\n            this._log( 'error', 'aggregated attribute assigned with object already having an owner', next, record );\n        }\n    }\n}","/**\n * Type spec engine. Declare attributes using chainable syntax,\n * and returns object with spec.\n */\nimport { Transactional } from '../../transactions'\nimport { ChangeAttrHandler, AttributeOptions, Parse } from './any'\nimport {  AttributesContainer } from './updates'\nimport { EventMap, EventsDefinition, definitionDecorator, tools } from '../../object-plus'\nimport { IOEndpoint } from '../../io-tools'\n\nconst { assign } = tools;\n\nexport interface AttributeCheck {\n    ( value : any, key : string ) : boolean\n    error? : any\n}\n\nexport class ChainableAttributeSpec {\n    options : AttributeOptions;\n\n    constructor( options : AttributeOptions ) {\n        // Shallow copy options, fill it with defaults.\n        this.options = { getHooks : [], transforms : [], changeHandlers : []};\n        if( options ) assign( this.options, options );\n    }\n\n    check( check : AttributeCheck, error : any ) : ChainableAttributeSpec {\n        function validate( model, value, name ){\n            if( !check.call( model, value, name ) ){\n                const msg = error || check.error || name + ' is not valid';\n                return typeof msg === 'function' ? msg.call( model, name ) : msg;\n            }\n        }\n\n        const prev = this.options.validate;\n\n        return this.metadata({\n            validate : prev ? (\n                            function( model, value, name ){\n                                return prev( model, value, name ) || validate( model, value, name );\n                            }\n                       ) : validate\n        });\n    }\n\n    get asProp(){\n        return definitionDecorator( 'attributes', this );\n    }\n\n    get isRequired() : ChainableAttributeSpec {\n        return this.metadata({ isRequired : true }); \n    }\n\n    endpoint( endpoint : IOEndpoint ){\n        return this.metadata({ endpoint });\n    }\n\n    watcher( ref : string | ( ( value : any, key : string ) => void ) ) : ChainableAttributeSpec {\n        return this.metadata({ _onChange : ref });\n    }\n\n    // Attribute-specific parse transform\n    parse( fun : Parse ) : ChainableAttributeSpec {\n        return this.metadata({ parse : fun });\n    }\n\n    toJSON( fun ) : ChainableAttributeSpec {\n        return this.metadata({\n            toJSON : typeof fun === 'function' ? fun : ( fun ? x => x && x.toJSON() : emptyFunction ) \n        });\n    }\n\n    // Attribute get hook.\n    get( fun ) : ChainableAttributeSpec {\n        return this.metadata({\n            getHooks : this.options.getHooks.concat( fun )\n        });\n    }\n\n    // Attribute set hook.\n    set( fun ) : ChainableAttributeSpec {\n        function handleSetHook( next, prev, record : AttributesContainer, options ) {\n            if( this.isChanged( next, prev ) ) {\n                const changed = fun.call( record, next, this.name );\n                return changed === void 0 ? prev : this.convert( changed, prev, record, options );\n            }\n\n            return prev;\n        }\n\n        return this.metadata({\n            transforms : this.options.transforms.concat( handleSetHook )\n        });\n    }\n\n    changeEvents( events : boolean ) : ChainableAttributeSpec {\n        return this.metadata({ changeEvents : events });\n    }\n\n    // Subsribe to events from an attribute.\n    events( map : EventsDefinition ) : ChainableAttributeSpec {\n        const eventMap = new EventMap( map );\n\n        function handleEventsSubscribtion( next, prev, record : AttributesContainer ){\n            prev && prev.trigger && eventMap.unsubscribe( record, prev );\n\n            next && next.trigger && eventMap.subscribe( record, next );\n        }\n\n        return this.metadata({\n            changeHandlers : this.options.changeHandlers.concat( handleEventsSubscribtion )\n        });\n    }\n\n    // Subsribe to events from an attribute.\n    properties( props : object ) : ChainableAttributeSpec {\n\n        this.metadata(props);\n        return this;\n    }\n\n    // Creates a copy of the spec.\n    get has() : ChainableAttributeSpec {\n        return this;\n    }\n\n    metadata( options : AttributeOptions ) : ChainableAttributeSpec {\n        const cloned = new ChainableAttributeSpec( this.options );\n        assign( cloned.options, options );\n        return cloned;\n    }\n\n    value( x ) : ChainableAttributeSpec {\n        return this.metadata({ value : x, hasCustomDefault : true });\n    }\n}\n\nfunction emptyFunction(){}\n\ndeclare global {\n    interface Function{\n        value : ( x : any ) => ChainableAttributeSpec;\n        isRequired : ChainableAttributeSpec;\n        asProp : PropertyDecorator\n        has : ChainableAttributeSpec;\n    }\n}\n\nFunction.prototype.value = function( x ) {\n    return new ChainableAttributeSpec( { type : this, value : x, hasCustomDefault : true } );\n};\n\nObject.defineProperty( Function.prototype, 'isRequired', {\n    get() { return this._isRequired || this.has.isRequired; },\n    set( x ){ this._isRequired = x; }\n});\n\nObject.defineProperty( Function.prototype, 'asProp', {\n    get() { return this.has.asProp; },\n});\n\nObject.defineProperty( Function.prototype, 'has', {\n    get() {\n        // workaround for sinon.js and other libraries overriding 'has'\n        return this._has || new ChainableAttributeSpec( {\n            type : this,\n            value : this._attribute.defaultValue,\n            hasCustomDefault : this._attribute.defaultValue !== void 0\n        } );\n    },\n\n    set( value ) { this._has = value; }\n} );\n\nexport function toAttributeOptions( spec : any ) : AttributeOptions {\n    let attrSpec : ChainableAttributeSpec;\n\n    if( typeof spec === 'function' ) {\n        attrSpec = spec.has;\n    }\n    else if( spec && spec instanceof ChainableAttributeSpec ) {\n        attrSpec = spec;\n    }\n    else{\n        // Infer type from value.\n        const type = inferType( spec );\n\n        // Transactional types inferred from values must have shared type. \n        if( type && type.prototype instanceof Transactional ){\n            attrSpec = (<any>type).shared.value( spec );\n        }\n        // All others will be created in regular way.\n        else{\n            attrSpec = new ChainableAttributeSpec({ type : type, value : spec, hasCustomDefault : true });\n        }\n    }\n \n    return attrSpec.options;\n}\n\nfunction inferType( value : {} ) : Function {\n    switch( typeof value ) {\n        case 'number' :\n            return Number;\n        case 'string' :\n            return String;\n        case 'boolean' :\n            return Boolean;\n        case 'undefined' :\n            return void 0;\n        case 'object' :\n            return value ? <any> value.constructor : void 0;\n    }\n}\n","/**\n * Date attribute type.\n * \n * Implements validation, cross-browser compatibility fixes, variety of Date serialization formats,\n * and optimized update pipeline.\n */\nimport { AnyType } from './any'\nimport { tools } from '../../object-plus'\nimport { AttributesContainer } from './updates'\nimport { TransactionOptions } from '../../transactions'\nimport { ChainableAttributeSpec } from './attrDef'\n\nconst DateProto = Date.prototype;\n\n// Date Attribute\n/** @private */\nexport class DateType extends AnyType {\n    create(){\n        return new Date();\n    }\n    \n    convert( next : any, a, record ){\n        if( next == null || next instanceof Date ) return next;\n\n        const date = new Date( next ),\n              timestamp = date.getTime();\n\n        if( timestamp !== timestamp ){\n            this._log( 'warn', 'assigned with Invalid Date', next, record );\n        }\n\n        return date;\n    }\n\n    validate( model, value, name ) {\n        if( value != null ){\n            const timestamp = value.getTime(); \n            if( timestamp !== timestamp ) return name + ' is Invalid Date';\n        }\n    }\n\n    toJSON( value ) { return value && value.toISOString(); }\n\n    isChanged( a, b ) { return ( a && a.getTime() ) !== ( b && b.getTime() ); }\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        // Date don't have handleChanges step.\n        return this.transform( value === void 0 ? this.defaultValue() : value, void 0, record, options );\n    }\n\n    doUpdate( value, record, options, nested ){\n        const   { name } = this,\n                { attributes } = record,\n                prev = attributes[ name ];\n        \n        // Date don't have handleChanges step.\n        return this.isChanged( prev , attributes[ name ] = this.transform( value, prev, record, options ) );\n    }\n\n    clone( value ) { return value && new Date( value.getTime() ); }\n    dispose(){}\n}\n\nDate._attribute = DateType;\n\nconst msDatePattern  = /\\/Date\\(([0-9]+)\\)\\//;\n\nexport class MSDateType extends DateType {\n    convert( next ) {\n        if( typeof next === 'string' ){\n            const msDate = msDatePattern.exec( next );\n            if( msDate ){\n                return new Date( Number( msDate[ 1 ] ) );\n            }\n        }\n\n        return DateType.prototype.convert.apply( this, arguments );\n    }\n\n    toJSON( value ) { return value && `/Date(${ value.getTime() })/`; }\n}\n\nexport class TimestampType extends DateType {\n    toJSON( value ) { return value && value.getTime(); }\n}\n\ndeclare global {\n    interface DateConstructor {\n        microsoft : ChainableAttributeSpec\n        timestamp :  ChainableAttributeSpec\n    }\n}\n\nObject.defineProperties( Date, {\n    microsoft : {\n        get(){\n            return new ChainableAttributeSpec({\n                type : Date,\n                _attribute : MSDateType\n            })\n        }\n    },\n\n    timestamp : {\n        get(){\n            return new ChainableAttributeSpec({\n                type : Date,\n                _attribute : TimestampType\n            })\n        }\n    }\n});\n\n// If ISO date is not supported by date constructor (such as in Safari), polyfill it.\nfunction supportsDate( date ){\n    return !isNaN( ( new Date( date ) ).getTime() );\n}\n\nif( !supportsDate('2011-11-29T15:52:30.5') ||\n    !supportsDate('2011-11-29T15:52:30.52') ||\n    !supportsDate('2011-11-29T15:52:18.867') ||\n    !supportsDate('2011-11-29T15:52:18.867Z') ||\n    !supportsDate('2011-11-29T15:52:18.867-03:30') ){\n\n    DateType.prototype.convert = function( value ){\n        return value == null || value instanceof Date ? value : new Date( safeParseDate( value ) );\n    }\n}\n\nconst numericKeys    = [ 1, 4, 5, 6, 7, 10, 11 ],\n      isoDatePattern = /^(\\d{4}|[+\\-]\\d{6})(?:-(\\d{2})(?:-(\\d{2}))?)?(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/;\n\nfunction safeParseDate( date : string ) : number {\n    var timestamp, struct : any[], minutesOffset = 0;\n\n    if( ( struct = isoDatePattern.exec( date )) ) {\n        // avoid NaN timestamps caused by undefined values being passed to Date.UTC\n        for( var i = 0, k; ( k = numericKeys[ i ] ); ++i ) {\n            struct[ k ] = +struct[ k ] || 0;\n        }\n\n        // allow undefined days and months\n        struct[ 2 ] = (+struct[ 2 ] || 1) - 1;\n        struct[ 3 ] = +struct[ 3 ] || 1;\n\n        if( struct[ 8 ] !== 'Z' && struct[ 9 ] !== undefined ) {\n            minutesOffset = struct[ 10 ] * 60 + struct[ 11 ];\n\n            if( struct[ 9 ] === '+' ) {\n                minutesOffset = 0 - minutesOffset;\n            }\n        }\n\n        timestamp =\n            Date.UTC( struct[ 1 ], struct[ 2 ], struct[ 3 ], struct[ 4 ], struct[ 5 ] + minutesOffset, struct[ 6 ],\n                    struct[ 7 ] );\n    }\n    else {\n        timestamp = Date.parse( date );\n    }\n\n    return timestamp;\n}","/**\n * Built-in JSON types attributes: Object, Array, Number, String, Boolean, and immutable class.\n * \n * Adds type assertions, default validation, and optimized update pipeline.\n */\n\nimport { AnyType } from './any'\nimport { tools } from '../../object-plus'\nimport { AttributesContainer } from './updates'\nimport { TransactionOptions } from '../../transactions'\n\n/**\n * Custom class must be immutable class which implements toJSON() method\n * with a constructor taking json.\n */\nclass ImmutableClassType extends AnyType {\n    type : new ( value? : any ) => {}\n\n    create(){\n        return new this.type();\n    }\n\n    convert( next : any ) : any {\n        return next == null || next instanceof this.type ? next : new this.type( next );\n    }\n\n    toJSON( value ){\n        return value && value.toJSON ? value.toJSON() : value;\n    }\n\n    clone( value ) {\n        return new this.type( this.toJSON( value ) );\n    }\n\n    isChanged( a, b ){\n        return a !== b;\n    }\n}\n\nFunction.prototype._attribute = ImmutableClassType;\n\n/**\n * Optimized attribute of primitive type.\n * \n * Primitives has specialized simplified pipeline.\n */\nexport class PrimitiveType extends AnyType {\n    type : NumberConstructor | StringConstructor | BooleanConstructor\n\n    dispose(){}\n    create() { return this.type(); }\n\n    toJSON( value ) { return value; }\n\n    convert( next ) { return next == null ? next : this.type( next ); }\n\n    isChanged( a, b ) { return a !== b; }\n\n    clone( value ) { return value; }\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        return this.transform( value === void 0 ? this.value : value, void 0, record, options );\n    }\n\n    doUpdate( value, record, options, nested ){\n        const   { name } = this,\n                { attributes } = record,\n                prev = attributes[ name ];\n        \n        return prev !== ( attributes[ name ] = this.transform( value, prev, record, options ) );\n    }\n\n    initialize(){\n        if( !this.options.hasCustomDefault ){\n            this.value = this.type();\n        }\n    }\n}\n\nBoolean._attribute = String._attribute = PrimitiveType;\n\n// Number type with special validation algothim.\n/** @private */ \nexport class NumericType extends PrimitiveType {\n    type : NumberConstructor\n\n    create(){\n        return 0;\n    }\n\n    convert( next, prev?, record? ) {\n        const num = next == null ? next : this.type( next );\n\n        if( num !== num ){\n            this._log( 'warn', 'assigned with Invalid Number', next, record );\n        }\n        \n        return num;\n    }\n\n    validate( model, value, name ) {\n        // Whatever is not symmetrically serializable to JSON, is not valid by default.\n        if( value != null && !isFinite( value ) ) {\n            return name + ' is not valid number';\n        }\n    }\n}\n\nNumber._attribute = NumericType;\n\n/**\n * Add Number.integer attrubute type\n */\ndeclare global {\n    interface NumberConstructor {\n        integer : Function\n    }\n\n    interface Window {\n        Integer : Function;\n    }\n}\n\nfunction Integer( x ){\n    return x ? Math.round( x ) : 0;\n}\nInteger._attribute = NumericType;\nNumber.integer = Integer;\n\n\nif( typeof window !== 'undefined' ){\n    window.Integer = Number.integer;\n}\n\n/**\n * Compatibility wrapper for Array type.\n * @private\n */ \nexport class ArrayType extends AnyType {\n    toJSON( value ) { return value; }\n    dispose(){}\n    create(){ return []; }\n\n    convert( next, prev, record ) {\n        // Fix incompatible constructor behaviour of Array...\n        if( next == null || Array.isArray( next ) ) return next;\n\n        this._log( 'warn', 'assignment of non-array to Array attribute is ignored', next, record );\n\n        return [];\n    }\n\n    clone( value ){\n        return value && value.slice();\n    }\n}\n\nArray._attribute = ArrayType;\n\nexport class ObjectType extends AnyType {\n    create(){ return {}; }\n\n    convert( next, prev, record ) {\n        if( next == null || typeof next === 'object' ) return next;\n                \n        this._log( 'warn', 'assignment of non-object to Object attribute is ignored', next, record );\n        return {};\n    }\n}\n\nObject._attribute = ObjectType;\n\nexport function doNothing(){}\n\nexport class FunctionType extends AnyType {\n    // Functions are not serialized.\n    toJSON( value ) { return void 0; }\n    create(){ return doNothing; }\n    dispose(){}\n\n    convert( next, prev, record ) {\n        // Fix incompatible constructor behaviour of Function...\n        if( next == null || typeof next === 'function' ) return next;\n\n        this._log( 'warn', 'assigned with non-function', next, record );\n\n        return doNothing;\n    }\n\n    // Functions are not cloned.\n    clone( value ){ return value; }\n}\n\nFunction._attribute = FunctionType;","import { AnyType } from './any'\nimport { AttributesContainer, ConstructorOptions } from './updates'\nimport { ItemsBehavior, Owner, transactionApi, Transactional, TransactionOptions } from '../../transactions' \nimport { tools, eventsApi } from '../../object-plus'\n\nconst { on, off } = eventsApi,\n    { free, aquire } = transactionApi;\n\n/************************\n * Shared attribute definition.\n * - Not serialized.\n * - Listening to the changes.\n * - Doesn't take ownership when assigned with object of proper type.\n * - Takes ownership on objects which are converted.\n */\n\nconst shareAndListen = ItemsBehavior.listen | ItemsBehavior.share;\n\n/** @private */\nexport class SharedType extends AnyType {\n    type : typeof Transactional\n\n     doInit( value, record : AttributesContainer, options : ConstructorOptions ){\n        const v = options.clone ? this.clone( value, record ) : (\n            value === void 0 ? this.defaultValue() : value\n        );\n\n        const x = this.transform( v, void 0, record, options );\n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record, options, nested : any[] ){ // Last to things can be wrapped to an object, either transaction or ad-hoc\n        const key = this.name, { attributes } = record; \n        const prev = attributes[ key ];\n        let update;\n\n        // This can be moved to transactional attribute. And chained with the rest.\n        if( update = this.canBeUpdated( prev, value, options ) ) { // todo - skip empty updates.\n            const nestedTransaction = prev._createTransaction( update, options );\n            if( nestedTransaction ){\n                if( nested ){\n                    nested.push( nestedTransaction );\n                }\n                else{\n                    nestedTransaction.commit( record );\n                }\n\n                if( this.propagateChanges ) return true;\n            }\n\n            return false;\n        }\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ key ] = next;\n\n        if( this.isChanged( next, prev ) ) { // Primitives and nested comparison can be inlined.\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    clone( value : Transactional, record : AttributesContainer ) : Transactional {\n        // References are not cloned.\n        if( !value || value._owner !== record ) return value;\n\n        // Implicitly created objects are cloned.\n        const clone = value.clone();\n        aquire( record, clone, this.name );\n        return clone;\n    }\n\n    // Do not serialize by default.\n    toJSON(){}\n\n    canBeUpdated( prev : Transactional, next : any, options : TransactionOptions ) : any {\n        // If an object already exists, and new value is of incompatible type, let object handle the update.\n        if( prev && next != null && !( next instanceof this.type ) ){\n            return next;\n        }\n    }\n\n    convert( next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) : Transactional {\n        if( next == null || next instanceof this.type ) return next;\n\n        // Convert type using implicitly created rtransactional object.\n        const implicitObject = new ( this.type as any )( next, options, shareAndListen );\n\n        // To prevent a leak, we need to take an ownership on it.\n        aquire( record, implicitObject, this.name );\n\n        return implicitObject;\n    }\n\n    // Refs are always valid.\n    validate( model, value, name ){}\n\n    // They are always created as null.\n    create() : Transactional {\n        return null;\n    }\n\n    // Listening to the change events\n    _handleChange( next : Transactional, prev : Transactional, record : AttributesContainer, options ){\n        if( prev ){\n            // If there was an implicitly created object, remove an ownership.\n            if( prev._owner === record ){\n                free( record, prev );\n                options.unset || prev.dispose();\n            }\n            else{\n                off( prev, prev._changeEventName, this._onChange, record );\n            }\n        }  \n \n        if( next ){\n            // No need to take an ownership for an implicit object - already done in convert or clone.\n            if( next._owner !== record ){\n                on( next, next._changeEventName, this._onChange, record );\n            }\n        } \n    }\n\n    dispose( record : AttributesContainer, value : Transactional ){\n        if( value ){\n            this.handleChange( void 0, value, record, {} );\n        }\n    }\n\n    _onChange : ( child : Transactional, options : TransactionOptions, initiator : Transactional ) => void \n\n    initialize( options ){\n        // Create change event handler which knows current attribute name. \n        const attribute = this;\n        this._onChange = this.propagateChanges ? function( child, options, initiator ){\n            this === initiator || this.forceAttributeChange( attribute.name, options );\n        } : ignore;\n\n        options.changeHandlers.unshift( this._handleChange );\n    }\n}\n\nfunction ignore(){}","import { tools as _, eventsApi } from '../../object-plus'\n\nexport * from './any'\nexport * from './owned'\nexport * from './date'\nexport * from './basic'\nexport * from './shared'\nexport * from './updates'\nexport * from './attrDef'\n\nimport { AnyType } from './any'\nimport { ConstructorsMixin, constructorsMixin } from './updates'\nimport { toAttributeOptions, ChainableAttributeSpec } from './attrDef'\nimport { CompiledReference } from '../../traversable'\nimport { IOEndpoint } from '../../io-tools'\n\nexport interface RecordAttributesMixin extends ConstructorsMixin {\n    // Attributes descriptors\n    _attributes : AttributeDescriptors\n    _attributesArray : AnyType[]\n    \n    // Attribute's property descriptors\n    properties : PropertyDescriptorMap\n\n    // Attributes serialization\n    _toJSON() : any\n\n    // Event map for record's local events.\n    _localEvents? : eventsApi.EventMap,\n\n    _endpoints : { [ name : string ] : IOEndpoint }\n}\n\nexport interface AttributeDescriptors {\n    [ name : string ] : AnyType\n}\n\n// Create record mixin from the given record's attributes definition\nexport default function( attributesDefinition : object, baseClassAttributes : AttributeDescriptors ) : RecordAttributesMixin {\n    const myAttributes = _.transform( {} as AttributeDescriptors, attributesDefinition, createAttribute ),\n          allAttributes = _.defaults( {} as AttributeDescriptors, myAttributes, baseClassAttributes );\n\n    const ConstructorsMixin = constructorsMixin( allAttributes );\n\n    return {\n        ...ConstructorsMixin,\n        _attributes : new ConstructorsMixin.AttributesCopy( allAttributes ),\n        _attributesArray : Object.keys( allAttributes ).map( key => allAttributes[ key ] ),\n        properties : _.transform( <PropertyDescriptorMap>{}, myAttributes, x => x.createPropertyDescriptor() ),\n        _toJSON : createToJSON( allAttributes ),\n        ...parseMixin( allAttributes ),\n        ...localEventsMixin( myAttributes ),\n        _endpoints : _.transform( {}, allAttributes, attrDef => attrDef.options.endpoint )\n    }            \n}\n\n// Create attribute from the type spec.\nexport function createAttribute( spec : any, name : string ) : AnyType {\n    return AnyType.create( toAttributeOptions( spec ), name );\n}\n\nfunction parseMixin( attributes : AttributeDescriptors ){\n    const attrsWithParse = Object.keys( attributes ).filter( name => attributes[ name ].parse );\n\n    return attrsWithParse.length ? {\n        _parse : new Function( 'json', `\n            var _attrs = this._attributes;\n\n            ${ attrsWithParse.map( name => `                \n                json.${ name } === void 0 || ( json.${ name } = _attrs.${ name }.parse.call( this, json.${ name }, \"${ name }\" ) );\n            ` ).join('')}\n\n            return json;\n        ` )\n    } : {};\n}\n\nfunction createToJSON( attributes : AttributeDescriptors ) : () => void {\n    return new Function(`\n        var json = {},\n            v = this.attributes,\n            a = this._attributes;\n\n        ${ Object.keys( attributes ).map( key => {\n            if( attributes[ key ].toJSON ){\n                return `json.${key} = a.${key}.toJSON.call( this, v.${ key }, '${key}' );`;\n            }\n        } ).join( '\\n' ) }\n\n        return json;\n    `) as any;\n}\n\nexport function createSharedTypeSpec( Constructor : Function, Attribute : typeof AnyType ){\n    if( !Constructor.hasOwnProperty( 'shared' ) ){\n        Object.defineProperty( Constructor, 'shared', {\n            get(){\n                return new ChainableAttributeSpec({\n                    value : null,\n                    type : Constructor,\n                    _attribute : Attribute\n                });\n            }\n        });\n    }\n}\n\ninterface LocalEventsMixin {\n    _localEvents? : eventsApi.EventMap\n}\n\nfunction localEventsMixin( attrSpecs : AttributeDescriptors ) : LocalEventsMixin {\n    let _localEvents : eventsApi.EventMap;\n\n    for( var key in attrSpecs ){\n        const attribute = attrSpecs[ key ],\n            { _onChange } = attribute.options; \n\n        if( _onChange ){\n            _localEvents || ( _localEvents = new eventsApi.EventMap() );\n\n            _localEvents.addEvent( 'change:' + key,\n                typeof _onChange === 'string' ?\n                    createWatcherFromRef( _onChange, key ) : \n                    wrapWatcher( _onChange, key ) );\n        }\n    }\n\n    return _localEvents ? { _localEvents } : {};\n}\n\nfunction wrapWatcher( watcher, key ){\n    return function( record, value ){\n        watcher.call( record, value, key );\n    } \n}\n\nfunction createWatcherFromRef( ref : string, key : string ){\n    const { local, resolve, tail } = new CompiledReference( ref, true );\n    return local ?\n        function( record, value ){\n            record[ tail ]( value, key );\n        } :\n        function( record, value ){\n            resolve( record )[ tail ]( value, key );\n        }\n}","import { getOwnerEndpoint, startIO, IOOptions, IOEndpoint, IOPromise, IONode } from '../io-tools'\n\nexport interface IORecord extends IONode {\n    getEndpoint() : IOEndpoint\n    save( options? : IOOptions ) : IOPromise<any>\n    fetch( options? : IOOptions ) : IOPromise<any>\n    destroy( options? : IOOptions ) : IOPromise<any>\n    toJSON() : any\n    isNew() : boolean\n    id : string | number\n    set( json : object, options : object )\n}\n\nexport const IORecordMixin = {\n    save( this : IORecord, options : IOOptions = {} ){\n        const endpoint = this.getEndpoint(),\n              json = this.toJSON();\n\n        return startIO(\n            this,\n            this.isNew() ?\n                endpoint.create( json, options, this ) :\n                endpoint.update( this.id, json, options, this ),\n            options,\n\n            update => {\n                this.set( update, { parse : true, ...options } );\n            }\n        );\n    },\n\n    fetch( options : IOOptions = {} ){\n        return startIO(\n            this,\n            this.getEndpoint().read( this.id, options, this ),\n            options,\n\n            json => this.set( json, { parse : true, ...options } )\n        );\n    },\n\n    destroy( options : IOOptions = {} ){  \n        return startIO(\n            this,\n            this.getEndpoint().destroy( this.id, options, this ),\n            options,\n\n            () => {\n                const { collection } = this;\n                if( collection ){\n                    collection.remove( this, options );\n                }\n                else{\n                    this.dispose();\n                }\n            }\n        )\n    }\n}","/**\n * Record core implementing transactional updates.\n * The root of all definitions. \n */\n\nimport { tools, eventsApi, Mixable, definitions, mixins,  mixinRules, define } from '../object-plus'\n\nimport { CloneOptions, Transactional, TransactionalDefinition, Transaction, TransactionOptions, Owner } from '../transactions'\nimport { ChildrenErrors } from '../validation'\n\nimport { Collection } from '../collection'\n\nimport { AnyType, AggregatedType, setAttribute, UpdateRecordMixin, \n    AttributesValues, AttributesContainer,\n    ConstructorsMixin, AttributesConstructor, AttributesCopyConstructor } from './attributes'\n\nimport { IORecord, IORecordMixin } from './io-mixin'\nimport { IOPromise, IOEndpoint } from '../io-tools'\n\nconst { assign, isEmpty, log } = tools;\n\n/*******************************************************\n * Record core implementation\n */\n\nexport interface ConstructorOptions extends TransactionOptions{\n    clone? : boolean\n}\n\n// Client unique id counter\nlet _cidCounter : number = 0;\n\n/***************************************************************\n * Record Definition as accepted by Record.define( definition )\n */\nexport interface RecordDefinition extends TransactionalDefinition {\n    idAttribute? : string\n    attributes? : AttributesValues\n    collection? : object\n    Collection? : typeof Transactional\n}\n\n@define({\n    // Default client id prefix \n    cidPrefix : 'm',\n\n    // Name of the change event\n    _changeEventName : 'change',\n\n    // Default id attribute name\n    idAttribute : 'id'\n})\n@definitions({\n    defaults : mixinRules.merge,\n    attributes : mixinRules.merge,\n    collection : mixinRules.merge,\n    Collection : mixinRules.value,\n    idAttribute : mixinRules.protoValue\n})\nexport class Record extends Transactional implements IORecord, AttributesContainer {\n    // Hack\n    static onDefine( definition, BaseClass ){}\n\n    static Collection : typeof Collection;\n    static DefaultCollection : typeof Collection;\n\n    static from : ( collectionReference : any ) => any;\n    \n    static defaults( attrs : AttributesValues ) : typeof Record {\n        return <any>this.extend({ attributes : attrs });\n    }\n    \n    static attributes : AttributesValues\n\n    /********************\n     * IO Methods\n     */\n     _endpoints : { [ name : string ] : IOEndpoint }\n\n     // Save record\n     save( options? : object ) : IOPromise<any> { throw new Error( 'Implemented by mixin' ); }\n\n     // Destroy record\n     destroy( options? : object ) : IOPromise<any> { throw new Error( 'Implemented by mixin' ); }\n\n    /***********************************\n     * Core Members\n     */\n    // Previous attributes\n    _previousAttributes : {}\n\n    previousAttributes(){ return new this.AttributesCopy( this._previousAttributes ); } \n\n    // Current attributes    \n    attributes : AttributesValues\n\n    // Polymorphic accessor for aggregated attribute's canBeUpdated().\n    get __inner_state__(){ return this.attributes; }\n\n    // Lazily evaluated changed attributes hash\n    _changedAttributes : AttributesValues\n\n    get changed(){\n        let changed = this._changedAttributes;\n\n        if( !changed ){\n            const prev = this._previousAttributes;\n            changed = {};\n\n            const { _attributes, attributes } = this;\n\n            for( let attr of this._attributesArray ){\n                const key = attr.name,\n                    value = attributes[ key ];\n\n                if( attr.isChanged( value, prev[ key ] ) ){\n                    changed[ key ] = value;\n                }\n            }\n\n            this._changedAttributes = changed;\n        }\n\n        return changed;    \n    }\n\n    changedAttributes( diff? : {} ) : boolean | {} {\n        if( !diff ) return this.hasChanged() ? assign( {}, this.changed ) : false;\n\n        var val, changed : {} | boolean = false,\n            old          = this._transaction ? this._previousAttributes : this.attributes,\n            attrSpecs    = this._attributes;\n\n        for( var attr in diff ){\n            if( !attrSpecs[ attr ].isChanged( old[ attr ], ( val = diff[ attr ] ) ) ) continue;\n            (changed || (changed = {}))[ attr ] = val;\n        }\n\n        return changed;        \n    }\n\n    hasChanged( key? : string ) : boolean {\n        const { _previousAttributes } = this;\n        if( !_previousAttributes ) return false;\n\n        return key ?\n                this._attributes[ key ].isChanged( this.attributes[ key ], _previousAttributes[ key ] ) :\n                !isEmpty( this.changed );\n    }\n\n    previous( key : string ) : any {\n        if( key ){\n            const { _previousAttributes } = this;\n            if( _previousAttributes ) return _previousAttributes[ key ];\n        }\n        \n        return null;\n    }\n\n    isNew() : boolean {\n        return this.id == null;\n    }\n\n    has( key : string ) : boolean {\n        return this[ key ] != void 0;\n    }\n\n    // Return attribute value, setting an attribute to undefined.\n    // TODO: If attribute was aggregated, don't dispose it.\n    unset( key : string, options? ) : any {\n        const value = this[ key ];\n        this.set({ [ key ] : void 0 }, { unset : true, ...options });\n        return value;\n    }\n\n    // Undocumented. Move to NestedTypes?\n    clear( options? ) : this {\n        const nullify = options && options.nullify;\n\n        this.transaction( () =>{\n            this.forEachAttr( this.attributes, ( value, key ) => this[ key ] = nullify ? null : void 0 );\n        }, options );\n\n        return this;\n    }\n\n    // Returns Record owner skipping collections. TODO: Move out\n    getOwner() : Owner {\n        const owner : any = this._owner;\n\n        // If there are no key, owner must be transactional object, and it's the collection.\n        // We don't expect that collection can be the member of collection, so we're skipping just one level up. An optimization.\n        return this._ownerKey ? owner : owner && owner._owner;\n    }\n\n    /***********************************\n     * Identity managements\n     */\n\n    // Id attribute name ('id' by default)\n    idAttribute : string;\n\n    // Fixed 'id' property pointing to id attribute\n    get id() : string | number { return this.attributes[ this.idAttribute ]; }\n    set id( x : string | number ){ setAttribute( this, this.idAttribute, x ); }\n\n    /***********************************\n     * Dynamically compiled stuff\n     */\n\n    // Attributes specifications \n    _attributes : { [ key : string ] : AnyType }\n    _attributesArray : AnyType[]\n\n    // Attributes object copy constructor\n    Attributes : AttributesConstructor\n    AttributesCopy : AttributesCopyConstructor\n\n    // forEach function for traversing through attributes, with protective default implementation\n    // Overriden by dynamically compiled loop unrolled function in define.ts\n    forEachAttr( attrs : {}, iteratee : ( value : any, key? : string, spec? : AnyType ) => void ) : void {\n        const { _attributes } = this;\n        let unknown : string[];\n\n        for( let name in attrs ){\n            const spec = _attributes[ name ];\n\n            if( spec ){\n                iteratee( attrs[ name ], name, spec );\n            }\n            else{\n                unknown || ( unknown = [] );\n                unknown.push( `'${ name }'` );\n            }\n        }\n\n        if( unknown ){\n            this._log( 'warn', `attributes ${ unknown.join(', ')} are not defined`,{\n                attributes : attrs\n            } );\n        }\n    }\n\n    each( iteratee : ( value? : any, key? : string ) => void, context? : any ){\n        const fun = context !== void 0 ? ( v, k ) => iteratee.call( context, v, k ) : iteratee,\n            { attributes } = this;\n\n        for( const key in this.attributes ){\n            const value = attributes[ key ];\n            if( value !== void 0 ) fun( value, key );\n        }\n    }\n\n    // Get array of attribute keys (Record) or record ids (Collection) \n    keys() : string[] {\n        const keys : string[] = [];\n\n        this.each( ( value, key ) => value === void 0 || keys.push( key ) );\n\n        return keys;\n    }\n\n    // Get array of attribute values (Record) or records (Collection)\n    values() : any[] {\n        return this.map( value => value );\n    }\n\n    // Attributes-level serialization\n    _toJSON(){ return {}; }\n\n    // Attributes-level parse\n    _parse( data ){ return data; }\n\n    // Create record default values, optionally augmenting given values.\n    defaults( values = {} ){\n        const defaults = {},\n            { _attributesArray } = this;\n\n        for( let attr of _attributesArray ){\n            const key = attr.name,\n            value = values[ key ];\n\n            defaults[ key ] = value === void 0 ? attr.defaultValue() : value;\n        }\n\n        return defaults;\n    }\n\n    /***************************************************\n     * Record construction\n     */\n    // Create record, optionally setting an owner\n    constructor( a_values? : {}, a_options? : ConstructorOptions ){\n        super( _cidCounter++ );\n        this.attributes = {};\n        \n        const options = a_options || {},\n              values = ( options.parse ? this.parse( a_values, options ) :  a_values ) || {};\n\n        if( log.level > 1 ) typeCheck( this, values );\n\n        this._previousAttributes = this.attributes = new this.Attributes( this, values, options );\n\n        this.initialize( a_values, a_options );\n\n        if( this._localEvents ) this._localEvents.subscribe( this, this );\n    }\n\n    // Initialization callback, to be overriden by the subclasses \n    initialize( values?, options? ){}\n\n    // Deeply clone record, optionally setting new owner.\n    clone( options : CloneOptions = {} ) : this {\n        const copy : this = new (<any>this.constructor)( this.attributes, { clone : true } );\n        \n        if( options.pinStore ) copy._defaultStore = this.getStore();\n\n        return copy;\n    }\n\n    // Deprecated, every clone is the deep one now.\n    deepClone() : this { return this.clone() };\n\n    // Validate attributes.\n    _validateNested( errors : ChildrenErrors ) : number {\n        var length    = 0;\n\n        this.forEachAttr( this.attributes, ( value, name, attribute ) => {\n            const error = attribute.validate( this, value, name );\n\n            if( error ){\n                errors[ name ] = error;\n                length++;\n            }\n        } );\n\n        return length;\n    }\n\n    // Get attribute by key\n    get( key : string ) : any {\n        return this[ key ];\n    }\n\n    /**\n     * Serialization control\n     */\n\n    // Default record-level serializer, to be overriden by subclasses \n    toJSON() : Object {\n        const json = {};\n\n        this.forEachAttr( this.attributes, ( value, key : string, { toJSON } ) =>{\n            // If attribute serialization is not disabled, and its value is not undefined...\n            if( value !== void 0 ){\n                // ...serialize it according to its spec.\n                const asJson = toJSON.call( this, value, key );\n\n                // ...skipping undefined values. Such an attributes are excluded.\n                if( asJson !== void 0 ) json[ key ] = asJson; \n            }\n        });\n\n        return json;\n    }\n    \n    // Default record-level parser, to be overriden by the subclasses.\n    parse( data, options? : TransactionOptions ){\n        // Call dynamically compiled loop-unrolled attribute-level parse function.\n        return this._parse( data );\n    }\n\n    /**\n     * Transactional control\n     */\n\n    deepSet( name : string, value : any, options? ){\n        // Operation might involve series of nested object updates, thus it's wrapped in transaction.\n        this.transaction( () => {\n            const path  = name.split( '.' ),\n                l     = path.length - 1,\n                attr  = path[ l ];\n\n            let model = this;\n\n            // Locate the model, traversing the path.\n            for( let i = 0; i < l; i++ ){\n                const key = path[ i ];\n\n                // There might be collections in path, so use `get`.\n                let next    = model.get ? model.get( key ) : model[ key ];\n\n                // Create models, if they are not exist.\n                if( !next ){\n                    const attrSpecs = model._attributes;\n                    if( attrSpecs ){\n                        // If current object is model, create default attribute\n                        var newModel = attrSpecs[ key ].create();\n\n                        // If created object is model, nullify attributes when requested\n                        if( options && options.nullify && newModel._attributes ){\n                            newModel.clear( options );\n                        }\n\n                        model[ key ] = next = newModel;\n                    }\n                    // Silently fail in other case.\n                    else return;\n                }\n                \n                model = next;\n            }\n\n            // Set model attribute.\n            if( model.set ){\n                model.set({ [ attr ] : value }, options );\n            }\n            else{\n                model[ attr ] = value;\n            }\n        });\n\n        return this;\n    }\n            \n    // Returns owner without the key (usually it's collection)\n    get collection() : any {\n        return this._ownerKey ? null : this._owner;\n    }\n\n    // Dispose object and all childrens\n    dispose(){\n        if( this._disposed ) return;\n        \n        this.forEachAttr( this.attributes, ( value, key, attribute ) => {\n            attribute.dispose( this, value );\n        });\n\n        super.dispose();\n    }\n\n    _log( level : tools.LogLevel, text : string, props : object ) : void {\n        tools.log( level, '[Record] ' + text, {\n            'Record' : this,\n            'Attributes definition:' : this._attributes,\n            ...props\n        });\n    }\n\n    getClassName() : string {\n        return super.getClassName() || 'Record';\n    }\n\n    // Dummies to \n    _createTransaction( values : object, options : TransactionOptions ) : Transaction { return void 0; }\n    // Simulate attribute change \n    forceAttributeChange : ( key : string, options : TransactionOptions ) => void\n    _onChildrenChange : ( child : Transactional, options : TransactionOptions ) => void\n};\n\nassign( Record.prototype, UpdateRecordMixin, IORecordMixin );\n\n/***********************************************\n * Helper functions\n */\n\nclass BaseRecordAttributes {\n    id : string | number\n\n    constructor( record : Record, x : AttributesValues, options : TransactionOptions ) {\n        this.id = x.id;\n    }\n}\n\nRecord.prototype.Attributes = BaseRecordAttributes;\n\nclass BaseRecordAttributesCopy {\n    id : string | number\n\n    constructor( x : AttributesValues ) {\n        this.id = x.id;\n    }\n}\n\nRecord.prototype.AttributesCopy = BaseRecordAttributesCopy;\n\nconst IdAttribute = AnyType.create({ value : void 0 }, 'id' );\nRecord.prototype._attributes = { id : IdAttribute };\nRecord.prototype._attributesArray = [ IdAttribute ];\nRecord._attribute = AggregatedType;\n\nimport { shouldBeAnObject } from './attributes'\n\nfunction typeCheck( record : Record, values : object ){\n    if( shouldBeAnObject( record, values ) ){\n        const { _attributes } = record;\n        let unknown : string[];\n\n        for( let name in values ){\n            if( !_attributes[ name ] ){\n                unknown || ( unknown = [] );\n                unknown.push( `'${ name }'` );\n            }\n        }\n\n        if( unknown ){\n            record._log( 'warn', `undefined attributes ${ unknown.join(', ')} are ignored.`, { values } );\n        }\n    }\n}","import { Record, RecordDefinition } from './record'\nimport { Mixable, tools, predefine, define, MixinsState } from '../object-plus'\nimport compile from './attributes'\nimport { Transactional } from '../transactions'\n\nimport { createSharedTypeSpec, AggregatedType, MSDateType, TimestampType, NumericType, SharedType } from './attributes'\n\nexport * from './attributes'\nexport { Record }\n\nconst { assign, defaults, omit, getBaseClass } = tools;\n\nRecord.onExtend = function( this : typeof Record, BaseClass : typeof Record ){\n    Transactional.onExtend.call( this, BaseClass );\n\n    // Create the default collection\n    const Class = this;\n\n    @predefine class DefaultCollection extends BaseClass.Collection<any> {\n        static model = Class;\n    }\n\n    this.DefaultCollection = DefaultCollection;\n\n    // If there are no collection defined in statics, use the default collection.\n    // It will appear in onDefine's definition, overriding all other settings.\n    if( Class.Collection === BaseClass.Collection ){\n        this.Collection = DefaultCollection;\n    }\n\n    // Create Class.shared modifier\n    createSharedTypeSpec( this, SharedType );\n}\n\nRecord.onDefine = function( definition : RecordDefinition, BaseClass : typeof Record ){\n    const baseProto : Record = BaseClass.prototype;\n\n    // Compile attributes spec, creating definition mixin.\n    const { properties, _localEvents, ...dynamicMixin } = compile( this.attributes = getAttributes( definition ), baseProto._attributes );\n    assign( this.prototype, dynamicMixin );\n    \n    definition.properties = defaults( definition.properties || {}, properties );\n    definition._localEvents = _localEvents;\n    \n    Transactional.onDefine.call( this, definition, BaseClass );\n\n    // Finalize the definition of the default collection.\n    this.DefaultCollection.define( definition.collection || {} );\n\n    // assign collection from the definition.\n    this.Collection = definition.Collection;\n    this.Collection.prototype.model = this;\n\n    if( definition.endpoint ) this.Collection.prototype._endpoint = definition.endpoint;    \n}\n\nRecord._attribute = AggregatedType;\ncreateSharedTypeSpec( Record, SharedType );\n\nfunction getAttributes({ defaults, attributes, idAttribute } : RecordDefinition ) {\n    const definition = attributes || defaults || {};\n    \n    // If there is an undeclared idAttribute, add its definition as untyped generic attribute.\n    if( idAttribute && !( idAttribute in definition ) ){\n        definition[ idAttribute ] = void 0;\n    }\n\n    return definition;\n}\n\ndeclare var Reflect;\n\nexport function attr( proto, attrName? ) : any {\n    if( attrName ){\n        // Called without the spec. Extract the type.\n        if( typeof Reflect !== 'undefined' && Reflect.getMetadata ){\n            Reflect\n                .getMetadata( \"design:type\", proto, attrName )\n                .asProp( proto, attrName );\n        }\n        else{\n            proto._log( 'error', 'Add import \"reflect-metadata\"; as the first line of your app.' );\n        }\n    }\n    else{\n        return proto.asProp;\n    }\n}\n\nexport function prop( spec ) : any {\n    return spec.asProp;\n}","import { Record } from '../record'\nimport { Owner, Transaction, ItemsBehavior,\n        TransactionOptions, Transactional, transactionApi } from '../transactions'\n\nimport { eventsApi, tools } from '../object-plus'\n\nconst { EventMap, trigger2, trigger3, on, off } = eventsApi,\n      { commit, markAsDirty } = transactionApi,\n      _aquire = transactionApi.aquire, _free = transactionApi.free;\n\n/** @private */\nexport interface CollectionCore extends Transactional, Owner {\n    _byId : IdIndex\n    models : Record[]\n    model : typeof Record\n    idAttribute : string // TODO: Refactor inconsistent idAttribute usage\n    _comparator : Comparator\n    get( objOrId : string | Record | Object ) : Record    \n    _itemEvents? : eventsApi.EventMap\n    _shared : number\n    _aggregationError : Record[]\n\n    _log( level : string, text : string, value : any ) : void\n}\n\n// Collection's manipulation methods elements\nexport type Elements = ( Object | Record )[];\n\nexport interface CollectionOptions extends TransactionOptions {\n    sort? : boolean\n}\n\nexport type Comparator = ( a : Record, b : Record ) => number;  \n\n/** @private */\nexport function dispose( collection : CollectionCore ) : Record[]{\n    const { models } = collection;\n\n    collection.models = [];\n    collection._byId  = {};\n\n    freeAll( collection, models );\n    return models;\n}\n\n/** @private */\nexport function convertAndAquire( collection : CollectionCore, attrs : {} | Record, options : CollectionOptions ){\n    const { model } = collection;\n    \n    let record : Record;\n\n    if( collection._shared ){\n        record = attrs instanceof model ? attrs : <Record>model.create( attrs, options );\n\n        if( collection._shared & ItemsBehavior.listen ){\n            on( record, record._changeEventName, collection._onChildrenChange, collection );\n        }\n    }\n    else{\n        record = attrs instanceof model ? ( options.merge ? attrs.clone() : attrs ) : <Record>model.create( attrs, options );\n\n        if( !_aquire( collection, record ) ){\n            const errors = collection._aggregationError || ( collection._aggregationError = [] );\n            errors.push( record );\n        }\n    }    \n\n    // Subscribe for events...\n    const { _itemEvents } = collection;\n    _itemEvents && _itemEvents.subscribe( collection, record );\n\n    return record;\n}\n\n/** @private */\nexport function free( owner : CollectionCore, child : Record, unset? : boolean ) : void {\n    if( owner._shared ){\n        if( owner._shared & ItemsBehavior.listen ){\n            off( child, child._changeEventName, owner._onChildrenChange, owner );\n        }\n    }\n    else{\n        _free( owner, child );\n        unset || child.dispose();\n    }\n\n    const { _itemEvents } = owner;\n    _itemEvents && _itemEvents.unsubscribe( owner, child );\n}\n\n/** @private */\nexport function freeAll( collection : CollectionCore, children : Record[] ) : Record[] {\n    for( let child of children ){\n        free( collection, child );\n    }\n\n    return children;\n}\n\n/**\n * Silently sort collection, if its required. Returns true if sort happened.\n * @private\n */   \nexport function sortElements( collection : CollectionCore, options : CollectionOptions ) : boolean {\n    let { _comparator } = collection;\n    if( _comparator && options.sort !== false ){\n        collection.models.sort( _comparator );\n        return true;\n    }\n\n    return false;\n}\n\n/**********************************\n * Collection Index\n * @private \n */\nexport interface IdIndex {\n    [ id : string ] : Record\n}\n\n/** @private Add record */ \nexport function addIndex( index : IdIndex, model : Record ) : void {\n    index[ model.cid ] = model;\n    var id             = model.id;\n    \n    if( id || id === 0 ){\n        index[ id ] = model;\n    }\n}\n\n/** @private Remove record */ \nexport function removeIndex( index : IdIndex, model : Record ) : void {\n    delete index[ model.cid ];\n    var id = model.id;\n    if( id || id === 0 ){\n        delete index[ id ];\n    }\n}\n\nexport function updateIndex( index : IdIndex, model : Record ){\n    delete index[ model.previous( model.idAttribute ) ];\n\n    const { id } = model;\n    id == null || ( index[ id ] = model );\n}\n\n/***\n * In Collections, transactions appears only when\n * add remove or change events might be emitted.\n * reset doesn't require transaction.\n * \n * Transaction holds information regarding events, and knows how to emit them.\n * \n * Two major optimization cases.\n * 1) Population of an empty collection\n * 2) Update of the collection (no or little changes) - it's crucial to reject empty transactions.\n */\n\n\n// Transaction class. Implements two-phase transactions on object's tree.\n/** @private */ \nexport class CollectionTransaction implements Transaction {\n    // open transaction\n    constructor(    public object : CollectionCore,\n                    public isRoot : boolean,\n                    public added : Record[],\n                    public removed : Record[],\n                    public nested : Transaction[],\n                    public sorted : boolean ){}\n\n    // commit transaction\n    commit( initiator? : Transactional ){\n        const { nested, object } = this,\n              { _isDirty } = object;\n\n        // Commit all nested transactions...\n        for( let transaction of nested ){\n            transaction.commit( object );\n        }\n\n        if( object._aggregationError ){\n            logAggregationError( object );\n        }\n\n        // Just trigger 'change' on collection, it must be already triggered for models during nested commits.\n        // ??? TODO: do it in nested transactions loop? This way appears to be more correct. \n        for( let transaction of nested ){\n            trigger2( object, 'change', transaction.object, _isDirty );\n        }\n\n        // Notify listeners on attribute changes...\n        const { added, removed } = this;\n\n        // Trigger `add` events for both model and collection.\n        for( let record of added ){\n            trigger3( record, 'add', record, object, _isDirty );\n            trigger3( object, 'add', record, object, _isDirty );\n        }\n\n        // Trigger `remove` events for both model and collection.\n        for( let record of removed ){\n            trigger3( record, 'remove', record, object, _isDirty );\n            trigger3( object, 'remove', record, object, _isDirty );\n        }\n\n        if( this.sorted ){\n            trigger2( object, 'sort', object, _isDirty );\n        }\n\n        if( added.length || removed.length ){\n            trigger2( object, 'update', object, _isDirty );\n        }\n\n        this.isRoot && commit( object, initiator );\n    }\n}\n\nexport function logAggregationError( collection : CollectionCore ){\n    collection._log( 'error', 'added records already have an owner', collection._aggregationError );\n    collection._aggregationError = void 0;\n}","import { Transaction, transactionApi } from '../transactions'\nimport { CollectionTransaction, logAggregationError, sortElements, convertAndAquire, free, CollectionOptions, addIndex, updateIndex, CollectionCore } from './commons'\nimport { Record } from '../record'\n\nconst { begin, commit, markAsDirty } = transactionApi;\n\nexport interface AddOptions extends CollectionOptions {\n    at? : number \n}\n\n/** @private */\nexport function addTransaction( collection : CollectionCore, items : any[], options : AddOptions, merge? : boolean ){\n    const isRoot = begin( collection ),\n          nested : Transaction[]= [];\n\n    var added = appendElements( collection, items, nested, options, merge );\n\n    if( added.length || nested.length ){\n        let needSort = sortOrMoveElements( collection, added, options );\n        if( markAsDirty( collection, options ) ){\n            return new CollectionTransaction( collection, isRoot, added, [], nested, needSort );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection );\n    }\n\n    // No changes...\n    isRoot && commit( collection );\n};\n\n// Handle sort or insert at options for add operation. Reurns true if sort happened.\n/** @private */ \nfunction sortOrMoveElements( collection : CollectionCore, added : Record[], options : AddOptions ) : boolean {\n    let at = options.at;\n\n    // if `at` option is given, it overrides sorting option...\n    if( at != null ){\n        // Take an original collection's length. \n        const length = collection.models.length - added.length;\n\n        // Crazy Backbone rules about `at` index. I don't know what that guys smoke.\n        at = Number( at );\n        if( at < 0 ) at += length + 1;\n        if( at < 0 ) at = 0;\n        if( at > length ) at = length;\n\n        // Move added elements to desired position. In place.\n        moveElements( collection.models, at, added );\n        return false;\n    }\n\n    return sortElements( collection, options );\n}\n\n/** @private */\nfunction moveElements( source : any[], at : number, added : any[] ) : void {\n    for( var j = source.length - 1, i = j - added.length; i >= at; i--, j-- ){\n        source[ j ] = source[ i ];\n    }\n\n    for( i = 0, j = at; i < added.length; i++, j++ ){\n        source[ j ] = added[ i ];\n    }\n}\n\n// append data to model and index\n/** @private */\nfunction appendElements( collection : CollectionCore, a_items : any[], nested : Transaction[], a_options : AddOptions, forceMerge : boolean ){\n    var { _byId, models } = collection,\n        merge       = ( forceMerge || a_options.merge ) && !collection._shared,\n        parse       = a_options.parse,\n        idAttribute = collection.model.prototype.idAttribute,\n        prevLength = models.length;\n\n    for( const item of a_items ){\n        let model = item ? _byId[ item[ idAttribute ] ] || _byId[ item.cid ] : null;\n\n        if( model ){\n            if( merge && item !== model ){\n                var attrs = item.attributes || item;\n                const transaction = model._createTransaction( attrs, a_options );\n                transaction && nested.push( transaction );\n\n                if( model.hasChanged( idAttribute ) ){\n                    updateIndex( _byId, model );\n                }\n            }\n        }\n        else{\n            model = convertAndAquire( collection, item, a_options );\n            models.push( model );\n            addIndex( _byId, model );\n        }\n    }\n\n    return models.slice( prevLength );\n}\n","import { Transaction, transactionApi } from '../transactions'\nimport { CollectionTransaction, logAggregationError, IdIndex, convertAndAquire, free, sortElements, CollectionOptions, addIndex, CollectionCore, Elements, freeAll } from './commons'\nimport { Record } from '../record'\n\nconst { begin, commit, markAsDirty } = transactionApi;\n\n/** @private */\nconst silentOptions = { silent : true };\n\n/** @private */\nexport function emptySetTransaction( collection : CollectionCore, items : Elements, options : CollectionOptions, silent? : boolean ){\n    const isRoot = begin( collection );\n\n    const added = _reallocateEmpty( collection, items, options );\n\n    if( added.length ){\n        const needSort = sortElements( collection, options );\n\n        if( markAsDirty( collection, silent ? silentOptions : options ) ){\n            // 'added' is the reference to this.models. Need to copy it.\n            return new CollectionTransaction( collection, isRoot, added.slice(), [], [], needSort );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection );\n    }\n\n    // No changes...\n    isRoot && commit( collection );\n};\n\n/** @private */\nexport function setTransaction( collection, items, options ){\n    const isRoot = begin( collection ),\n          nested = [];\n\n    var previous = collection.models,\n        added    = _reallocate( collection, items, nested, options );\n\n    const reusedCount = collection.models.length - added.length,\n          removed = reusedCount < previous.length ? (\n                        reusedCount ? _garbageCollect( collection, previous ) :\n                                        freeAll( collection, previous )\n                    ) : [];                    \n    \n    const addedOrChanged = nested.length || added.length,\n          // As we are reallocating models array, it needs to be sorted even if there are no changes.\n          sorted = ( sortElements( collection, options ) && addedOrChanged ) || added.length || options.sorted;\n\n    if( addedOrChanged || removed.length || sorted ){\n        if( markAsDirty( collection, options ) ){ \n            return new CollectionTransaction( collection, isRoot, added, removed, nested, sorted );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection );\n    }\n\n    isRoot && commit( collection );\n};\n\n// Remove references to all previous elements, which are not present in collection.\n// Returns an array with removed elements.\n/** @private */\nfunction _garbageCollect( collection : CollectionCore, previous : Record[] ) : Record[]{\n    const { _byId }  = collection,\n          removed = [];\n\n    // Filter out removed models and remove them from the index...\n    for( let record of previous ){\n        if( !_byId[ record.cid ] ){\n            removed.push( record );\n            free( collection, record );\n        }\n    }\n\n    return removed;\n}\n\n// reallocate model and index\n/** @private */\nfunction _reallocate( collection : CollectionCore, source : any[], nested : Transaction[], options ){\n    var models      = Array( source.length ),\n        _byId : IdIndex = {},\n        merge       = ( options.merge == null ? true : options.merge ) && !collection._shared,\n        _prevById   = collection._byId,\n        prevModels  = collection.models, \n        idAttribute = collection.model.prototype.idAttribute,\n        toAdd       = [],\n        orderKept   = true;\n\n    // for each item in source set...\n    for( var i = 0, j = 0; i < source.length; i++ ){\n        var item  = source[ i ],\n            model : Record = null;\n\n        if( item ){\n            var id  = item[ idAttribute ],\n                cid = item.cid;\n\n            if( _byId[ id ] || _byId[ cid ] ) continue;\n\n            model = _prevById[ id ] || _prevById[ cid ];\n        }\n\n        if( model ){\n            if( merge && item !== model ){\n                if( orderKept && prevModels[ j ] !== model ) orderKept = false;\n\n                var attrs = item.attributes || item;\n                const transaction = model._createTransaction( attrs, options );\n                transaction && nested.push( transaction );\n            }\n        }\n        else{\n            model = convertAndAquire( collection, item, options );\n            toAdd.push( model );\n        }\n\n        models[ j++ ] = model;\n        addIndex( _byId, model );\n    }\n\n    models.length = j;\n    collection.models   = models;\n    collection._byId    = _byId;\n\n    if( !orderKept ) options.sorted = true;\n\n    return toAdd;\n}\n\n/** @private */\nfunction _reallocateEmpty( self, source, options ){\n    var len         = source ? source.length : 0,\n        models      = Array( len ),\n        _byId : IdIndex = {},\n        idAttribute = self.model.prototype.idAttribute;\n\n    for( var i = 0, j = 0; i < len; i++ ){\n        var src = source[ i ];\n\n        if( src && ( _byId[ src[ idAttribute ] ] || _byId[ src.cid ] ) ){\n            continue;\n        }\n\n        var model = convertAndAquire( self, src, options );\n        models[ j++ ] = model;\n        addIndex( _byId, model );\n    }\n\n    models.length = j;\n    self._byId    = _byId;\n\n    return self.models = models;\n}","/*************\n * Remove items from collections.\n * \n * Cannot be a part of two-phase transaction on object tree.\n * Can be executed in the scope of ad-hoc transaction or from the trigger, though.\n *\n * Implemented with low-level API. \n * Most frequent operation - single element remove. Thus, it have the fast-path.\n */\n\nimport { Record } from '../record'\nimport { free, CollectionCore, CollectionTransaction, removeIndex } from './commons'\nimport { eventsApi } from '../object-plus'\nimport { TransactionOptions, transactionApi } from '../transactions' \n\nconst { trigger2, trigger3 } = eventsApi,\n    { markAsDirty, begin, commit } = transactionApi;\n\n/** @private */\nexport function removeOne( collection : CollectionCore, el : Record | {} | string, options : TransactionOptions ) : Record {\n    var model : Record = collection.get( el );\n\n    if( model ){\n        const isRoot = begin( collection ),\n              models = collection.models;\n\n        // Remove model form the collection. \n        models.splice( models.indexOf( model ), 1 );\n        removeIndex( collection._byId, model );\n        \n        // Mark transaction as dirty. \n        const notify = markAsDirty( collection, options );\n\n        // Send out events.\n        if( notify ){\n            trigger3( model, 'remove', model, collection, options );\n            trigger3( collection, 'remove', model, collection, options );\n        } \n\n        free( collection, model, options.unset );\n\n        notify && trigger2( collection, 'update', collection, options );\n\n        // Commit transaction.\n        isRoot && commit( collection );\n\n        return model;\n    }\n};\n\n/** Optimized for removing many elements\n * 1. Remove elements from the index, checking for duplicates\n * 2. Create new models array matching index\n * 3. Send notifications and remove references\n */\n\n/** @private */\nexport function removeMany( collection : CollectionCore, toRemove : any[], options ){\n    const removed = _removeFromIndex( collection, toRemove, options.unset );\n    if( removed.length ){\n        const isRoot = begin( collection );\n\n        _reallocate( collection, removed.length );\n\n        if( markAsDirty( collection, options ) ){\n            const transaction = new CollectionTransaction( collection, isRoot, [], removed, [], false );\n            transaction.commit();\n        }\n        else{\n            // Commit transaction.\n            isRoot && commit( collection );\n        }\n    }\n\n    return removed;\n};\n\n// remove models from the index...\n/** @private */\nfunction _removeFromIndex( collection, toRemove, unset : boolean ){\n    var removed = Array( toRemove.length ),\n        _byId   = collection._byId;\n\n    for( var i = 0, j = 0; i < toRemove.length; i++ ){\n        var model = collection.get( toRemove[ i ] );\n        if( model ){\n            removed[ j++ ] = model;\n            removeIndex( _byId, model );\n            free( collection, model, unset );\n        }\n    }\n\n    removed.length = j;\n\n    return removed;\n}\n\n// Allocate new models array removing models not present in the index.\n/** @private */\nfunction _reallocate( collection, removed ){\n    var prev   = collection.models,\n        models = collection.models = Array( prev.length - removed ),\n        _byId = collection._byId;\n\n    for( var i = 0, j = 0; i < prev.length; i++ ){\n        var model = prev[ i ];\n\n        if( _byId[ model.cid ] ){\n            models[ j++ ] = model;\n        }\n    }\n\n    models.length = j;\n}","import { define, tools, eventsApi, EventMap, definitions, mixinRules, EventsDefinition, Mixable } from '../object-plus'\nimport { ItemsBehavior, transactionApi, Transactional, CloneOptions, Transaction, TransactionOptions, TransactionalDefinition, Owner } from '../transactions'\nimport { Record, SharedType, AggregatedType, createSharedTypeSpec } from '../record'\n\nimport { IdIndex, free, sortElements, dispose, Elements, CollectionCore, addIndex, removeIndex, updateIndex, Comparator, CollectionTransaction } from './commons'\nimport { addTransaction, AddOptions } from './add'\nimport { setTransaction, emptySetTransaction } from './set'\nimport { removeOne, removeMany } from './remove'\nimport { IOPromise, startIO } from '../io-tools'\n\nconst { trigger2, on, off } = eventsApi,\n    { begin, commit, markAsDirty } = transactionApi,\n    { omit, log, assign, defaults, assignToClassProto } = tools;\n\nlet _count = 0;\n\nexport type GenericComparator = string | ( ( x : Record ) => number ) | ( ( a : Record, b : Record ) => number ); \n\nexport interface CollectionOptions extends TransactionOptions {\n    comparator? : GenericComparator\n    model? : typeof Record\n}\n\nexport type Predicate<R> = ( val : R, key : number ) => boolean | object;\n\nexport interface CollectionDefinition extends TransactionalDefinition {\n    model? : typeof Record,\n    itemEvents? : EventsDefinition\n    _itemEvents? : EventMap\n}\n\nconst slice = Array.prototype.slice;\n\nclass CollectionRefsType extends SharedType {\n    static defaultValue = [];\n}\n\n@define({\n    // Default client id prefix \n    cidPrefix : 'c',\n    model : Record,\n    _changeEventName : 'changes',\n    _aggregationError : null\n})\n@definitions({\n    comparator : mixinRules.value,\n    model : mixinRules.protoValue,\n    itemEvents : mixinRules.merge\n})\nexport class Collection< R extends Record = Record> extends Transactional implements CollectionCore {\n    _shared : number\n    _aggregationError : R[]\n\n    static Subset : typeof Collection\n    static Refs : typeof Collection\n    static _SubsetOf : typeof Collection\n    \n    createSubset( models : ElementsArg, options ){\n        const SubsetOf = (<any>this.constructor).subsetOf( this ).options.type,\n            subset   = new SubsetOf( models, options );\n            \n        subset.resolve( this );\n        return subset;\n    }\n\n    static onExtend( BaseClass : typeof Transactional ){\n        // Cached subset collection must not be inherited.\n        const Ctor = this;\n        this._SubsetOf = null;\n\n        function RefsCollection( a, b, listen? ){\n            Ctor.call( this, a, b, ItemsBehavior.share | ( listen ? ItemsBehavior.listen : 0 ) );\n        }\n\n        Mixable.mixins.populate( RefsCollection );\n        \n        RefsCollection.prototype = this.prototype;\n        RefsCollection._attribute = CollectionRefsType;\n\n        this.Refs = this.Subset = <any>RefsCollection;\n\n        Transactional.onExtend.call( this, BaseClass );\n        createSharedTypeSpec( this, SharedType );\n    }\n    \n    static onDefine( definition : CollectionDefinition, BaseClass : any ){\n        if( definition.itemEvents ){\n            const eventsMap = new EventMap( BaseClass.prototype._itemEvents );\n            eventsMap.addEventsMap( definition.itemEvents );\n            this.prototype._itemEvents = eventsMap;\n        }\n\n        if( definition.comparator !== void 0 ) this.prototype.comparator = definition.comparator;\n\n        Transactional.onDefine.call( this, definition );\n    }\n\n    static subsetOf : ( collectionReference : any ) => any;\n    \n    _itemEvents : EventMap\n\n    /***********************************\n     * Core Members\n     */\n    // Array of the records\n    models : R[]\n\n    // Polymorphic accessor for aggregated attribute's canBeUpdated().\n    get __inner_state__(){ return this.models; }\n\n    // Index by id and cid\n    _byId : { [ id : string ] : R }\n\n    set comparator( x : GenericComparator ){\n        let compare;\n\n        switch( typeof x ){\n            case 'string' :\n                this._comparator = ( a, b ) => {\n                    const aa = a[ <string>x ], bb = b[ <string>x ];\n                    if( aa === bb ) return 0;\n                    return aa < bb ? -1 : + 1;\n                } \n                break;\n            case 'function' :\n                if( x.length === 1 ){\n                    this._comparator = ( a, b ) => {\n                        const aa = (<any>x).call( this, a ), bb = (<any>x).call( this, b );\n                        if( aa === bb ) return 0;\n                        return aa < bb ? -1 : + 1;\n                    }\n                }\n                else{\n                    this._comparator = ( a, b ) => (<any>x).call( this, a, b );\n                }\n                break;\n                \n            default :\n                this._comparator = null;\n        }\n    }\n    \n    // TODO: Improve typing\n    getStore() : Transactional {\n        return this._store || ( this._store = this._owner ? this._owner.getStore() : this._defaultStore );\n    }\n\n    _store : Transactional\n\n    get comparator(){ return this._comparator; }\n    _comparator : ( a : R, b : R ) => number\n\n    _onChildrenChange( record : R, options : TransactionOptions = {}, initiator? : Transactional ){\n        // Ignore updates from nested transactions.\n        if( initiator === this ) return;\n\n        const { idAttribute } = this;\n\n        if( record.hasChanged( idAttribute ) ){\n            updateIndex( this._byId, record );\n        }\n\n        const isRoot = begin( this );\n\n        if( markAsDirty( this, options ) ){\n            // Forward change event from the record.\n            trigger2( this, 'change', record, options )\n        }\n\n        isRoot && commit( this );\n    }\n\n    get( objOrId : string | R | Object ) : R {\n        if( objOrId == null ) return;\n\n        if( typeof objOrId === 'object' ){\n            const id = objOrId[ this.idAttribute ];\n            return ( id !== void 0 && this._byId[ id ] ) || this._byId[ (<R>objOrId).cid ];\n        }\n        else{\n            return this._byId[ objOrId ];\n        }        \n    }\n\n    each( iteratee : ( val : R, key : number ) => void, context? : any ){\n        const fun = bindContext( iteratee, context ),\n            { models } = this;\n\n        for( let i = 0; i < models.length; i++ ){\n            fun( models[ i ], i ); \n        }\n    }\n\n    every( iteratee : Predicate<R>, context? : any ) : boolean {\n        const fun = toPredicateFunction( iteratee, context ),\n            { models } = this;\n\n        for( let i = 0; i < models.length; i++ ){\n            if( !fun( models[ i ], i ) ) return false;\n        }\n\n        return true;\n    }\n\n    filter( iteratee : Predicate<R>, context? : any ) : R[] {\n        const fun = toPredicateFunction( iteratee, context ),\n            { models } = this;\n\n        return this.map( ( x, i ) => fun( x, i ) ? x : void 0 );\n    }\n\n    find( iteratee : Predicate<R>, context? : any ) : R {\n        const fun = toPredicateFunction( iteratee, context ),\n        { models } = this;\n\n        for( let i = 0; i < models.length; i++ ){\n            if( fun( models[ i ], i ) ) return models[ i ];\n        }\n\n        return null;\n    }\n\n    some( iteratee : Predicate<R>, context? : any ) : boolean {\n        return Boolean( this.find( iteratee, context ) );\n    }\n\n    map< T >( iteratee : ( val : R, key : number ) => T, context? : any ) : T[]{\n        const fun = bindContext( iteratee, context ),\n            { models } = this,\n            mapped = Array( models.length );\n\n        let j = 0;\n\n        for( let i = 0; i < models.length; i++ ){\n            const x = fun( models[ i ], i );\n            x === void 0 || ( mapped[ j++ ] = x ); \n        }\n\n        mapped.length = j;\n\n        return mapped;\n    }\n\n    _validateNested( errors : {} ) : number {\n        // Don't validate if not aggregated.\n        if( this._shared ) return 0;\n\n        let count = 0;\n\n        this.each( record => {\n            const error = record.validationError;\n            if( error ){\n                errors[ record.cid ] = error;\n                count++;\n            }\n        });\n\n        return count;\n    }\n\n    model : typeof Record\n\n    // idAttribute extracted from the model type.\n    idAttribute : string\n\n    constructor( records? : ( R | {} )[], options : CollectionOptions = {}, shared? : number ){\n        super( _count++ );\n        this.models = [];\n        this._byId = {};\n        \n        this.comparator  = this.comparator;\n\n        if( options.comparator !== void 0 ){\n            this.comparator = options.comparator;\n            options.comparator = void 0;\n        }\n        \n        this.model       = this.model;\n        \n        if( options.model ){\n            this.model = options.model;\n            options.model = void 0;\n        }\n\n        this.idAttribute = this.model.prototype.idAttribute; //TODO: Remove?\n\n        this._shared = shared || 0;\n\n        if( records ){\n            const elements = toElements( this, records, options );\n            emptySetTransaction( this, elements, options, true );\n        }\n\n        this.initialize.apply( this, arguments );\n\n        if( this._localEvents ) this._localEvents.subscribe( this, this );\n    }\n\n    initialize(){}\n\n    get length() : number { return this.models.length; }\n    first() : R { return this.models[ 0 ]; }\n    last() : R { return this.models[ this.models.length - 1 ]; }\n    at( a_index : number ) : R {\n        const index = a_index < 0 ? a_index + this.models.length : a_index;    \n        return this.models[ index ];\n    }\n\n    // Deeply clone collection, optionally setting new owner.\n    clone( options : CloneOptions = {} ) : this {\n        const models = this._shared & ItemsBehavior.share ? this.models : this.map( model => model.clone() ),\n              copy : this = new (<any>this.constructor)( models, { model : this.model, comparator : this.comparator }, this._shared );\n        \n        if( options.pinStore ) copy._defaultStore = this.getStore();\n        \n        return copy;\n    }\n\n    toJSON() : Object[] {\n        return this.models.map( model => model.toJSON() );\n    }\n\n    // Apply bulk in-place object update in scope of ad-hoc transaction \n    set( elements : ElementsArg = [], options : TransactionOptions = {} ) : this {\n        if( (<any>options).add !== void 0 ){\n            this._log( 'warn', \"Collection.set doesn't support 'add' option, behaving as if options.add === true.\", options );\n        }\n\n        // Handle reset option here - no way it will be populated from the top as nested transaction.\n        if( options.reset ){\n            this.reset( elements, options )\n        }\n        else{\n            const transaction = this._createTransaction( elements, options );\n            transaction && transaction.commit();\n        } \n\n        return this;    \n    }\n\n        /**\n     * Enable or disable live updates.\n     * \n     * `true` enables full collection synchronization.\n     * `false` cancel live updates.\n     * `json => true | false` - filter updates\n     */\n    liveUpdates( enabled : LiveUpdatesOption ) : IOPromise<any> {\n        if( enabled ){\n            this.liveUpdates( false );\n\n            const filter = typeof enabled === 'function' ? enabled : () => true;\n\n            this._liveUpdates = {\n                updated : json => {\n                    filter( json ) && this.add( json, { parse : true, merge : true } );\n                },\n\n                removed : id => this.remove( id )\n            };\n\n            return this.getEndpoint().subscribe( this._liveUpdates, this );\n        }\n        else{\n            if( this._liveUpdates ){\n                this.getEndpoint().unsubscribe( this._liveUpdates, this );\n                this._liveUpdates = null;\n            }\n        }\n    }\n\n    _liveUpdates : object\n\n    fetch( a_options : { liveUpdates? : LiveUpdatesOption } & TransactionOptions = {} ) : IOPromise<any> {\n        const options = { parse : true, ...a_options },\n            endpoint = this.getEndpoint();\n\n        return startIO(\n            this,\n            endpoint.list( options, this ),\n            options,\n\n            json => {\n                let result : any = this.set( json, { parse : true, ...options } as TransactionOptions );\n                \n                if( options.liveUpdates ){\n                    result = this.liveUpdates( options.liveUpdates );\n                }\n\n                return result;\n            }\n        );\n    }\n\n    dispose() : void {\n        if( this._disposed ) return;\n\n        const aggregated = !this._shared;\n\n        for( let record of this.models ){\n            free( this, record );\n\n            if( aggregated ) record.dispose();\n        }\n\n        this.liveUpdates( false );\n\n        super.dispose();\n    }\n\n    reset( a_elements? : ElementsArg, options : TransactionOptions = {} ) : R[] {\n        const isRoot = begin( this ),\n              previousModels = this.models;\n\n        // Make all changes required, but be silent.\n        if( a_elements ){            \n            emptySetTransaction( this, toElements( this, a_elements, options ), options, true );\n        }\n        else{\n            this._byId = {};\n            this.models = [];\n        }\n\n        markAsDirty( this, options );\n\n        options.silent || trigger2( this, 'reset', this, defaults( { previousModels : previousModels }, options ) );\n\n        // Dispose models which are not in the updated collection.\n        const { _byId } = this;\n        \n        for( let toDispose of previousModels ){\n            _byId[ toDispose.cid ] || free( this, toDispose );\n        }\n\n        isRoot && commit( this );\n        return this.models;\n    }\n\n    // Add elements to collection.\n    add( a_elements : ElementsArg , options : AddOptions = {} ){\n        const elements = toElements( this, a_elements, options ),\n              transaction = this.models.length ?\n                    addTransaction( this, elements, options ) :\n                    emptySetTransaction( this, elements, options );\n\n        if( transaction ){\n            transaction.commit();\n            return transaction.added;\n        }\n    }\n\n    // Remove elements. \n    remove( recordsOrIds : any, options : CollectionOptions = {} ) : R[] | R {\n        if( recordsOrIds ){\n            return Array.isArray( recordsOrIds ) ?\n                        removeMany( this, recordsOrIds, options ) as R[]:\n                        removeOne( this, recordsOrIds, options ) as R;\n        }\n\n        return [];\n    }\n\n    // Apply bulk object update without any notifications, and return open transaction.\n    // Used internally to implement two-phase commit.   \n    _createTransaction( a_elements : ElementsArg, options : TransactionOptions = {} ) : CollectionTransaction | void {\n        const elements = toElements( this, a_elements, options );\n\n        if( this.models.length ){\n            return options.remove === false ?\n                        addTransaction( this, elements, options, true ) :\n                        setTransaction( this, elements, options );\n        }\n        else{\n            return emptySetTransaction( this, elements, options );\n        }\n    }\n\n    static _attribute = AggregatedType;\n\n    /***********************************\n     * Collection manipulation methods\n     */\n\n    pluck( key : keyof R ) : any[] {\n        return this.models.map( model => model[ key ] );\n    }\n\n    sort( options : TransactionOptions = {} ) : this {\n        if( sortElements( this, options ) ){\n            const isRoot = begin( this );\n            \n            if( markAsDirty( this, options ) ){\n                trigger2( this, 'sort', this, options );\n            }\n\n            isRoot && commit( this );\n        }\n\n        return this;\n    }\n\n    // Add a model to the end of the collection.\n    push(model : ElementsArg, options : CollectionOptions ) {\n      return this.add(model, assign({at: this.length}, options));\n    }\n\n    // Remove a model from the end of the collection.\n    pop( options : CollectionOptions ) : R {\n      var model = this.at(this.length - 1);\n      this.remove(model, { unset : true, ...options });\n      return model;\n    }\n\n    // Remove and return given model.\n    // TODO: do not dispose the model for aggregated collection.\n    unset( modelOrId : R | string, options? ) : R {\n        const value = this.get( modelOrId );\n        this.remove( modelOrId, { unset : true, ...options } );\n        return value;\n    }\n\n    // Add a model to the beginning of the collection.\n    unshift(model : ElementsArg, options : CollectionOptions ) {\n      return this.add(model, assign({at: 0}, options));\n    }\n\n    // Remove a model from the beginning of the collection.\n    shift( options? : CollectionOptions ) : R {\n      var model = this.at(0);\n      this.remove( model, { unset : true, ...options } );\n      return model;\n    }\n\n    // Slice out a sub-array of models from the collection.\n    slice() : R[] {\n      return slice.apply(this.models, arguments);\n    }\n\n    indexOf( modelOrId : any ) : number {\n        const record = this.get( modelOrId );\n        return this.models.indexOf( record );\n    }\n\n    modelId( attrs : {} ) : any {\n        return attrs[ this.model.prototype.idAttribute ];\n    }\n\n    // Toggle model in collection.\n    toggle( model : R, a_next? : boolean ) : boolean {\n        var prev = Boolean( this.get( model ) ),\n            next = a_next === void 0 ? !prev : Boolean( a_next );\n\n        if( prev !== next ){\n            if( prev ){\n                this.remove( model );\n            }\n            else{\n                this.add( model );\n            }\n        }\n\n        return next;\n    }\n\n    _log( level : tools.LogLevel, text : string, value ) : void {\n        tools.log( level, `[Collection Update] ${ this.model.prototype.getClassName() }.${ this.getClassName() }: ` + text, {\n            Argument : value,\n            'Attributes spec' : this.model.prototype._attributes\n        });\n    }\n\n    getClassName() : string {\n        return super.getClassName() || 'Collection';\n    }\n}\n\nexport type LiveUpdatesOption = boolean | ( ( x : any ) => boolean );\n\nexport type ElementsArg = Object | Record | Object[] | Record[];\n\n// TODO: make is safe for parse to return null (?)\nfunction toElements( collection : Collection, elements : ElementsArg, options : CollectionOptions ) : Elements {\n    const parsed = options.parse ? collection.parse( elements, options ) : elements; \n    return Array.isArray( parsed ) ? parsed : [ parsed ];\n}\n\ncreateSharedTypeSpec( Collection, SharedType );\n\nRecord.Collection = <any>Collection;\n\nfunction bindContext( fun : Function, context? : any ){\n    return context !== void 0 ? ( v, k ) => fun.call( context, v, k ) : fun;\n}\n\nfunction toPredicateFunction<R>( iteratee : Predicate<R>, context : any ){\n    if( typeof iteratee === 'object' ){\n        // Wrap object to the predicate...\n        return x => {\n            for( let key in iteratee as any ){\n                if( iteratee[ key ] !== x[ key ] )\n                    return false;\n            }\n\n            return true;\n        }\n    }\n    \n    return bindContext( iteratee, context );\n\n}","import { Collection } from '../collection'\nimport { Record } from '../record'\nimport { CompiledReference } from '../traversable'\n\nexport type CollectionReference = ( () => Collection ) | Collection | string; \n\n/** @private */\nexport function parseReference( collectionRef : CollectionReference ) : ( root : Record ) => Collection {\n    switch( typeof collectionRef ){\n        case 'function' :\n            return root => (<any>collectionRef).call( root );\n        case 'object'   :\n            return () => <Collection>collectionRef;\n        case 'string'   :\n            const { resolve } = new CompiledReference( <string>collectionRef );\n            return resolve;\n    }\n}","import { AnyType, AttributeOptions } from '../record'\nimport { parseReference, CollectionReference } from './commons'\nimport { Collection } from '../collection'\nimport { Record } from '../record'\n\nimport { ChainableAttributeSpec } from '../record'\n\n/********\n * Reference to model by id.\n * \n * Untyped attribute. Holds model id, when unresolved. When resolved, is substituted\n * with a real model.\n * \n * No model changes are detected and counted as owner's change. That's intentional.\n */\n\n/** @private */\ntype RecordRefValue = Record | string;\n\n/** @private */\nclass RecordRefType extends AnyType {\n    // It is always serialized as an id, whenever it's resolved or not. \n    toJSON( value : RecordRefValue ){\n        return value && typeof value === 'object' ? value.id : value;\n    }\n\n    // Wne \n    clone( value : RecordRefValue ){\n        return value && typeof value === 'object' ? value.id : value;\n    }\n\n    // Model refs by id are equal when their ids are equal.\n    isChanged( a : RecordRefValue, b : RecordRefValue){\n        var aId = a && ( (<Record>a).id == null ? a : (<Record>a).id ),\n            bId = b && ( (<Record>b).id == null ? b : (<Record>b).id );\n\n        return aId !== bId;\n    }\n\n    // Refs are always valid.\n    validate( model, value, name ){}\n}\n\nRecord.from = function from( masterCollection : CollectionReference ) : ChainableAttributeSpec {\n    const getMasterCollection = parseReference( masterCollection );\n\n    const typeSpec = new ChainableAttributeSpec({\n        value : null,\n        _attribute : RecordRefType\n    });\n    \n    return typeSpec\n        .get( function( objOrId : RecordRefValue, name : string ) : Record {\n            if( typeof objOrId === 'object' ) return objOrId;\n\n            // So, we're dealing with an id reference. Resolve it.\n            const collection = getMasterCollection( this );\n            let   record : Record = null;\n\n            // If master collection exists and is not empty...\n            if( collection && collection.length ){\n                // Silently update attribute with record from this collection.\n                record = collection.get( objOrId ) || null;\n                this.attributes[ name ] = record;\n\n                // Subscribe for events manually. delegateEvents won't be invoked.\n                record && this._attributes[ name ].handleChange( record, null, this, {} );\n            }\n\n            return record;\n        });\n};","import { Collection, CollectionOptions } from '../collection'\nimport { tools, eventsApi, define } from '../object-plus'\nimport { Record, AggregatedType } from '../record'\nimport { parseReference, CollectionReference } from './commons'\nimport { ChainableAttributeSpec } from '../record'\nimport { Transactional, ItemsBehavior, TransactionOptions, transactionApi } from '../transactions'\n\nconst { fastDefaults } = tools;\n\ntype RecordsIds = ( string | number )[];\n\nCollection.subsetOf = function subsetOf( masterCollection : CollectionReference ) : ChainableAttributeSpec {\n    const SubsetOf = this._SubsetOf || ( this._SubsetOf = defineSubsetCollection( this ) ),\n        getMasterCollection = parseReference( masterCollection ),\n        typeSpec = new ChainableAttributeSpec({\n            type : SubsetOf\n        });\n\n    return typeSpec.get(\n        function( refs ){\n            !refs || refs.resolvedWith || refs.resolve( getMasterCollection( this ) );\n            return refs;\n        }\n    );\n};\n\nconst subsetOfBehavior = ItemsBehavior.share | ItemsBehavior.persistent;\n\nfunction defineSubsetCollection( CollectionConstructor : typeof Collection ) {\n    @define class SubsetOfCollection extends CollectionConstructor {\n        refs : any[];\n        resolvedWith : Collection = null;\n\n        _attribute : AggregatedType\n\n        get __inner_state__(){ return this.refs || this.models; }\n\n        constructor( recordsOrIds?, options? ){\n            super( [], options, subsetOfBehavior );\n            this.refs = toArray( recordsOrIds );\n        }\n\n        // Remove should work fine as it already accepts ids. Add won't...\n        add( a_elements, options = {} ){\n            const { resolvedWith } = this,\n                    toAdd = toArray( a_elements );\n            \n            if( resolvedWith ){\n                // If the collection is resolved already, everything is simple.\n                return super.add( resolveRefs( resolvedWith, toAdd ), options );\n            }\n            else{\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                if( toAdd.length ){\n                    const isRoot = transactionApi.begin( this );\n\n                    // Save elements to resolve in future...\n                    this.refs = this.refs ? this.refs.concat( toAdd ) : toAdd.slice();\n\n                    transactionApi.markAsDirty( this, options );\n\n                    // And throw the 'changes' event.\n                    isRoot && transactionApi.commit( this );\n                }\n            }\n        }\n\n        reset( a_elements?, options = {} ){\n            const { resolvedWith } = this,\n                elements = toArray( a_elements );\n    \n            return resolvedWith ?\n                // Collection is resolved, so parse ids and forward the call to set.\n                super.reset( resolveRefs( resolvedWith, elements ), options ) :\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                delaySet( this, elements, options ) || [];\n        }\n\n        _createTransaction( a_elements, options? ){\n            const { resolvedWith } = this,\n                elements = toArray( a_elements );\n    \n            return resolvedWith ?\n                // Collection is resolved, so parse ids and forward the call to set.\n                super._createTransaction( resolveRefs( resolvedWith, elements ), options ) :\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                delaySet( this, elements, options );\n        }\n\n        // Serialized as an array of model ids.\n        toJSON() : RecordsIds {\n            return this.refs ?\n                this.refs.map( objOrId => objOrId.id || objOrId ) :\n                this.models.map( model => model.id );\n        }\n\n        // Subset is always valid.\n        _validateNested(){ return 0; }\n\n        get length() : number {\n            return this.models.length || ( this.refs ? this.refs.length : 0 );\n        }\n\n        // Must be shallow copied on clone.\n        clone( owner? ){\n            var Ctor = (<any>this).constructor,\n                copy = new Ctor( [], {\n                    model : this.model,\n                    comparator : this.comparator\n                });\n\n            if( this.resolvedWith ){\n                copy.resolvedWith = this.resolvedWith;\n                copy.refs = null;\n                copy.reset( this.models, { silent : true } );\n            }\n            else{\n                copy.refs = this.refs.slice();\n            }\n\n            return copy;\n        }\n\n        // Clean up the custom parse method possibly defined in the base class.\n        parse( raw : any ) : Record[] {\n            return raw;\n        }\n\n        resolve( collection : Collection ) : this {\n            if( collection && collection.length ){\n                this.resolvedWith = collection;\n\n                if( this.refs ){\n                    this.reset( this.refs, { silent : true } );\n                    this.refs = null;\n                }\n            }\n\n            return this;\n        }\n\n        getModelIds() : RecordsIds { return this.toJSON(); }\n\n        toggle( modelOrId : any, val : boolean ) : boolean {\n            return super.toggle( this.resolvedWith.get( modelOrId ), val );\n        }\n\n        addAll() : Record[] {\n            if( this.resolvedWith ){\n                this.set( this.resolvedWith.models );\n                return this.models;\n            }\n\n            throw new Error( \"Cannot add elemens because the subset collection is not resolved yet.\" );\n        }\n\n        toggleAll() : Record[] {\n            return this.length ? this.reset() : this.addAll();\n        }\n    }\n\n    // Clean up all custom item events to prevent memory leaks.\n    SubsetOfCollection.prototype._itemEvents = void 0;\n\n    return SubsetOfCollection;\n}\n\nfunction resolveRefs( master, elements ){\n    const records = [];\n    \n    for( let el of elements ){\n        const record = master.get( el );\n        if( record ) records.push( record );\n    }\n\n    return records;\n}\n\nfunction delaySet( collection, elements, options ) : void {\n    if( tools.notEqual( collection.refs, elements ) ){\n        const isRoot = transactionApi.begin( collection );\n\n        // Save elements to resolve in future...\n        collection.refs = elements.slice();\n\n        transactionApi.markAsDirty( collection, options );\n        \n        // And throw the 'changes' event.\n        isRoot && transactionApi.commit( collection );\n    }\n}\n\nfunction toArray( elements ){\n    return elements ? ( \n        Array.isArray( elements ) ? elements : [ elements ]\n    ) : [];\n}","import { Record } from '../record'\nimport { Transactional } from '../transactions'\nimport { startIO, IOPromise } from '../io-tools'\n\nlet _store : Store = null;\n\nexport class Store extends Record {\n    getStore() : Store { return this; }\n \n    // delegate item lookup to owner, and to the global store if undefined\n    get( name : string ) : any {\n        // Lookup for resource in the current store. \n        let local = this[ name ];\n\n        // If something is found or it's the global store, return result.\n        if( local || this === this._defaultStore ) return local;\n\n        // Forward failed lookup to owner or global store.\n        return this._owner ? this._owner.get( name ) : this._defaultStore.get( name ); \n    }\n\n    static get global(){ return _store; }\n    static set global( store : Store ){\n        if( _store ){\n          _store.dispose();\n        }\n\n        Transactional.prototype._defaultStore = _store = store;\n    }\n}\n\nStore.global = new Store();","/*!\n * assertion-error\n * Copyright(c) 2013 Jake Luer <jake@qualiancy.com>\n * MIT Licensed\n */\n\n/*!\n * Return a function that will copy properties from\n * one object to another excluding any originally\n * listed. Returned function will create a new `{}`.\n *\n * @param {String} excluded properties ...\n * @return {Function}\n */\n\nfunction exclude () {\n  var excludes = [].slice.call(arguments);\n\n  function excludeProps (res, obj) {\n    Object.keys(obj).forEach(function (key) {\n      if (!~excludes.indexOf(key)) res[key] = obj[key];\n    });\n  }\n\n  return function extendExclude () {\n    var args = [].slice.call(arguments)\n      , i = 0\n      , res = {};\n\n    for (; i < args.length; i++) {\n      excludeProps(res, args[i]);\n    }\n\n    return res;\n  };\n};\n\n/*!\n * Primary Exports\n */\n\nmodule.exports = AssertionError;\n\n/**\n * ### AssertionError\n *\n * An extension of the JavaScript `Error` constructor for\n * assertion and validation scenarios.\n *\n * @param {String} message\n * @param {Object} properties to include (optional)\n * @param {callee} start stack function (optional)\n */\n\nfunction AssertionError (message, _props, ssf) {\n  var extend = exclude('name', 'message', 'stack', 'constructor', 'toJSON')\n    , props = extend(_props || {});\n\n  // default values\n  this.message = message || 'Unspecified AssertionError';\n  this.showDiff = false;\n\n  // copy from properties\n  for (var key in props) {\n    this[key] = props[key];\n  }\n\n  // capture stack trace\n  ssf = ssf || arguments.callee;\n  if (ssf && Error.captureStackTrace) {\n    Error.captureStackTrace(this, ssf);\n  } else {\n    try {\n      throw new Error();\n    } catch(e) {\n      this.stack = e.stack;\n    }\n  }\n}\n\n/*!\n * Inherit from Error.prototype\n */\n\nAssertionError.prototype = Object.create(Error.prototype);\n\n/*!\n * Statically set name\n */\n\nAssertionError.prototype.name = 'AssertionError';\n\n/*!\n * Ensure correct constructor\n */\n\nAssertionError.prototype.constructor = AssertionError;\n\n/**\n * Allow errors to be converted to JSON for static transfer.\n *\n * @param {Boolean} include stack (default: `true`)\n * @return {Object} object that can be `JSON.stringify`\n */\n\nAssertionError.prototype.toJSON = function (stack) {\n  var extend = exclude('constructor', 'toJSON', 'stack')\n    , props = extend({ name: this.name }, this);\n\n  // include stack if exists and not turned off\n  if (false !== stack && this.stack) {\n    props.stack = this.stack;\n  }\n\n  return props;\n};\n","'use strict';\n\n/* !\n * Chai - pathval utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * @see https://github.com/logicalparadox/filtr\n * MIT Licensed\n */\n\n/**\n * ### .hasProperty(object, name)\n *\n * This allows checking whether an object has own\n * or inherited from prototype chain named property.\n *\n * Basically does the same thing as the `in`\n * operator but works properly with null/undefined values\n * and other primitives.\n *\n *     var obj = {\n *         arr: ['a', 'b', 'c']\n *       , str: 'Hello'\n *     }\n *\n * The following would be the results.\n *\n *     hasProperty(obj, 'str');  // true\n *     hasProperty(obj, 'constructor');  // true\n *     hasProperty(obj, 'bar');  // false\n *\n *     hasProperty(obj.str, 'length'); // true\n *     hasProperty(obj.str, 1);  // true\n *     hasProperty(obj.str, 5);  // false\n *\n *     hasProperty(obj.arr, 'length');  // true\n *     hasProperty(obj.arr, 2);  // true\n *     hasProperty(obj.arr, 3);  // false\n *\n * @param {Object} object\n * @param {String|Symbol} name\n * @returns {Boolean} whether it exists\n * @namespace Utils\n * @name hasProperty\n * @api public\n */\n\nfunction hasProperty(obj, name) {\n  if (typeof obj === 'undefined' || obj === null) {\n    return false;\n  }\n\n  // The `in` operator does not work with primitives.\n  return name in Object(obj);\n}\n\n/* !\n * ## parsePath(path)\n *\n * Helper function used to parse string object\n * paths. Use in conjunction with `internalGetPathValue`.\n *\n *      var parsed = parsePath('myobject.property.subprop');\n *\n * ### Paths:\n *\n * * Can be infinitely deep and nested.\n * * Arrays are also valid using the formal `myobject.document[3].property`.\n * * Literal dots and brackets (not delimiter) must be backslash-escaped.\n *\n * @param {String} path\n * @returns {Object} parsed\n * @api private\n */\n\nfunction parsePath(path) {\n  var str = path.replace(/([^\\\\])\\[/g, '$1.[');\n  var parts = str.match(/(\\\\\\.|[^.]+?)+/g);\n  return parts.map(function mapMatches(value) {\n    var regexp = /^\\[(\\d+)\\]$/;\n    var mArr = regexp.exec(value);\n    var parsed = null;\n    if (mArr) {\n      parsed = { i: parseFloat(mArr[1]) };\n    } else {\n      parsed = { p: value.replace(/\\\\([.\\[\\]])/g, '$1') };\n    }\n\n    return parsed;\n  });\n}\n\n/* !\n * ## internalGetPathValue(obj, parsed[, pathDepth])\n *\n * Helper companion function for `.parsePath` that returns\n * the value located at the parsed address.\n *\n *      var value = getPathValue(obj, parsed);\n *\n * @param {Object} object to search against\n * @param {Object} parsed definition from `parsePath`.\n * @param {Number} depth (nesting level) of the property we want to retrieve\n * @returns {Object|Undefined} value\n * @api private\n */\n\nfunction internalGetPathValue(obj, parsed, pathDepth) {\n  var temporaryValue = obj;\n  var res = null;\n  pathDepth = (typeof pathDepth === 'undefined' ? parsed.length : pathDepth);\n\n  for (var i = 0; i < pathDepth; i++) {\n    var part = parsed[i];\n    if (temporaryValue) {\n      if (typeof part.p === 'undefined') {\n        temporaryValue = temporaryValue[part.i];\n      } else {\n        temporaryValue = temporaryValue[part.p];\n      }\n\n      if (i === (pathDepth - 1)) {\n        res = temporaryValue;\n      }\n    }\n  }\n\n  return res;\n}\n\n/* !\n * ## internalSetPathValue(obj, value, parsed)\n *\n * Companion function for `parsePath` that sets\n * the value located at a parsed address.\n *\n *  internalSetPathValue(obj, 'value', parsed);\n *\n * @param {Object} object to search and define on\n * @param {*} value to use upon set\n * @param {Object} parsed definition from `parsePath`\n * @api private\n */\n\nfunction internalSetPathValue(obj, val, parsed) {\n  var tempObj = obj;\n  var pathDepth = parsed.length;\n  var part = null;\n  // Here we iterate through every part of the path\n  for (var i = 0; i < pathDepth; i++) {\n    var propName = null;\n    var propVal = null;\n    part = parsed[i];\n\n    // If it's the last part of the path, we set the 'propName' value with the property name\n    if (i === (pathDepth - 1)) {\n      propName = typeof part.p === 'undefined' ? part.i : part.p;\n      // Now we set the property with the name held by 'propName' on object with the desired val\n      tempObj[propName] = val;\n    } else if (typeof part.p !== 'undefined' && tempObj[part.p]) {\n      tempObj = tempObj[part.p];\n    } else if (typeof part.i !== 'undefined' && tempObj[part.i]) {\n      tempObj = tempObj[part.i];\n    } else {\n      // If the obj doesn't have the property we create one with that name to define it\n      var next = parsed[i + 1];\n      // Here we set the name of the property which will be defined\n      propName = typeof part.p === 'undefined' ? part.i : part.p;\n      // Here we decide if this property will be an array or a new object\n      propVal = typeof next.p === 'undefined' ? [] : {};\n      tempObj[propName] = propVal;\n      tempObj = tempObj[propName];\n    }\n  }\n}\n\n/**\n * ### .getPathInfo(object, path)\n *\n * This allows the retrieval of property info in an\n * object given a string path.\n *\n * The path info consists of an object with the\n * following properties:\n *\n * * parent - The parent object of the property referenced by `path`\n * * name - The name of the final property, a number if it was an array indexer\n * * value - The value of the property, if it exists, otherwise `undefined`\n * * exists - Whether the property exists or not\n *\n * @param {Object} object\n * @param {String} path\n * @returns {Object} info\n * @namespace Utils\n * @name getPathInfo\n * @api public\n */\n\nfunction getPathInfo(obj, path) {\n  var parsed = parsePath(path);\n  var last = parsed[parsed.length - 1];\n  var info = {\n    parent: parsed.length > 1 ? internalGetPathValue(obj, parsed, parsed.length - 1) : obj,\n    name: last.p || last.i,\n    value: internalGetPathValue(obj, parsed),\n  };\n  info.exists = hasProperty(info.parent, info.name);\n\n  return info;\n}\n\n/**\n * ### .getPathValue(object, path)\n *\n * This allows the retrieval of values in an\n * object given a string path.\n *\n *     var obj = {\n *         prop1: {\n *             arr: ['a', 'b', 'c']\n *           , str: 'Hello'\n *         }\n *       , prop2: {\n *             arr: [ { nested: 'Universe' } ]\n *           , str: 'Hello again!'\n *         }\n *     }\n *\n * The following would be the results.\n *\n *     getPathValue(obj, 'prop1.str'); // Hello\n *     getPathValue(obj, 'prop1.att[2]'); // b\n *     getPathValue(obj, 'prop2.arr[0].nested'); // Universe\n *\n * @param {Object} object\n * @param {String} path\n * @returns {Object} value or `undefined`\n * @namespace Utils\n * @name getPathValue\n * @api public\n */\n\nfunction getPathValue(obj, path) {\n  var info = getPathInfo(obj, path);\n  return info.value;\n}\n\n/**\n * ### .setPathValue(object, path, value)\n *\n * Define the value in an object at a given string path.\n *\n * ```js\n * var obj = {\n *     prop1: {\n *         arr: ['a', 'b', 'c']\n *       , str: 'Hello'\n *     }\n *   , prop2: {\n *         arr: [ { nested: 'Universe' } ]\n *       , str: 'Hello again!'\n *     }\n * };\n * ```\n *\n * The following would be acceptable.\n *\n * ```js\n * var properties = require('tea-properties');\n * properties.set(obj, 'prop1.str', 'Hello Universe!');\n * properties.set(obj, 'prop1.arr[2]', 'B');\n * properties.set(obj, 'prop2.arr[0].nested.value', { hello: 'universe' });\n * ```\n *\n * @param {Object} object\n * @param {String} path\n * @param {Mixed} value\n * @api private\n */\n\nfunction setPathValue(obj, path, val) {\n  var parsed = parsePath(path);\n  internalSetPathValue(obj, val, parsed);\n  return obj;\n}\n\nmodule.exports = {\n  hasProperty: hasProperty,\n  getPathInfo: getPathInfo,\n  getPathValue: getPathValue,\n  setPathValue: setPathValue,\n};\n","/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .flag(object, key, [value])\n *\n * Get or set a flag value on an object. If a\n * value is provided it will be set, else it will\n * return the currently set value or `undefined` if\n * the value is not set.\n *\n *     utils.flag(this, 'foo', 'bar'); // setter\n *     utils.flag(this, 'foo'); // getter, returns `bar`\n *\n * @param {Object} object constructed Assertion\n * @param {String} key\n * @param {Mixed} value (optional)\n * @namespace Utils\n * @name flag\n * @api private\n */\n\nmodule.exports = function flag(obj, key, value) {\n  var flags = obj.__flags || (obj.__flags = Object.create(null));\n  if (arguments.length === 3) {\n    flags[key] = value;\n  } else {\n    return flags[key];\n  }\n};\n","/*!\n * Chai - test utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependancies\n */\n\nvar flag = require('./flag');\n\n/**\n * ### .test(object, expression)\n *\n * Test and object for expression.\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name test\n */\n\nmodule.exports = function test(obj, args) {\n  var negate = flag(obj, 'negate')\n    , expr = args[0];\n  return negate ? !expr : expr;\n};\n","'use strict';\n\n/* !\n * type-detect\n * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\nvar promiseExists = typeof Promise === 'function';\nvar globalObject = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : self; // eslint-disable-line\nvar isDom = 'location' in globalObject && 'document' in globalObject;\nvar symbolExists = typeof Symbol !== 'undefined';\nvar mapExists = typeof Map !== 'undefined';\nvar setExists = typeof Set !== 'undefined';\nvar weakMapExists = typeof WeakMap !== 'undefined';\nvar weakSetExists = typeof WeakSet !== 'undefined';\nvar dataViewExists = typeof DataView !== 'undefined';\nvar symbolIteratorExists = symbolExists && typeof Symbol.iterator !== 'undefined';\nvar symbolToStringTagExists = symbolExists && typeof Symbol.toStringTag !== 'undefined';\nvar setEntriesExists = setExists && typeof Set.prototype.entries === 'function';\nvar mapEntriesExists = mapExists && typeof Map.prototype.entries === 'function';\nvar setIteratorPrototype = setEntriesExists && Object.getPrototypeOf(new Set().entries());\nvar mapIteratorPrototype = mapEntriesExists && Object.getPrototypeOf(new Map().entries());\nvar arrayIteratorExists = symbolIteratorExists && typeof Array.prototype[Symbol.iterator] === 'function';\nvar arrayIteratorPrototype = arrayIteratorExists && Object.getPrototypeOf([][Symbol.iterator]());\nvar stringIteratorExists = symbolIteratorExists && typeof String.prototype[Symbol.iterator] === 'function';\nvar stringIteratorPrototype = stringIteratorExists && Object.getPrototypeOf(''[Symbol.iterator]());\nvar toStringLeftSliceLength = 8;\nvar toStringRightSliceLength = -1;\n/**\n * ### typeOf (obj)\n *\n * Uses `Object.prototype.toString` to determine the type of an object,\n * normalising behaviour across engine versions & well optimised.\n *\n * @param {Mixed} object\n * @return {String} object type\n * @api public\n */\nmodule.exports = function typeDetect(obj) {\n  /* ! Speed optimisation\n   * Pre:\n   *   string literal     x 3,039,035 ops/sec ±1.62% (78 runs sampled)\n   *   boolean literal    x 1,424,138 ops/sec ±4.54% (75 runs sampled)\n   *   number literal     x 1,653,153 ops/sec ±1.91% (82 runs sampled)\n   *   undefined          x 9,978,660 ops/sec ±1.92% (75 runs sampled)\n   *   function           x 2,556,769 ops/sec ±1.73% (77 runs sampled)\n   * Post:\n   *   string literal     x 38,564,796 ops/sec ±1.15% (79 runs sampled)\n   *   boolean literal    x 31,148,940 ops/sec ±1.10% (79 runs sampled)\n   *   number literal     x 32,679,330 ops/sec ±1.90% (78 runs sampled)\n   *   undefined          x 32,363,368 ops/sec ±1.07% (82 runs sampled)\n   *   function           x 31,296,870 ops/sec ±0.96% (83 runs sampled)\n   */\n  var typeofObj = typeof obj;\n  if (typeofObj !== 'object') {\n    return typeofObj;\n  }\n\n  /* ! Speed optimisation\n   * Pre:\n   *   null               x 28,645,765 ops/sec ±1.17% (82 runs sampled)\n   * Post:\n   *   null               x 36,428,962 ops/sec ±1.37% (84 runs sampled)\n   */\n  if (obj === null) {\n    return 'null';\n  }\n\n  /* ! Spec Conformance\n   * Test: `Object.prototype.toString.call(window)``\n   *  - Node === \"[object global]\"\n   *  - Chrome === \"[object global]\"\n   *  - Firefox === \"[object Window]\"\n   *  - PhantomJS === \"[object Window]\"\n   *  - Safari === \"[object Window]\"\n   *  - IE 11 === \"[object Window]\"\n   *  - IE Edge === \"[object Window]\"\n   * Test: `Object.prototype.toString.call(this)``\n   *  - Chrome Worker === \"[object global]\"\n   *  - Firefox Worker === \"[object DedicatedWorkerGlobalScope]\"\n   *  - Safari Worker === \"[object DedicatedWorkerGlobalScope]\"\n   *  - IE 11 Worker === \"[object WorkerGlobalScope]\"\n   *  - IE Edge Worker === \"[object WorkerGlobalScope]\"\n   */\n  if (obj === globalObject) {\n    return 'global';\n  }\n\n  /* ! Speed optimisation\n   * Pre:\n   *   array literal      x 2,888,352 ops/sec ±0.67% (82 runs sampled)\n   * Post:\n   *   array literal      x 22,479,650 ops/sec ±0.96% (81 runs sampled)\n   */\n  if (\n    Array.isArray(obj) &&\n    (symbolToStringTagExists === false || !(Symbol.toStringTag in obj))\n  ) {\n    return 'Array';\n  }\n\n  if (isDom) {\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/multipage/browsers.html#location)\n     * WhatWG HTML$7.7.3 - The `Location` interface\n     * Test: `Object.prototype.toString.call(window.location)``\n     *  - IE <=11 === \"[object Object]\"\n     *  - IE Edge <=13 === \"[object Object]\"\n     */\n    if (obj === globalObject.location) {\n      return 'Location';\n    }\n\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/#document)\n     * WhatWG HTML$3.1.1 - The `Document` object\n     * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n     *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26809268)\n     *       which suggests that browsers should use HTMLTableCellElement for\n     *       both TD and TH elements. WhatWG separates these.\n     *       WhatWG HTML states:\n     *         > For historical reasons, Window objects must also have a\n     *         > writable, configurable, non-enumerable property named\n     *         > HTMLDocument whose value is the Document interface object.\n     * Test: `Object.prototype.toString.call(document)``\n     *  - Chrome === \"[object HTMLDocument]\"\n     *  - Firefox === \"[object HTMLDocument]\"\n     *  - Safari === \"[object HTMLDocument]\"\n     *  - IE <=10 === \"[object Document]\"\n     *  - IE 11 === \"[object HTMLDocument]\"\n     *  - IE Edge <=13 === \"[object HTMLDocument]\"\n     */\n    if (obj === globalObject.document) {\n      return 'Document';\n    }\n\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/multipage/webappapis.html#mimetypearray)\n     * WhatWG HTML$8.6.1.5 - Plugins - Interface MimeTypeArray\n     * Test: `Object.prototype.toString.call(navigator.mimeTypes)``\n     *  - IE <=10 === \"[object MSMimeTypesCollection]\"\n     */\n    if (obj === (globalObject.navigator || {}).mimeTypes) {\n      return 'MimeTypeArray';\n    }\n\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n     * WhatWG HTML$8.6.1.5 - Plugins - Interface PluginArray\n     * Test: `Object.prototype.toString.call(navigator.plugins)``\n     *  - IE <=10 === \"[object MSPluginsCollection]\"\n     */\n    if (obj === (globalObject.navigator || {}).plugins) {\n      return 'PluginArray';\n    }\n\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n     * WhatWG HTML$4.4.4 - The `blockquote` element - Interface `HTMLQuoteElement`\n     * Test: `Object.prototype.toString.call(document.createElement('blockquote'))``\n     *  - IE <=10 === \"[object HTMLBlockElement]\"\n     */\n    if (obj instanceof HTMLElement && obj.tagName === 'BLOCKQUOTE') {\n      return 'HTMLQuoteElement';\n    }\n\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/#htmltabledatacellelement)\n     * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableDataCellElement`\n     * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n     *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n     *       which suggests that browsers should use HTMLTableCellElement for\n     *       both TD and TH elements. WhatWG separates these.\n     * Test: Object.prototype.toString.call(document.createElement('td'))\n     *  - Chrome === \"[object HTMLTableCellElement]\"\n     *  - Firefox === \"[object HTMLTableCellElement]\"\n     *  - Safari === \"[object HTMLTableCellElement]\"\n     */\n    if (obj instanceof HTMLElement && obj.tagName === 'TD') {\n      return 'HTMLTableDataCellElement';\n    }\n\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/#htmltableheadercellelement)\n     * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableHeaderCellElement`\n     * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n     *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n     *       which suggests that browsers should use HTMLTableCellElement for\n     *       both TD and TH elements. WhatWG separates these.\n     * Test: Object.prototype.toString.call(document.createElement('th'))\n     *  - Chrome === \"[object HTMLTableCellElement]\"\n     *  - Firefox === \"[object HTMLTableCellElement]\"\n     *  - Safari === \"[object HTMLTableCellElement]\"\n     */\n    if (obj instanceof HTMLElement && obj.tagName === 'TH') {\n      return 'HTMLTableHeaderCellElement';\n    }\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   Float64Array       x 625,644 ops/sec ±1.58% (80 runs sampled)\n  *   Float32Array       x 1,279,852 ops/sec ±2.91% (77 runs sampled)\n  *   Uint32Array        x 1,178,185 ops/sec ±1.95% (83 runs sampled)\n  *   Uint16Array        x 1,008,380 ops/sec ±2.25% (80 runs sampled)\n  *   Uint8Array         x 1,128,040 ops/sec ±2.11% (81 runs sampled)\n  *   Int32Array         x 1,170,119 ops/sec ±2.88% (80 runs sampled)\n  *   Int16Array         x 1,176,348 ops/sec ±5.79% (86 runs sampled)\n  *   Int8Array          x 1,058,707 ops/sec ±4.94% (77 runs sampled)\n  *   Uint8ClampedArray  x 1,110,633 ops/sec ±4.20% (80 runs sampled)\n  * Post:\n  *   Float64Array       x 7,105,671 ops/sec ±13.47% (64 runs sampled)\n  *   Float32Array       x 5,887,912 ops/sec ±1.46% (82 runs sampled)\n  *   Uint32Array        x 6,491,661 ops/sec ±1.76% (79 runs sampled)\n  *   Uint16Array        x 6,559,795 ops/sec ±1.67% (82 runs sampled)\n  *   Uint8Array         x 6,463,966 ops/sec ±1.43% (85 runs sampled)\n  *   Int32Array         x 5,641,841 ops/sec ±3.49% (81 runs sampled)\n  *   Int16Array         x 6,583,511 ops/sec ±1.98% (80 runs sampled)\n  *   Int8Array          x 6,606,078 ops/sec ±1.74% (81 runs sampled)\n  *   Uint8ClampedArray  x 6,602,224 ops/sec ±1.77% (83 runs sampled)\n  */\n  var stringTag = (symbolToStringTagExists && obj[Symbol.toStringTag]);\n  if (typeof stringTag === 'string') {\n    return stringTag;\n  }\n\n  var objPrototype = Object.getPrototypeOf(obj);\n  /* ! Speed optimisation\n  * Pre:\n  *   regex literal      x 1,772,385 ops/sec ±1.85% (77 runs sampled)\n  *   regex constructor  x 2,143,634 ops/sec ±2.46% (78 runs sampled)\n  * Post:\n  *   regex literal      x 3,928,009 ops/sec ±0.65% (78 runs sampled)\n  *   regex constructor  x 3,931,108 ops/sec ±0.58% (84 runs sampled)\n  */\n  if (objPrototype === RegExp.prototype) {\n    return 'RegExp';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   date               x 2,130,074 ops/sec ±4.42% (68 runs sampled)\n  * Post:\n  *   date               x 3,953,779 ops/sec ±1.35% (77 runs sampled)\n  */\n  if (objPrototype === Date.prototype) {\n    return 'Date';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-promise.prototype-@@tostringtag)\n   * ES6$25.4.5.4 - Promise.prototype[@@toStringTag] should be \"Promise\":\n   * Test: `Object.prototype.toString.call(Promise.resolve())``\n   *  - Chrome <=47 === \"[object Object]\"\n   *  - Edge <=20 === \"[object Object]\"\n   *  - Firefox 29-Latest === \"[object Promise]\"\n   *  - Safari 7.1-Latest === \"[object Promise]\"\n   */\n  if (promiseExists && objPrototype === Promise.prototype) {\n    return 'Promise';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   set                x 2,222,186 ops/sec ±1.31% (82 runs sampled)\n  * Post:\n  *   set                x 4,545,879 ops/sec ±1.13% (83 runs sampled)\n  */\n  if (setExists && objPrototype === Set.prototype) {\n    return 'Set';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   map                x 2,396,842 ops/sec ±1.59% (81 runs sampled)\n  * Post:\n  *   map                x 4,183,945 ops/sec ±6.59% (82 runs sampled)\n  */\n  if (mapExists && objPrototype === Map.prototype) {\n    return 'Map';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   weakset            x 1,323,220 ops/sec ±2.17% (76 runs sampled)\n  * Post:\n  *   weakset            x 4,237,510 ops/sec ±2.01% (77 runs sampled)\n  */\n  if (weakSetExists && objPrototype === WeakSet.prototype) {\n    return 'WeakSet';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   weakmap            x 1,500,260 ops/sec ±2.02% (78 runs sampled)\n  * Post:\n  *   weakmap            x 3,881,384 ops/sec ±1.45% (82 runs sampled)\n  */\n  if (weakMapExists && objPrototype === WeakMap.prototype) {\n    return 'WeakMap';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-dataview.prototype-@@tostringtag)\n   * ES6$24.2.4.21 - DataView.prototype[@@toStringTag] should be \"DataView\":\n   * Test: `Object.prototype.toString.call(new DataView(new ArrayBuffer(1)))``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (dataViewExists && objPrototype === DataView.prototype) {\n    return 'DataView';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%mapiteratorprototype%-@@tostringtag)\n   * ES6$23.1.5.2.2 - %MapIteratorPrototype%[@@toStringTag] should be \"Map Iterator\":\n   * Test: `Object.prototype.toString.call(new Map().entries())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (mapExists && objPrototype === mapIteratorPrototype) {\n    return 'Map Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%setiteratorprototype%-@@tostringtag)\n   * ES6$23.2.5.2.2 - %SetIteratorPrototype%[@@toStringTag] should be \"Set Iterator\":\n   * Test: `Object.prototype.toString.call(new Set().entries())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (setExists && objPrototype === setIteratorPrototype) {\n    return 'Set Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%arrayiteratorprototype%-@@tostringtag)\n   * ES6$22.1.5.2.2 - %ArrayIteratorPrototype%[@@toStringTag] should be \"Array Iterator\":\n   * Test: `Object.prototype.toString.call([][Symbol.iterator]())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (arrayIteratorExists && objPrototype === arrayIteratorPrototype) {\n    return 'Array Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%stringiteratorprototype%-@@tostringtag)\n   * ES6$21.1.5.2.2 - %StringIteratorPrototype%[@@toStringTag] should be \"String Iterator\":\n   * Test: `Object.prototype.toString.call(''[Symbol.iterator]())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (stringIteratorExists && objPrototype === stringIteratorPrototype) {\n    return 'String Iterator';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   object from null   x 2,424,320 ops/sec ±1.67% (76 runs sampled)\n  * Post:\n  *   object from null   x 5,838,000 ops/sec ±0.99% (84 runs sampled)\n  */\n  if (objPrototype === null) {\n    return 'Object';\n  }\n\n  return Object\n    .prototype\n    .toString\n    .call(obj)\n    .slice(toStringLeftSliceLength, toStringRightSliceLength);\n};\n\nmodule.exports.typeDetect = module.exports;\n","/*!\n * Chai - expectTypes utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .expectTypes(obj, types)\n *\n * Ensures that the object being tested against is of a valid type.\n *\n *     utils.expectTypes(this, ['array', 'object', 'string']);\n *\n * @param {Mixed} obj constructed Assertion\n * @param {Array} type A list of allowed types for this assertion\n * @namespace Utils\n * @name expectTypes\n * @api public\n */\n\nvar AssertionError = require('assertion-error');\nvar flag = require('./flag');\nvar type = require('type-detect');\n\nmodule.exports = function expectTypes(obj, types) {\n  var flagMsg = flag(obj, 'message');\n  var ssfi = flag(obj, 'ssfi');\n\n  flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n  obj = flag(obj, 'object');\n  types = types.map(function (t) { return t.toLowerCase(); });\n  types.sort();\n\n  // Transforms ['lorem', 'ipsum'] into 'a lorem, or an ipsum'\n  var str = types.map(function (t, index) {\n    var art = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(t.charAt(0)) ? 'an' : 'a';\n    var or = types.length > 1 && index === types.length - 1 ? 'or ' : '';\n    return or + art + ' ' + t;\n  }).join(', ');\n\n  var objType = type(obj).toLowerCase();\n\n  if (!types.some(function (expected) { return objType === expected; })) {\n    throw new AssertionError(\n      flagMsg + 'object tested must be ' + str + ', but ' + objType + ' given',\n      undefined,\n      ssfi\n    );\n  }\n};\n","/*!\n * Chai - getActual utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getActual(object, [actual])\n *\n * Returns the `actual` value for an Assertion.\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getActual\n */\n\nmodule.exports = function getActual(obj, args) {\n  return args.length > 4 ? args[4] : obj._obj;\n};\n","'use strict';\n\n/* !\n * Chai - getFuncName utility\n * Copyright(c) 2012-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getFuncName(constructorFn)\n *\n * Returns the name of a function.\n * When a non-function instance is passed, returns `null`.\n * This also includes a polyfill function if `aFunc.name` is not defined.\n *\n * @name getFuncName\n * @param {Function} funct\n * @namespace Utils\n * @api public\n */\n\nvar toString = Function.prototype.toString;\nvar functionNameMatch = /\\s*function(?:\\s|\\s*\\/\\*[^(?:*\\/)]+\\*\\/\\s*)*([^\\s\\(\\/]+)/;\nfunction getFuncName(aFunc) {\n  if (typeof aFunc !== 'function') {\n    return null;\n  }\n\n  var name = '';\n  if (typeof Function.prototype.name === 'undefined' && typeof aFunc.name === 'undefined') {\n    // Here we run a polyfill if Function does not support the `name` property and if aFunc.name is not defined\n    var match = toString.call(aFunc).match(functionNameMatch);\n    if (match) {\n      name = match[1];\n    }\n  } else {\n    // If we've got a `name` property we just use it\n    name = aFunc.name;\n  }\n\n  return name;\n}\n\nmodule.exports = getFuncName;\n","/*!\n * Chai - getProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getProperties(object)\n *\n * This allows the retrieval of property names of an object, enumerable or not,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getProperties\n * @api public\n */\n\nmodule.exports = function getProperties(object) {\n  var result = Object.getOwnPropertyNames(object);\n\n  function addProperty(property) {\n    if (result.indexOf(property) === -1) {\n      result.push(property);\n    }\n  }\n\n  var proto = Object.getPrototypeOf(object);\n  while (proto !== null) {\n    Object.getOwnPropertyNames(proto).forEach(addProperty);\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return result;\n};\n","/*!\n * Chai - getEnumerableProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getEnumerableProperties(object)\n *\n * This allows the retrieval of enumerable property names of an object,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getEnumerableProperties\n * @api public\n */\n\nmodule.exports = function getEnumerableProperties(object) {\n  var result = [];\n  for (var name in object) {\n    result.push(name);\n  }\n  return result;\n};\n","module.exports = {\n\n  /**\n   * ### config.includeStack\n   *\n   * User configurable property, influences whether stack trace\n   * is included in Assertion error message. Default of false\n   * suppresses stack trace in the error message.\n   *\n   *     chai.config.includeStack = true;  // enable stack on error\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  includeStack: false,\n\n  /**\n   * ### config.showDiff\n   *\n   * User configurable property, influences whether or not\n   * the `showDiff` flag should be included in the thrown\n   * AssertionErrors. `false` will always be `false`; `true`\n   * will be true when the assertion has requested a diff\n   * be shown.\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  showDiff: true,\n\n  /**\n   * ### config.truncateThreshold\n   *\n   * User configurable property, sets length threshold for actual and\n   * expected values in assertion errors. If this threshold is exceeded, for\n   * example for large data structures, the value is replaced with something\n   * like `[ Array(3) ]` or `{ Object (prop1, prop2) }`.\n   *\n   * Set it to zero if you want to disable truncating altogether.\n   *\n   * This is especially userful when doing assertions on arrays: having this\n   * set to a reasonable large value makes the failure messages readily\n   * inspectable.\n   *\n   *     chai.config.truncateThreshold = 0;  // disable truncating\n   *\n   * @param {Number}\n   * @api public\n   */\n\n  truncateThreshold: 40,\n\n  /**\n   * ### config.useProxy\n   *\n   * User configurable property, defines if chai will use a Proxy to throw\n   * an error when a non-existent property is read, which protects users\n   * from typos when using property-based assertions.\n   *\n   * Set it to false if you want to disable this feature.\n   *\n   *     chai.config.useProxy = false;  // disable use of Proxy\n   *\n   * This feature is automatically disabled regardless of this config value\n   * in environments that don't support proxies.\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  useProxy: true,\n\n  /**\n   * ### config.proxyExcludedKeys\n   *\n   * User configurable property, defines which properties should be ignored\n   * instead of throwing an error if they do not exist on the assertion.\n   * This is only applied if the environment Chai is running in supports proxies and\n   * if the `useProxy` configuration setting is enabled.\n   * By default, `then` and `inspect` will not throw an error if they do not exist on the\n   * assertion object because the `.inspect` property is read by `util.inspect` (for example, when\n   * using `console.log` on the assertion object) and `.then` is necessary for promise type-checking.\n   *\n   *     // By default these keys will not throw an error if they do not exist on the assertion object\n   *     chai.config.proxyExcludedKeys = ['then', 'inspect'];\n   *\n   * @param {Array}\n   * @api public\n   */\n\n  proxyExcludedKeys: ['then', 'inspect', 'toJSON']\n};\n","// This is (almost) directly from Node.js utils\n// https://github.com/joyent/node/blob/f8c335d0caf47f16d31413f89aa28eda3878e3aa/lib/util.js\n\nvar getName = require('get-func-name');\nvar getProperties = require('./getProperties');\nvar getEnumerableProperties = require('./getEnumerableProperties');\nvar config = require('../config');\n\nmodule.exports = inspect;\n\n/**\n * ### .inspect(obj, [showHidden], [depth], [colors])\n *\n * Echoes the value of a value. Tries to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Boolean} showHidden Flag that shows hidden (not enumerable)\n *    properties of objects. Default is false.\n * @param {Number} depth Depth in which to descend in object. Default is 2.\n * @param {Boolean} colors Flag to turn on ANSI escape codes to color the\n *    output. Default is false (no coloring).\n * @namespace Utils\n * @name inspect\n */\nfunction inspect(obj, showHidden, depth, colors) {\n  var ctx = {\n    showHidden: showHidden,\n    seen: [],\n    stylize: function (str) { return str; }\n  };\n  return formatValue(ctx, obj, (typeof depth === 'undefined' ? 2 : depth));\n}\n\n// Returns true if object is a DOM element.\nvar isDOMElement = function (object) {\n  if (typeof HTMLElement === 'object') {\n    return object instanceof HTMLElement;\n  } else {\n    return object &&\n      typeof object === 'object' &&\n      'nodeType' in object &&\n      object.nodeType === 1 &&\n      typeof object.nodeName === 'string';\n  }\n};\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (value && typeof value.inspect === 'function' &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (typeof ret !== 'string') {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // If this is a DOM element, try to get the outer HTML.\n  if (isDOMElement(value)) {\n    if ('outerHTML' in value) {\n      return value.outerHTML;\n      // This value does not have an outerHTML attribute,\n      //   it could still be an XML element\n    } else {\n      // Attempt to serialize it\n      try {\n        if (document.xmlVersion) {\n          var xmlSerializer = new XMLSerializer();\n          return xmlSerializer.serializeToString(value);\n        } else {\n          // Firefox 11- do not support outerHTML\n          //   It does, however, support innerHTML\n          //   Use the following to render the element\n          var ns = \"http://www.w3.org/1999/xhtml\";\n          var container = document.createElementNS(ns, '_');\n\n          container.appendChild(value.cloneNode(false));\n          var html = container.innerHTML\n            .replace('><', '>' + value.innerHTML + '<');\n          container.innerHTML = '';\n          return html;\n        }\n      } catch (err) {\n        // This could be a non-native DOM implementation,\n        //   continue with the normal flow:\n        //   printing the element as if it is an object.\n      }\n    }\n  }\n\n  // Look up the keys of the object.\n  var visibleKeys = getEnumerableProperties(value);\n  var keys = ctx.showHidden ? getProperties(value) : visibleKeys;\n\n  var name, nameSuffix;\n\n  // Some type of object without properties can be shortcutted.\n  // In IE, errors have a single `stack` property, or if they are vanilla `Error`,\n  // a `stack` plus `description` property; ignore those for consistency.\n  if (keys.length === 0 || (isError(value) && (\n      (keys.length === 1 && keys[0] === 'stack') ||\n      (keys.length === 2 && keys[0] === 'description' && keys[1] === 'stack')\n     ))) {\n    if (typeof value === 'function') {\n      name = getName(value);\n      nameSuffix = name ? ': ' + name : '';\n      return ctx.stylize('[Function' + nameSuffix + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toUTCString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = ''\n    , array = false\n    , typedArray = false\n    , braces = ['{', '}'];\n\n  if (isTypedArray(value)) {\n    typedArray = true;\n    braces = ['[', ']'];\n  }\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (typeof value === 'function') {\n    name = getName(value);\n    nameSuffix = name ? ': ' + name : '';\n    base = ' [Function' + nameSuffix + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    return formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else if (typedArray) {\n    return formatTypedArray(value);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  switch (typeof value) {\n    case 'undefined':\n      return ctx.stylize('undefined', 'undefined');\n\n    case 'string':\n      var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                               .replace(/'/g, \"\\\\'\")\n                                               .replace(/\\\\\"/g, '\"') + '\\'';\n      return ctx.stylize(simple, 'string');\n\n    case 'number':\n      if (value === 0 && (1/value) === -Infinity) {\n        return ctx.stylize('-0', 'number');\n      }\n      return ctx.stylize('' + value, 'number');\n\n    case 'boolean':\n      return ctx.stylize('' + value, 'boolean');\n\n    case 'symbol':\n      return ctx.stylize(value.toString(), 'symbol');\n  }\n  // For some reason typeof null is \"object\", so special case here.\n  if (value === null) {\n    return ctx.stylize('null', 'null');\n  }\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (Object.prototype.hasOwnProperty.call(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\nfunction formatTypedArray(value) {\n  var str = '[ ';\n\n  for (var i = 0; i < value.length; ++i) {\n    if (str.length >= config.truncateThreshold - 7) {\n      str += '...';\n      break;\n    }\n    str += value[i] + ', ';\n  }\n  str += ' ]';\n\n  // Removing trailing `, ` if the array was not truncated\n  if (str.indexOf(',  ]') !== -1) {\n    str = str.replace(',  ]', ' ]');\n  }\n\n  return str;\n}\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name;\n  var propDescriptor = Object.getOwnPropertyDescriptor(value, key);\n  var str;\n\n  if (propDescriptor) {\n    if (propDescriptor.get) {\n      if (propDescriptor.set) {\n        str = ctx.stylize('[Getter/Setter]', 'special');\n      } else {\n        str = ctx.stylize('[Getter]', 'special');\n      }\n    } else {\n      if (propDescriptor.set) {\n        str = ctx.stylize('[Setter]', 'special');\n      }\n    }\n  }\n  if (visibleKeys.indexOf(key) < 0) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(value[key]) < 0) {\n      if (recurseTimes === null) {\n        str = formatValue(ctx, value[key], null);\n      } else {\n        str = formatValue(ctx, value[key], recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (typeof name === 'undefined') {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\nfunction isTypedArray(ar) {\n  // Unfortunately there's no way to check if an object is a TypedArray\n  // We have to check if it's one of these types\n  return (typeof ar === 'object' && /\\w+Array]$/.test(objectToString(ar)));\n}\n\nfunction isArray(ar) {\n  return Array.isArray(ar) ||\n         (typeof ar === 'object' && objectToString(ar) === '[object Array]');\n}\n\nfunction isRegExp(re) {\n  return typeof re === 'object' && objectToString(re) === '[object RegExp]';\n}\n\nfunction isDate(d) {\n  return typeof d === 'object' && objectToString(d) === '[object Date]';\n}\n\nfunction isError(e) {\n  return typeof e === 'object' && objectToString(e) === '[object Error]';\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependancies\n */\n\nvar inspect = require('./inspect');\nvar config = require('../config');\n\n/**\n * ### .objDisplay(object)\n *\n * Determines if an object or an array matches\n * criteria to be inspected in-line for error\n * messages or should be truncated.\n *\n * @param {Mixed} javascript object to inspect\n * @name objDisplay\n * @namespace Utils\n * @api public\n */\n\nmodule.exports = function objDisplay(obj) {\n  var str = inspect(obj)\n    , type = Object.prototype.toString.call(obj);\n\n  if (config.truncateThreshold && str.length >= config.truncateThreshold) {\n    if (type === '[object Function]') {\n      return !obj.name || obj.name === ''\n        ? '[Function]'\n        : '[Function: ' + obj.name + ']';\n    } else if (type === '[object Array]') {\n      return '[ Array(' + obj.length + ') ]';\n    } else if (type === '[object Object]') {\n      var keys = Object.keys(obj)\n        , kstr = keys.length > 2\n          ? keys.splice(0, 2).join(', ') + ', ...'\n          : keys.join(', ');\n      return '{ Object (' + kstr + ') }';\n    } else {\n      return str;\n    }\n  } else {\n    return str;\n  }\n};\n","/*!\n * Chai - message composition utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependancies\n */\n\nvar flag = require('./flag')\n  , getActual = require('./getActual')\n  , inspect = require('./inspect')\n  , objDisplay = require('./objDisplay');\n\n/**\n * ### .getMessage(object, message, negateMessage)\n *\n * Construct the error message based on flags\n * and template tags. Template tags will return\n * a stringified inspection of the object referenced.\n *\n * Message template tags:\n * - `#{this}` current asserted object\n * - `#{act}` actual value\n * - `#{exp}` expected value\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @namespace Utils\n * @name getMessage\n * @api public\n */\n\nmodule.exports = function getMessage(obj, args) {\n  var negate = flag(obj, 'negate')\n    , val = flag(obj, 'object')\n    , expected = args[3]\n    , actual = getActual(obj, args)\n    , msg = negate ? args[2] : args[1]\n    , flagMsg = flag(obj, 'message');\n\n  if(typeof msg === \"function\") msg = msg();\n  msg = msg || '';\n  msg = msg\n    .replace(/#\\{this\\}/g, function () { return objDisplay(val); })\n    .replace(/#\\{act\\}/g, function () { return objDisplay(actual); })\n    .replace(/#\\{exp\\}/g, function () { return objDisplay(expected); });\n\n  return flagMsg ? flagMsg + ': ' + msg : msg;\n};\n","/*!\n * Chai - transferFlags utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .transferFlags(assertion, object, includeAll = true)\n *\n * Transfer all the flags for `assertion` to `object`. If\n * `includeAll` is set to `false`, then the base Chai\n * assertion flags (namely `object`, `ssfi`, `lockSsfi`,\n * and `message`) will not be transferred.\n *\n *\n *     var newAssertion = new Assertion();\n *     utils.transferFlags(assertion, newAssertion);\n *\n *     var anotherAsseriton = new Assertion(myObj);\n *     utils.transferFlags(assertion, anotherAssertion, false);\n *\n * @param {Assertion} assertion the assertion to transfer the flags from\n * @param {Object} object the object to transfer the flags to; usually a new assertion\n * @param {Boolean} includeAll\n * @namespace Utils\n * @name transferFlags\n * @api private\n */\n\nmodule.exports = function transferFlags(assertion, object, includeAll) {\n  var flags = assertion.__flags || (assertion.__flags = Object.create(null));\n\n  if (!object.__flags) {\n    object.__flags = Object.create(null);\n  }\n\n  includeAll = arguments.length === 3 ? includeAll : true;\n\n  for (var flag in flags) {\n    if (includeAll ||\n        (flag !== 'object' && flag !== 'ssfi' && flag !== 'lockSsfi' && flag != 'message')) {\n      object.__flags[flag] = flags[flag];\n    }\n  }\n};\n","'use strict';\n/* globals Symbol: false, Uint8Array: false, WeakMap: false */\n/*!\n * deep-eql\n * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar type = require('type-detect');\nfunction FakeMap() {\n  this._key = 'chai/deep-eql__' + Math.random() + Date.now();\n}\n\nFakeMap.prototype = {\n  get: function getMap(key) {\n    return key[this._key];\n  },\n  set: function setMap(key, value) {\n    if (Object.isExtensible(key)) {\n      Object.defineProperty(key, this._key, {\n        value: value,\n        configurable: true,\n      });\n    }\n  },\n};\n\nvar MemoizeMap = typeof WeakMap === 'function' ? WeakMap : FakeMap;\n/*!\n * Check to see if the MemoizeMap has recorded a result of the two operands\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {MemoizeMap} memoizeMap\n * @returns {Boolean|null} result\n*/\nfunction memoizeCompare(leftHandOperand, rightHandOperand, memoizeMap) {\n  // Technically, WeakMap keys can *only* be objects, not primitives.\n  if (!memoizeMap || isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    return null;\n  }\n  var leftHandMap = memoizeMap.get(leftHandOperand);\n  if (leftHandMap) {\n    var result = leftHandMap.get(rightHandOperand);\n    if (typeof result === 'boolean') {\n      return result;\n    }\n  }\n  return null;\n}\n\n/*!\n * Set the result of the equality into the MemoizeMap\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {MemoizeMap} memoizeMap\n * @param {Boolean} result\n*/\nfunction memoizeSet(leftHandOperand, rightHandOperand, memoizeMap, result) {\n  // Technically, WeakMap keys can *only* be objects, not primitives.\n  if (!memoizeMap || isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    return;\n  }\n  var leftHandMap = memoizeMap.get(leftHandOperand);\n  if (leftHandMap) {\n    leftHandMap.set(rightHandOperand, result);\n  } else {\n    leftHandMap = new MemoizeMap();\n    leftHandMap.set(rightHandOperand, result);\n    memoizeMap.set(leftHandOperand, leftHandMap);\n  }\n}\n\n/*!\n * Primary Export\n */\n\nmodule.exports = deepEqual;\nmodule.exports.MemoizeMap = MemoizeMap;\n\n/**\n * Assert deeply nested sameValue equality between two objects of any type.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (optional) Additional options\n * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.\n * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of\n    complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular\n    references to blow the stack.\n * @return {Boolean} equal match\n */\nfunction deepEqual(leftHandOperand, rightHandOperand, options) {\n  // If we have a comparator, we can't assume anything; so bail to its check first.\n  if (options && options.comparator) {\n    return extensiveDeepEqual(leftHandOperand, rightHandOperand, options);\n  }\n\n  var simpleResult = simpleEqual(leftHandOperand, rightHandOperand);\n  if (simpleResult !== null) {\n    return simpleResult;\n  }\n\n  // Deeper comparisons are pushed through to a larger function\n  return extensiveDeepEqual(leftHandOperand, rightHandOperand, options);\n}\n\n/**\n * Many comparisons can be canceled out early via simple equality or primitive checks.\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @return {Boolean|null} equal match\n */\nfunction simpleEqual(leftHandOperand, rightHandOperand) {\n  // Equal references (except for Numbers) can be returned early\n  if (leftHandOperand === rightHandOperand) {\n    // Handle +-0 cases\n    return leftHandOperand !== 0 || 1 / leftHandOperand === 1 / rightHandOperand;\n  }\n\n  // handle NaN cases\n  if (\n    leftHandOperand !== leftHandOperand && // eslint-disable-line no-self-compare\n    rightHandOperand !== rightHandOperand // eslint-disable-line no-self-compare\n  ) {\n    return true;\n  }\n\n  // Anything that is not an 'object', i.e. symbols, functions, booleans, numbers,\n  // strings, and undefined, can be compared by reference.\n  if (isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    // Easy out b/c it would have passed the first equality check\n    return false;\n  }\n  return null;\n}\n\n/*!\n * The main logic of the `deepEqual` function.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (optional) Additional options\n * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.\n * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of\n    complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular\n    references to blow the stack.\n * @return {Boolean} equal match\n*/\nfunction extensiveDeepEqual(leftHandOperand, rightHandOperand, options) {\n  options = options || {};\n  options.memoize = options.memoize === false ? false : options.memoize || new MemoizeMap();\n  var comparator = options && options.comparator;\n\n  // Check if a memoized result exists.\n  var memoizeResultLeft = memoizeCompare(leftHandOperand, rightHandOperand, options.memoize);\n  if (memoizeResultLeft !== null) {\n    return memoizeResultLeft;\n  }\n  var memoizeResultRight = memoizeCompare(rightHandOperand, leftHandOperand, options.memoize);\n  if (memoizeResultRight !== null) {\n    return memoizeResultRight;\n  }\n\n  // If a comparator is present, use it.\n  if (comparator) {\n    var comparatorResult = comparator(leftHandOperand, rightHandOperand);\n    // Comparators may return null, in which case we want to go back to default behavior.\n    if (comparatorResult === false || comparatorResult === true) {\n      memoizeSet(leftHandOperand, rightHandOperand, options.memoize, comparatorResult);\n      return comparatorResult;\n    }\n    // To allow comparators to override *any* behavior, we ran them first. Since it didn't decide\n    // what to do, we need to make sure to return the basic tests first before we move on.\n    var simpleResult = simpleEqual(leftHandOperand, rightHandOperand);\n    if (simpleResult !== null) {\n      // Don't memoize this, it takes longer to set/retrieve than to just compare.\n      return simpleResult;\n    }\n  }\n\n  var leftHandType = type(leftHandOperand);\n  if (leftHandType !== type(rightHandOperand)) {\n    memoizeSet(leftHandOperand, rightHandOperand, options.memoize, false);\n    return false;\n  }\n\n  // Temporarily set the operands in the memoize object to prevent blowing the stack\n  memoizeSet(leftHandOperand, rightHandOperand, options.memoize, true);\n\n  var result = extensiveDeepEqualByType(leftHandOperand, rightHandOperand, leftHandType, options);\n  memoizeSet(leftHandOperand, rightHandOperand, options.memoize, result);\n  return result;\n}\n\nfunction extensiveDeepEqualByType(leftHandOperand, rightHandOperand, leftHandType, options) {\n  switch (leftHandType) {\n    case 'String':\n    case 'Number':\n    case 'Boolean':\n    case 'Date':\n      // If these types are their instance types (e.g. `new Number`) then re-deepEqual against their values\n      return deepEqual(leftHandOperand.valueOf(), rightHandOperand.valueOf());\n    case 'Promise':\n    case 'Symbol':\n    case 'function':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Error':\n      return leftHandOperand === rightHandOperand;\n    case 'Arguments':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'Array':\n      return iterableEqual(leftHandOperand, rightHandOperand, options);\n    case 'RegExp':\n      return regexpEqual(leftHandOperand, rightHandOperand);\n    case 'Generator':\n      return generatorEqual(leftHandOperand, rightHandOperand, options);\n    case 'DataView':\n      return iterableEqual(new Uint8Array(leftHandOperand.buffer), new Uint8Array(rightHandOperand.buffer), options);\n    case 'ArrayBuffer':\n      return iterableEqual(new Uint8Array(leftHandOperand), new Uint8Array(rightHandOperand), options);\n    case 'Set':\n      return entriesEqual(leftHandOperand, rightHandOperand, options);\n    case 'Map':\n      return entriesEqual(leftHandOperand, rightHandOperand, options);\n    default:\n      return objectEqual(leftHandOperand, rightHandOperand, options);\n  }\n}\n\n/*!\n * Compare two Regular Expressions for equality.\n *\n * @param {RegExp} leftHandOperand\n * @param {RegExp} rightHandOperand\n * @return {Boolean} result\n */\n\nfunction regexpEqual(leftHandOperand, rightHandOperand) {\n  return leftHandOperand.toString() === rightHandOperand.toString();\n}\n\n/*!\n * Compare two Sets/Maps for equality. Faster than other equality functions.\n *\n * @param {Set} leftHandOperand\n * @param {Set} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction entriesEqual(leftHandOperand, rightHandOperand, options) {\n  // IE11 doesn't support Set#entries or Set#@@iterator, so we need manually populate using Set#forEach\n  if (leftHandOperand.size !== rightHandOperand.size) {\n    return false;\n  }\n  if (leftHandOperand.size === 0) {\n    return true;\n  }\n  var leftHandItems = [];\n  var rightHandItems = [];\n  leftHandOperand.forEach(function gatherEntries(key, value) {\n    leftHandItems.push([ key, value ]);\n  });\n  rightHandOperand.forEach(function gatherEntries(key, value) {\n    rightHandItems.push([ key, value ]);\n  });\n  return iterableEqual(leftHandItems.sort(), rightHandItems.sort(), options);\n}\n\n/*!\n * Simple equality for flat iterable objects such as Arrays, TypedArrays or Node.js buffers.\n *\n * @param {Iterable} leftHandOperand\n * @param {Iterable} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction iterableEqual(leftHandOperand, rightHandOperand, options) {\n  var length = leftHandOperand.length;\n  if (length !== rightHandOperand.length) {\n    return false;\n  }\n  if (length === 0) {\n    return true;\n  }\n  var index = -1;\n  while (++index < length) {\n    if (deepEqual(leftHandOperand[index], rightHandOperand[index], options) === false) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/*!\n * Simple equality for generator objects such as those returned by generator functions.\n *\n * @param {Iterable} leftHandOperand\n * @param {Iterable} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction generatorEqual(leftHandOperand, rightHandOperand, options) {\n  return iterableEqual(getGeneratorEntries(leftHandOperand), getGeneratorEntries(rightHandOperand), options);\n}\n\n/*!\n * Determine if the given object has an @@iterator function.\n *\n * @param {Object} target\n * @return {Boolean} `true` if the object has an @@iterator function.\n */\nfunction hasIteratorFunction(target) {\n  return typeof Symbol !== 'undefined' &&\n    typeof target === 'object' &&\n    typeof Symbol.iterator !== 'undefined' &&\n    typeof target[Symbol.iterator] === 'function';\n}\n\n/*!\n * Gets all iterator entries from the given Object. If the Object has no @@iterator function, returns an empty array.\n * This will consume the iterator - which could have side effects depending on the @@iterator implementation.\n *\n * @param {Object} target\n * @returns {Array} an array of entries from the @@iterator function\n */\nfunction getIteratorEntries(target) {\n  if (hasIteratorFunction(target)) {\n    try {\n      return getGeneratorEntries(target[Symbol.iterator]());\n    } catch (iteratorError) {\n      return [];\n    }\n  }\n  return [];\n}\n\n/*!\n * Gets all entries from a Generator. This will consume the generator - which could have side effects.\n *\n * @param {Generator} target\n * @returns {Array} an array of entries from the Generator.\n */\nfunction getGeneratorEntries(generator) {\n  var generatorResult = generator.next();\n  var accumulator = [ generatorResult.value ];\n  while (generatorResult.done === false) {\n    generatorResult = generator.next();\n    accumulator.push(generatorResult.value);\n  }\n  return accumulator;\n}\n\n/*!\n * Gets all own and inherited enumerable keys from a target.\n *\n * @param {Object} target\n * @returns {Array} an array of own and inherited enumerable keys from the target.\n */\nfunction getEnumerableKeys(target) {\n  var keys = [];\n  for (var key in target) {\n    keys.push(key);\n  }\n  return keys;\n}\n\n/*!\n * Determines if two objects have matching values, given a set of keys. Defers to deepEqual for the equality check of\n * each key. If any value of the given key is not equal, the function will return false (early).\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Array} keys An array of keys to compare the values of leftHandOperand and rightHandOperand against\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\nfunction keysEqual(leftHandOperand, rightHandOperand, keys, options) {\n  var length = keys.length;\n  if (length === 0) {\n    return true;\n  }\n  for (var i = 0; i < length; i += 1) {\n    if (deepEqual(leftHandOperand[keys[i]], rightHandOperand[keys[i]], options) === false) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/*!\n * Recursively check the equality of two Objects. Once basic sameness has been established it will defer to `deepEqual`\n * for each enumerable key in the object.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction objectEqual(leftHandOperand, rightHandOperand, options) {\n  var leftHandKeys = getEnumerableKeys(leftHandOperand);\n  var rightHandKeys = getEnumerableKeys(rightHandOperand);\n  if (leftHandKeys.length && leftHandKeys.length === rightHandKeys.length) {\n    leftHandKeys.sort();\n    rightHandKeys.sort();\n    if (iterableEqual(leftHandKeys, rightHandKeys) === false) {\n      return false;\n    }\n    return keysEqual(leftHandOperand, rightHandOperand, leftHandKeys, options);\n  }\n\n  var leftHandEntries = getIteratorEntries(leftHandOperand);\n  var rightHandEntries = getIteratorEntries(rightHandOperand);\n  if (leftHandEntries.length && leftHandEntries.length === rightHandEntries.length) {\n    leftHandEntries.sort();\n    rightHandEntries.sort();\n    return iterableEqual(leftHandEntries, rightHandEntries, options);\n  }\n\n  if (leftHandKeys.length === 0 &&\n      leftHandEntries.length === 0 &&\n      rightHandKeys.length === 0 &&\n      rightHandEntries.length === 0) {\n    return true;\n  }\n\n  return false;\n}\n\n/*!\n * Returns true if the argument is a primitive.\n *\n * This intentionally returns true for all objects that can be compared by reference,\n * including functions and symbols.\n *\n * @param {Mixed} value\n * @return {Boolean} result\n */\nfunction isPrimitive(value) {\n  return value === null || typeof value !== 'object';\n}\n","var config = require('../config');\n\n/*!\n * Chai - isProxyEnabled helper\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .isProxyEnabled()\n *\n * Helper function to check if Chai's proxy protection feature is enabled. If\n * proxies are unsupported or disabled via the user's Chai config, then return\n * false. Otherwise, return true.\n *\n * @namespace Utils\n * @name isProxyEnabled\n */\n\nmodule.exports = function isProxyEnabled() {\n  return config.useProxy && \n    typeof Proxy !== 'undefined' &&\n    typeof Reflect !== 'undefined';\n};\n","/*!\n * Chai - addProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar isProxyEnabled = require('./isProxyEnabled');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .addProperty(ctx, name, getter)\n *\n * Adds a property to the prototype of an object.\n *\n *     utils.addProperty(chai.Assertion.prototype, 'foo', function () {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.instanceof(Foo);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.foo;\n *\n * @param {Object} ctx object to which the property is added\n * @param {String} name of property to add\n * @param {Function} getter function to be used for name\n * @namespace Utils\n * @name addProperty\n * @api public\n */\n\nmodule.exports = function addProperty(ctx, name, getter) {\n  getter = getter === undefined ? function () {} : getter;\n\n  Object.defineProperty(ctx, name,\n    { get: function propertyGetter() {\n        // Setting the `ssfi` flag to `propertyGetter` causes this function to\n        // be the starting point for removing implementation frames from the\n        // stack trace of a failed assertion.\n        //\n        // However, we only want to use this function as the starting point if\n        // the `lockSsfi` flag isn't set and proxy protection is disabled.\n        //\n        // If the `lockSsfi` flag is set, then either this assertion has been\n        // overwritten by another assertion, or this assertion is being invoked\n        // from inside of another assertion. In the first case, the `ssfi` flag\n        // has already been set by the overwriting assertion. In the second\n        // case, the `ssfi` flag has already been set by the outer assertion.\n        //\n        // If proxy protection is enabled, then the `ssfi` flag has already been\n        // set by the proxy getter.\n        if (!isProxyEnabled() && !flag(this, 'lockSsfi')) {\n          flag(this, 'ssfi', propertyGetter);\n        }\n\n        var result = getter.call(this);\n        if (result !== undefined)\n          return result;\n\n        var newAssertion = new chai.Assertion();\n        transferFlags(this, newAssertion);\n        return newAssertion;\n      }\n    , configurable: true\n  });\n};\n","var config = require('../config');\n\nvar fnLengthDesc = Object.getOwnPropertyDescriptor(function () {}, 'length');\n\n/*!\n * Chai - addLengthGuard utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .addLengthGuard(fn, assertionName, isChainable)\n *\n * Define `length` as a getter on the given uninvoked method assertion. The\n * getter acts as a guard against chaining `length` directly off of an uninvoked\n * method assertion, which is a problem because it references `function`'s\n * built-in `length` property instead of Chai's `length` assertion. When the\n * getter catches the user making this mistake, it throws an error with a\n * helpful message.\n *\n * There are two ways in which this mistake can be made. The first way is by\n * chaining the `length` assertion directly off of an uninvoked chainable\n * method. In this case, Chai suggests that the user use `lengthOf` instead. The\n * second way is by chaining the `length` assertion directly off of an uninvoked\n * non-chainable method. Non-chainable methods must be invoked prior to\n * chaining. In this case, Chai suggests that the user consult the docs for the\n * given assertion.\n *\n * If the `length` property of functions is unconfigurable, then return `fn`\n * without modification.\n *\n * Note that in ES6, the function's `length` property is configurable, so once\n * support for legacy environments is dropped, Chai's `length` property can\n * replace the built-in function's `length` property, and this length guard will\n * no longer be necessary. In the mean time, maintaining consistency across all\n * environments is the priority.\n *\n * @param {Function} fn\n * @param {String} assertionName\n * @param {Boolean} isChainable\n * @namespace Utils\n * @name addLengthGuard\n */\n\nmodule.exports = function addLengthGuard (fn, assertionName, isChainable) {\n  if (!fnLengthDesc.configurable) return fn;\n\n  Object.defineProperty(fn, 'length', {\n    get: function () {\n      if (isChainable) {\n        throw Error('Invalid Chai property: ' + assertionName + '.length. Due' +\n          ' to a compatibility issue, \"length\" cannot directly follow \"' +\n          assertionName + '\". Use \"' + assertionName + '.lengthOf\" instead.');\n      }\n\n      throw Error('Invalid Chai property: ' + assertionName + '.length. See' +\n        ' docs for proper usage of \"' + assertionName + '\".');\n    }\n  });\n\n  return fn;\n};\n","var config = require('../config');\nvar flag = require('./flag');\nvar getProperties = require('./getProperties');\nvar isProxyEnabled = require('./isProxyEnabled');\n\n/*!\n * Chai - proxify utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .proxify(object)\n *\n * Return a proxy of given object that throws an error when a non-existent\n * property is read. By default, the root cause is assumed to be a misspelled\n * property, and thus an attempt is made to offer a reasonable suggestion from\n * the list of existing properties. However, if a nonChainableMethodName is\n * provided, then the root cause is instead a failure to invoke a non-chainable\n * method prior to reading the non-existent property.\n * \n * If proxies are unsupported or disabled via the user's Chai config, then\n * return object without modification.\n *\n * @param {Object} obj\n * @param {String} nonChainableMethodName\n * @namespace Utils\n * @name proxify\n */\n\nvar builtins = ['__flags', '__methods', '_obj', 'assert'];\n\nmodule.exports = function proxify(obj, nonChainableMethodName) {\n  if (!isProxyEnabled()) return obj;\n\n  return new Proxy(obj, {\n    get: function proxyGetter(target, property) {\n      // This check is here because we should not throw errors on Symbol properties\n      // such as `Symbol.toStringTag`.\n      // The values for which an error should be thrown can be configured using\n      // the `config.proxyExcludedKeys` setting.\n      if (typeof property === 'string' &&\n          config.proxyExcludedKeys.indexOf(property) === -1 &&\n          !Reflect.has(target, property)) {\n        // Special message for invalid property access of non-chainable methods.\n        if (nonChainableMethodName) {\n          throw Error('Invalid Chai property: ' + nonChainableMethodName + '.' +\n            property + '. See docs for proper usage of \"' +\n            nonChainableMethodName + '\".');\n        }\n\n        var orderedProperties = getProperties(target).filter(function(property) {\n          return !Object.prototype.hasOwnProperty(property) &&\n            builtins.indexOf(property) === -1;\n        }).sort(function(a, b) {\n          return stringDistance(property, a) - stringDistance(property, b);\n        });\n\n        if (orderedProperties.length &&\n            stringDistance(orderedProperties[0], property) < 4) {\n          // If the property is reasonably close to an existing Chai property,\n          // suggest that property to the user.\n          throw Error('Invalid Chai property: ' + property +\n            '. Did you mean \"' + orderedProperties[0] + '\"?');\n        } else {\n          throw Error('Invalid Chai property: ' + property);\n        }\n      }\n\n      // Use this proxy getter as the starting point for removing implementation\n      // frames from the stack trace of a failed assertion. For property\n      // assertions, this prevents the proxy getter from showing up in the stack\n      // trace since it's invoked before the property getter. For method and\n      // chainable method assertions, this flag will end up getting changed to\n      // the method wrapper, which is good since this frame will no longer be in\n      // the stack once the method is invoked. Note that Chai builtin assertion\n      // properties such as `__flags` are skipped since this is only meant to\n      // capture the starting point of an assertion. This step is also skipped\n      // if the `lockSsfi` flag is set, thus indicating that this assertion is\n      // being called from within another assertion. In that case, the `ssfi`\n      // flag is already set to the outer assertion's starting point.\n      if (builtins.indexOf(property) === -1 && !flag(target, 'lockSsfi')) {\n        flag(target, 'ssfi', proxyGetter);\n      }\n\n      return Reflect.get(target, property);\n    }\n  });\n};\n\n/**\n * # stringDistance(strA, strB)\n * Return the Levenshtein distance between two strings.\n * @param {string} strA\n * @param {string} strB\n * @return {number} the string distance between strA and strB\n * @api private\n */\n\nfunction stringDistance(strA, strB, memo) {\n  if (!memo) {\n    // `memo` is a two-dimensional array containing a cache of distances\n    // memo[i][j] is the distance between strA.slice(0, i) and\n    // strB.slice(0, j).\n    memo = [];\n    for (var i = 0; i <= strA.length; i++) {\n      memo[i] = [];\n    }\n  }\n\n  if (!memo[strA.length] || !memo[strA.length][strB.length]) {\n    if (strA.length === 0 || strB.length === 0) {\n      memo[strA.length][strB.length] = Math.max(strA.length, strB.length);\n    } else {\n      memo[strA.length][strB.length] = Math.min(\n        stringDistance(strA.slice(0, -1), strB, memo) + 1,\n        stringDistance(strA, strB.slice(0, -1), memo) + 1,\n        stringDistance(strA.slice(0, -1), strB.slice(0, -1), memo) +\n          (strA.slice(-1) === strB.slice(-1) ? 0 : 1)\n      );\n    }\n  }\n\n  return memo[strA.length][strB.length];\n}\n","/*!\n * Chai - addMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar addLengthGuard = require('./addLengthGuard');\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar proxify = require('./proxify');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .addMethod(ctx, name, method)\n *\n * Adds a method to the prototype of an object.\n *\n *     utils.addMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(fooStr).to.be.foo('bar');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for name\n * @namespace Utils\n * @name addMethod\n * @api public\n */\n\nmodule.exports = function addMethod(ctx, name, method) {\n  var methodWrapper = function () {\n    // Setting the `ssfi` flag to `methodWrapper` causes this function to be the\n    // starting point for removing implementation frames from the stack trace of\n    // a failed assertion.\n    //\n    // However, we only want to use this function as the starting point if the\n    // `lockSsfi` flag isn't set.\n    //\n    // If the `lockSsfi` flag is set, then either this assertion has been\n    // overwritten by another assertion, or this assertion is being invoked from\n    // inside of another assertion. In the first case, the `ssfi` flag has\n    // already been set by the overwriting assertion. In the second case, the\n    // `ssfi` flag has already been set by the outer assertion.\n    if (!flag(this, 'lockSsfi')) {\n      flag(this, 'ssfi', methodWrapper);\n    }\n\n    var result = method.apply(this, arguments);\n    if (result !== undefined)\n      return result;\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n\n  addLengthGuard(methodWrapper, name, false);\n  ctx[name] = proxify(methodWrapper, name);\n};\n","/*!\n * Chai - overwriteProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar isProxyEnabled = require('./isProxyEnabled');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .overwriteProperty(ctx, name, fn)\n *\n * Overwites an already existing property getter and provides\n * access to previous value. Must return function to use as getter.\n *\n *     utils.overwriteProperty(chai.Assertion.prototype, 'ok', function (_super) {\n *       return function () {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.name).to.equal('bar');\n *         } else {\n *           _super.call(this);\n *         }\n *       }\n *     });\n *\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.ok;\n *\n * @param {Object} ctx object whose property is to be overwritten\n * @param {String} name of property to overwrite\n * @param {Function} getter function that returns a getter function to be used for name\n * @namespace Utils\n * @name overwriteProperty\n * @api public\n */\n\nmodule.exports = function overwriteProperty(ctx, name, getter) {\n  var _get = Object.getOwnPropertyDescriptor(ctx, name)\n    , _super = function () {};\n\n  if (_get && 'function' === typeof _get.get)\n    _super = _get.get\n\n  Object.defineProperty(ctx, name,\n    { get: function overwritingPropertyGetter() {\n        // Setting the `ssfi` flag to `overwritingPropertyGetter` causes this\n        // function to be the starting point for removing implementation frames\n        // from the stack trace of a failed assertion.\n        //\n        // However, we only want to use this function as the starting point if\n        // the `lockSsfi` flag isn't set and proxy protection is disabled.\n        //\n        // If the `lockSsfi` flag is set, then either this assertion has been\n        // overwritten by another assertion, or this assertion is being invoked\n        // from inside of another assertion. In the first case, the `ssfi` flag\n        // has already been set by the overwriting assertion. In the second\n        // case, the `ssfi` flag has already been set by the outer assertion.\n        //\n        // If proxy protection is enabled, then the `ssfi` flag has already been\n        // set by the proxy getter.\n        if (!isProxyEnabled() && !flag(this, 'lockSsfi')) {\n          flag(this, 'ssfi', overwritingPropertyGetter);\n        }\n\n        // Setting the `lockSsfi` flag to `true` prevents the overwritten\n        // assertion from changing the `ssfi` flag. By this point, the `ssfi`\n        // flag is already set to the correct starting point for this assertion.\n        var origLockSsfi = flag(this, 'lockSsfi');\n        flag(this, 'lockSsfi', true);\n        var result = getter(_super).call(this);\n        flag(this, 'lockSsfi', origLockSsfi);\n\n        if (result !== undefined) {\n          return result;\n        }\n\n        var newAssertion = new chai.Assertion();\n        transferFlags(this, newAssertion);\n        return newAssertion;\n      }\n    , configurable: true\n  });\n};\n","/*!\n * Chai - overwriteMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar addLengthGuard = require('./addLengthGuard');\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar proxify = require('./proxify');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .overwriteMethod(ctx, name, fn)\n *\n * Overwites an already existing method and provides\n * access to previous function. Must return function\n * to be used for name.\n *\n *     utils.overwriteMethod(chai.Assertion.prototype, 'equal', function (_super) {\n *       return function (str) {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.value).to.equal(str);\n *         } else {\n *           _super.apply(this, arguments);\n *         }\n *       }\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.equal('bar');\n *\n * @param {Object} ctx object whose method is to be overwritten\n * @param {String} name of method to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @namespace Utils\n * @name overwriteMethod\n * @api public\n */\n\nmodule.exports = function overwriteMethod(ctx, name, method) {\n  var _method = ctx[name]\n    , _super = function () {\n      throw new Error(name + ' is not a function');\n    };\n\n  if (_method && 'function' === typeof _method)\n    _super = _method;\n\n  var overwritingMethodWrapper = function () {\n    // Setting the `ssfi` flag to `overwritingMethodWrapper` causes this\n    // function to be the starting point for removing implementation frames from\n    // the stack trace of a failed assertion.\n    //\n    // However, we only want to use this function as the starting point if the\n    // `lockSsfi` flag isn't set.\n    //\n    // If the `lockSsfi` flag is set, then either this assertion has been\n    // overwritten by another assertion, or this assertion is being invoked from\n    // inside of another assertion. In the first case, the `ssfi` flag has\n    // already been set by the overwriting assertion. In the second case, the\n    // `ssfi` flag has already been set by the outer assertion.\n    if (!flag(this, 'lockSsfi')) {\n      flag(this, 'ssfi', overwritingMethodWrapper);\n    }\n\n    // Setting the `lockSsfi` flag to `true` prevents the overwritten assertion\n    // from changing the `ssfi` flag. By this point, the `ssfi` flag is already\n    // set to the correct starting point for this assertion.\n    var origLockSsfi = flag(this, 'lockSsfi');\n    flag(this, 'lockSsfi', true);\n    var result = method(_super).apply(this, arguments);\n    flag(this, 'lockSsfi', origLockSsfi);\n\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  }\n\n  addLengthGuard(overwritingMethodWrapper, name, false);\n  ctx[name] = proxify(overwritingMethodWrapper, name);\n};\n","/*!\n * Chai - addChainingMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar addLengthGuard = require('./addLengthGuard');\nvar chai = require('../../chai');\nvar flag = require('./flag');\nvar proxify = require('./proxify');\nvar transferFlags = require('./transferFlags');\n\n/*!\n * Module variables\n */\n\n// Check whether `Object.setPrototypeOf` is supported\nvar canSetPrototype = typeof Object.setPrototypeOf === 'function';\n\n// Without `Object.setPrototypeOf` support, this module will need to add properties to a function.\n// However, some of functions' own props are not configurable and should be skipped.\nvar testFn = function() {};\nvar excludeNames = Object.getOwnPropertyNames(testFn).filter(function(name) {\n  var propDesc = Object.getOwnPropertyDescriptor(testFn, name);\n\n  // Note: PhantomJS 1.x includes `callee` as one of `testFn`'s own properties,\n  // but then returns `undefined` as the property descriptor for `callee`. As a\n  // workaround, we perform an otherwise unnecessary type-check for `propDesc`,\n  // and then filter it out if it's not an object as it should be.\n  if (typeof propDesc !== 'object')\n    return true;\n\n  return !propDesc.configurable;\n});\n\n// Cache `Function` properties\nvar call  = Function.prototype.call,\n    apply = Function.prototype.apply;\n\n/**\n * ### .addChainableMethod(ctx, name, method, chainingBehavior)\n *\n * Adds a method to an object, such that the method can also be chained.\n *\n *     utils.addChainableMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addChainableMethod('foo', fn, chainingBehavior);\n *\n * The result can then be used as both a method assertion, executing both `method` and\n * `chainingBehavior`, or as a language chain, which only executes `chainingBehavior`.\n *\n *     expect(fooStr).to.be.foo('bar');\n *     expect(fooStr).to.be.foo.equal('foo');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for `name`, when called\n * @param {Function} chainingBehavior function to be called every time the property is accessed\n * @namespace Utils\n * @name addChainableMethod\n * @api public\n */\n\nmodule.exports = function addChainableMethod(ctx, name, method, chainingBehavior) {\n  if (typeof chainingBehavior !== 'function') {\n    chainingBehavior = function () { };\n  }\n\n  var chainableBehavior = {\n      method: method\n    , chainingBehavior: chainingBehavior\n  };\n\n  // save the methods so we can overwrite them later, if we need to.\n  if (!ctx.__methods) {\n    ctx.__methods = {};\n  }\n  ctx.__methods[name] = chainableBehavior;\n\n  Object.defineProperty(ctx, name,\n    { get: function chainableMethodGetter() {\n        chainableBehavior.chainingBehavior.call(this);\n\n        var chainableMethodWrapper = function () {\n          // Setting the `ssfi` flag to `chainableMethodWrapper` causes this\n          // function to be the starting point for removing implementation\n          // frames from the stack trace of a failed assertion.\n          //\n          // However, we only want to use this function as the starting point if\n          // the `lockSsfi` flag isn't set.\n          //\n          // If the `lockSsfi` flag is set, then this assertion is being\n          // invoked from inside of another assertion. In this case, the `ssfi`\n          // flag has already been set by the outer assertion.\n          //\n          // Note that overwriting a chainable method merely replaces the saved\n          // methods in `ctx.__methods` instead of completely replacing the\n          // overwritten assertion. Therefore, an overwriting assertion won't\n          // set the `ssfi` or `lockSsfi` flags.\n          if (!flag(this, 'lockSsfi')) {\n            flag(this, 'ssfi', chainableMethodWrapper);\n          }\n\n          var result = chainableBehavior.method.apply(this, arguments);\n          if (result !== undefined) {\n            return result;\n          }\n\n          var newAssertion = new chai.Assertion();\n          transferFlags(this, newAssertion);\n          return newAssertion;\n        };\n\n        addLengthGuard(chainableMethodWrapper, name, true);\n\n        // Use `Object.setPrototypeOf` if available\n        if (canSetPrototype) {\n          // Inherit all properties from the object by replacing the `Function` prototype\n          var prototype = Object.create(this);\n          // Restore the `call` and `apply` methods from `Function`\n          prototype.call = call;\n          prototype.apply = apply;\n          Object.setPrototypeOf(chainableMethodWrapper, prototype);\n        }\n        // Otherwise, redefine all properties (slow!)\n        else {\n          var asserterNames = Object.getOwnPropertyNames(ctx);\n          asserterNames.forEach(function (asserterName) {\n            if (excludeNames.indexOf(asserterName) !== -1) {\n              return;\n            }\n\n            var pd = Object.getOwnPropertyDescriptor(ctx, asserterName);\n            Object.defineProperty(chainableMethodWrapper, asserterName, pd);\n          });\n        }\n\n        transferFlags(this, chainableMethodWrapper);\n        return proxify(chainableMethodWrapper);\n      }\n    , configurable: true\n  });\n};\n","/*!\n * Chai - overwriteChainableMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar chai = require('../../chai');\nvar transferFlags = require('./transferFlags');\n\n/**\n * ### .overwriteChainableMethod(ctx, name, method, chainingBehavior)\n *\n * Overwites an already existing chainable method\n * and provides access to the previous function or\n * property.  Must return functions to be used for\n * name.\n *\n *     utils.overwriteChainableMethod(chai.Assertion.prototype, 'lengthOf',\n *       function (_super) {\n *       }\n *     , function (_super) {\n *       }\n *     );\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteChainableMethod('foo', fn, fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.have.lengthOf(3);\n *     expect(myFoo).to.have.lengthOf.above(3);\n *\n * @param {Object} ctx object whose method / property is to be overwritten\n * @param {String} name of method / property to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @param {Function} chainingBehavior function that returns a function to be used for property\n * @namespace Utils\n * @name overwriteChainableMethod\n * @api public\n */\n\nmodule.exports = function overwriteChainableMethod(ctx, name, method, chainingBehavior) {\n  var chainableBehavior = ctx.__methods[name];\n\n  var _chainingBehavior = chainableBehavior.chainingBehavior;\n  chainableBehavior.chainingBehavior = function overwritingChainableMethodGetter() {\n    var result = chainingBehavior(_chainingBehavior).call(this);\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n\n  var _method = chainableBehavior.method;\n  chainableBehavior.method = function overwritingChainableMethodWrapper() {\n    var result = method(_method).apply(this, arguments);\n    if (result !== undefined) {\n      return result;\n    }\n\n    var newAssertion = new chai.Assertion();\n    transferFlags(this, newAssertion);\n    return newAssertion;\n  };\n};\n","/*!\n * Chai - compareByInspect utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependancies\n */\n\nvar inspect = require('./inspect');\n\n/**\n * ### .compareByInspect(mixed, mixed)\n *\n * To be used as a compareFunction with Array.prototype.sort. Compares elements\n * using inspect instead of default behavior of using toString so that Symbols\n * and objects with irregular/missing toString can still be sorted without a\n * TypeError.\n *\n * @param {Mixed} first element to compare\n * @param {Mixed} second element to compare\n * @returns {Number} -1 if 'a' should come before 'b'; otherwise 1 \n * @name compareByInspect\n * @namespace Utils\n * @api public\n */\n\nmodule.exports = function compareByInspect(a, b) {\n  return inspect(a) < inspect(b) ? -1 : 1;\n};\n","/*!\n * Chai - getOwnEnumerablePropertySymbols utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getOwnEnumerablePropertySymbols(object)\n *\n * This allows the retrieval of directly-owned enumerable property symbols of an\n * object. This function is necessary because Object.getOwnPropertySymbols\n * returns both enumerable and non-enumerable property symbols.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getOwnEnumerablePropertySymbols\n * @api public\n */\n\nmodule.exports = function getOwnEnumerablePropertySymbols(obj) {\n  if (typeof Object.getOwnPropertySymbols !== 'function') return [];\n\n  return Object.getOwnPropertySymbols(obj).filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(obj, sym).enumerable;\n  });\n};\n","/*!\n * Chai - getOwnEnumerableProperties utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependancies\n */\n\nvar getOwnEnumerablePropertySymbols = require('./getOwnEnumerablePropertySymbols');\n\n/**\n * ### .getOwnEnumerableProperties(object)\n *\n * This allows the retrieval of directly-owned enumerable property names and\n * symbols of an object. This function is necessary because Object.keys only\n * returns enumerable property names, not enumerable property symbols.\n *\n * @param {Object} object\n * @returns {Array}\n * @namespace Utils\n * @name getOwnEnumerableProperties\n * @api public\n */\n\nmodule.exports = function getOwnEnumerableProperties(obj) {\n  return Object.keys(obj).concat(getOwnEnumerablePropertySymbols(obj));\n};\n","'use strict';\n\n/* !\n * Chai - checkError utility\n * Copyright(c) 2012-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .checkError\n *\n * Checks that an error conforms to a given set of criteria and/or retrieves information about it.\n *\n * @api public\n */\n\n/**\n * ### .compatibleInstance(thrown, errorLike)\n *\n * Checks if two instances are compatible (strict equal).\n * Returns false if errorLike is not an instance of Error, because instances\n * can only be compatible if they're both error instances.\n *\n * @name compatibleInstance\n * @param {Error} thrown error\n * @param {Error|ErrorConstructor} errorLike object to compare against\n * @namespace Utils\n * @api public\n */\n\nfunction compatibleInstance(thrown, errorLike) {\n  return errorLike instanceof Error && thrown === errorLike;\n}\n\n/**\n * ### .compatibleConstructor(thrown, errorLike)\n *\n * Checks if two constructors are compatible.\n * This function can receive either an error constructor or\n * an error instance as the `errorLike` argument.\n * Constructors are compatible if they're the same or if one is\n * an instance of another.\n *\n * @name compatibleConstructor\n * @param {Error} thrown error\n * @param {Error|ErrorConstructor} errorLike object to compare against\n * @namespace Utils\n * @api public\n */\n\nfunction compatibleConstructor(thrown, errorLike) {\n  if (errorLike instanceof Error) {\n    // If `errorLike` is an instance of any error we compare their constructors\n    return thrown.constructor === errorLike.constructor || thrown instanceof errorLike.constructor;\n  } else if (errorLike.prototype instanceof Error || errorLike === Error) {\n    // If `errorLike` is a constructor that inherits from Error, we compare `thrown` to `errorLike` directly\n    return thrown.constructor === errorLike || thrown instanceof errorLike;\n  }\n\n  return false;\n}\n\n/**\n * ### .compatibleMessage(thrown, errMatcher)\n *\n * Checks if an error's message is compatible with a matcher (String or RegExp).\n * If the message contains the String or passes the RegExp test,\n * it is considered compatible.\n *\n * @name compatibleMessage\n * @param {Error} thrown error\n * @param {String|RegExp} errMatcher to look for into the message\n * @namespace Utils\n * @api public\n */\n\nfunction compatibleMessage(thrown, errMatcher) {\n  var comparisonString = typeof thrown === 'string' ? thrown : thrown.message;\n  if (errMatcher instanceof RegExp) {\n    return errMatcher.test(comparisonString);\n  } else if (typeof errMatcher === 'string') {\n    return comparisonString.indexOf(errMatcher) !== -1; // eslint-disable-line no-magic-numbers\n  }\n\n  return false;\n}\n\n/**\n * ### .getFunctionName(constructorFn)\n *\n * Returns the name of a function.\n * This also includes a polyfill function if `constructorFn.name` is not defined.\n *\n * @name getFunctionName\n * @param {Function} constructorFn\n * @namespace Utils\n * @api private\n */\n\nvar functionNameMatch = /\\s*function(?:\\s|\\s*\\/\\*[^(?:*\\/)]+\\*\\/\\s*)*([^\\(\\/]+)/;\nfunction getFunctionName(constructorFn) {\n  var name = '';\n  if (typeof constructorFn.name === 'undefined') {\n    // Here we run a polyfill if constructorFn.name is not defined\n    var match = String(constructorFn).match(functionNameMatch);\n    if (match) {\n      name = match[1];\n    }\n  } else {\n    name = constructorFn.name;\n  }\n\n  return name;\n}\n\n/**\n * ### .getConstructorName(errorLike)\n *\n * Gets the constructor name for an Error instance or constructor itself.\n *\n * @name getConstructorName\n * @param {Error|ErrorConstructor} errorLike\n * @namespace Utils\n * @api public\n */\n\nfunction getConstructorName(errorLike) {\n  var constructorName = errorLike;\n  if (errorLike instanceof Error) {\n    constructorName = getFunctionName(errorLike.constructor);\n  } else if (typeof errorLike === 'function') {\n    // If `err` is not an instance of Error it is an error constructor itself or another function.\n    // If we've got a common function we get its name, otherwise we may need to create a new instance\n    // of the error just in case it's a poorly-constructed error. Please see chaijs/chai/issues/45 to know more.\n    constructorName = getFunctionName(errorLike).trim() ||\n        getFunctionName(new errorLike()); // eslint-disable-line new-cap\n  }\n\n  return constructorName;\n}\n\n/**\n * ### .getMessage(errorLike)\n *\n * Gets the error message from an error.\n * If `err` is a String itself, we return it.\n * If the error has no message, we return an empty string.\n *\n * @name getMessage\n * @param {Error|String} errorLike\n * @namespace Utils\n * @api public\n */\n\nfunction getMessage(errorLike) {\n  var msg = '';\n  if (errorLike && errorLike.message) {\n    msg = errorLike.message;\n  } else if (typeof errorLike === 'string') {\n    msg = errorLike;\n  }\n\n  return msg;\n}\n\nmodule.exports = {\n  compatibleInstance: compatibleInstance,\n  compatibleConstructor: compatibleConstructor,\n  compatibleMessage: compatibleMessage,\n  getMessage: getMessage,\n  getConstructorName: getConstructorName,\n};\n","/*!\n * Chai - isNaN utility\n * Copyright(c) 2012-2015 Sakthipriyan Vairamani <thechargingvolcano@gmail.com>\n * MIT Licensed\n */\n\n/**\n * ### .isNaN(value)\n *\n * Checks if the given value is NaN or not.\n *\n *     utils.isNaN(NaN); // true\n *\n * @param {Value} The value which has to be checked if it is NaN\n * @name isNaN\n * @api private\n */\n\nfunction isNaN(value) {\n  // Refer http://www.ecma-international.org/ecma-262/6.0/#sec-isnan-number\n  // section's NOTE.\n  return value !== value;\n}\n\n// If ECMAScript 6's Number.isNaN is present, prefer that.\nmodule.exports = Number.isNaN || isNaN;\n","/*!\n * chai\n * Copyright(c) 2011 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Dependencies that are used for multiple exports are required here only once\n */\n\nvar pathval = require('pathval');\n\n/*!\n * test utility\n */\n\nexports.test = require('./test');\n\n/*!\n * type utility\n */\n\nexports.type = require('type-detect');\n\n/*!\n * expectTypes utility\n */\nexports.expectTypes = require('./expectTypes');\n\n/*!\n * message utility\n */\n\nexports.getMessage = require('./getMessage');\n\n/*!\n * actual utility\n */\n\nexports.getActual = require('./getActual');\n\n/*!\n * Inspect util\n */\n\nexports.inspect = require('./inspect');\n\n/*!\n * Object Display util\n */\n\nexports.objDisplay = require('./objDisplay');\n\n/*!\n * Flag utility\n */\n\nexports.flag = require('./flag');\n\n/*!\n * Flag transferring utility\n */\n\nexports.transferFlags = require('./transferFlags');\n\n/*!\n * Deep equal utility\n */\n\nexports.eql = require('deep-eql');\n\n/*!\n * Deep path info\n */\n\nexports.getPathInfo = pathval.getPathInfo;\n\n/*!\n * Check if a property exists\n */\n\nexports.hasProperty = pathval.hasProperty;\n\n/*!\n * Function name\n */\n\nexports.getName = require('get-func-name');\n\n/*!\n * add Property\n */\n\nexports.addProperty = require('./addProperty');\n\n/*!\n * add Method\n */\n\nexports.addMethod = require('./addMethod');\n\n/*!\n * overwrite Property\n */\n\nexports.overwriteProperty = require('./overwriteProperty');\n\n/*!\n * overwrite Method\n */\n\nexports.overwriteMethod = require('./overwriteMethod');\n\n/*!\n * Add a chainable method\n */\n\nexports.addChainableMethod = require('./addChainableMethod');\n\n/*!\n * Overwrite chainable method\n */\n\nexports.overwriteChainableMethod = require('./overwriteChainableMethod');\n\n/*!\n * Compare by inspect method\n */\n\nexports.compareByInspect = require('./compareByInspect');\n\n/*!\n * Get own enumerable property symbols method\n */\n\nexports.getOwnEnumerablePropertySymbols = require('./getOwnEnumerablePropertySymbols');\n\n/*!\n * Get own enumerable properties method\n */\n\nexports.getOwnEnumerableProperties = require('./getOwnEnumerableProperties');\n\n/*!\n * Checks error against a given set of criteria\n */\n\nexports.checkError = require('check-error');\n\n/*!\n * Proxify util\n */\n\nexports.proxify = require('./proxify');\n\n/*!\n * addLengthGuard util\n */\n\nexports.addLengthGuard = require('./addLengthGuard');\n\n/*!\n * isProxyEnabled helper\n */\n\nexports.isProxyEnabled = require('./isProxyEnabled');\n\n/*!\n * isNaN method\n */\n\nexports.isNaN = require('./isNaN');\n","/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar config = require('./config');\n\nmodule.exports = function (_chai, util) {\n  /*!\n   * Module dependencies.\n   */\n\n  var AssertionError = _chai.AssertionError\n    , flag = util.flag;\n\n  /*!\n   * Module export.\n   */\n\n  _chai.Assertion = Assertion;\n\n  /*!\n   * Assertion Constructor\n   *\n   * Creates object for chaining.\n   *\n   * `Assertion` objects contain metadata in the form of flags. Three flags can\n   * be assigned during instantiation by passing arguments to this constructor:\n   *\n   * - `object`: This flag contains the target of the assertion. For example, in\n   *   the assertion `expect(numKittens).to.equal(7);`, the `object` flag will\n   *   contain `numKittens` so that the `equal` assertion can reference it when\n   *   needed.\n   *\n   * - `message`: This flag contains an optional custom error message to be\n   *   prepended to the error message that's generated by the assertion when it\n   *   fails.\n   *\n   * - `ssfi`: This flag stands for \"start stack function indicator\". It\n   *   contains a function reference that serves as the starting point for\n   *   removing frames from the stack trace of the error that's created by the\n   *   assertion when it fails. The goal is to provide a cleaner stack trace to\n   *   end users by removing Chai's internal functions. Note that it only works\n   *   in environments that support `Error.captureStackTrace`, and only when\n   *   `Chai.config.includeStack` hasn't been set to `false`.\n   *\n   * - `lockSsfi`: This flag controls whether or not the given `ssfi` flag\n   *   should retain its current value, even as assertions are chained off of\n   *   this object. This is usually set to `true` when creating a new assertion\n   *   from within another assertion. It's also temporarily set to `true` before\n   *   an overwritten assertion gets called by the overwriting assertion.\n   *\n   * @param {Mixed} obj target of the assertion\n   * @param {String} msg (optional) custom error message\n   * @param {Function} ssfi (optional) starting point for removing stack frames\n   * @param {Boolean} lockSsfi (optional) whether or not the ssfi flag is locked\n   * @api private\n   */\n\n  function Assertion (obj, msg, ssfi, lockSsfi) {\n    flag(this, 'ssfi', ssfi || Assertion);\n    flag(this, 'lockSsfi', lockSsfi);\n    flag(this, 'object', obj);\n    flag(this, 'message', msg);\n\n    return util.proxify(this);\n  }\n\n  Object.defineProperty(Assertion, 'includeStack', {\n    get: function() {\n      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n      return config.includeStack;\n    },\n    set: function(value) {\n      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n      config.includeStack = value;\n    }\n  });\n\n  Object.defineProperty(Assertion, 'showDiff', {\n    get: function() {\n      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n      return config.showDiff;\n    },\n    set: function(value) {\n      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n      config.showDiff = value;\n    }\n  });\n\n  Assertion.addProperty = function (name, fn) {\n    util.addProperty(this.prototype, name, fn);\n  };\n\n  Assertion.addMethod = function (name, fn) {\n    util.addMethod(this.prototype, name, fn);\n  };\n\n  Assertion.addChainableMethod = function (name, fn, chainingBehavior) {\n    util.addChainableMethod(this.prototype, name, fn, chainingBehavior);\n  };\n\n  Assertion.overwriteProperty = function (name, fn) {\n    util.overwriteProperty(this.prototype, name, fn);\n  };\n\n  Assertion.overwriteMethod = function (name, fn) {\n    util.overwriteMethod(this.prototype, name, fn);\n  };\n\n  Assertion.overwriteChainableMethod = function (name, fn, chainingBehavior) {\n    util.overwriteChainableMethod(this.prototype, name, fn, chainingBehavior);\n  };\n\n  /**\n   * ### .assert(expression, message, negateMessage, expected, actual, showDiff)\n   *\n   * Executes an expression and check expectations. Throws AssertionError for reporting if test doesn't pass.\n   *\n   * @name assert\n   * @param {Philosophical} expression to be tested\n   * @param {String|Function} message or function that returns message to display if expression fails\n   * @param {String|Function} negatedMessage or function that returns negatedMessage to display if negated expression fails\n   * @param {Mixed} expected value (remember to check for negation)\n   * @param {Mixed} actual (optional) will default to `this.obj`\n   * @param {Boolean} showDiff (optional) when set to `true`, assert will display a diff in addition to the message if expression fails\n   * @api private\n   */\n\n  Assertion.prototype.assert = function (expr, msg, negateMsg, expected, _actual, showDiff) {\n    var ok = util.test(this, arguments);\n    if (false !== showDiff) showDiff = true;\n    if (undefined === expected && undefined === _actual) showDiff = false;\n    if (true !== config.showDiff) showDiff = false;\n\n    if (!ok) {\n      msg = util.getMessage(this, arguments);\n      var actual = util.getActual(this, arguments);\n      throw new AssertionError(msg, {\n          actual: actual\n        , expected: expected\n        , showDiff: showDiff\n      }, (config.includeStack) ? this.assert : flag(this, 'ssfi'));\n    }\n  };\n\n  /*!\n   * ### ._obj\n   *\n   * Quick reference to stored `actual` value for plugin developers.\n   *\n   * @api private\n   */\n\n  Object.defineProperty(Assertion.prototype, '_obj',\n    { get: function () {\n        return flag(this, 'object');\n      }\n    , set: function (val) {\n        flag(this, 'object', val);\n      }\n  });\n};\n","/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, _) {\n  var Assertion = chai.Assertion\n    , AssertionError = chai.AssertionError\n    , flag = _.flag;\n\n  /**\n   * ### Language Chains\n   *\n   * The following are provided as chainable getters to improve the readability\n   * of your assertions.\n   *\n   * **Chains**\n   *\n   * - to\n   * - be\n   * - been\n   * - is\n   * - that\n   * - which\n   * - and\n   * - has\n   * - have\n   * - with\n   * - at\n   * - of\n   * - same\n   * - but\n   * - does\n   *\n   * @name language chains\n   * @namespace BDD\n   * @api public\n   */\n\n  [ 'to', 'be', 'been'\n  , 'is', 'and', 'has', 'have'\n  , 'with', 'that', 'which', 'at'\n  , 'of', 'same', 'but', 'does' ].forEach(function (chain) {\n    Assertion.addProperty(chain);\n  });\n\n  /**\n   * ### .not\n   *\n   * Negates all assertions that follow in the chain.\n   *\n   *     expect(function () {}).to.not.throw();\n   *     expect({a: 1}).to.not.have.property('b');\n   *     expect([1, 2]).to.be.an('array').that.does.not.include(3);\n   *\n   * Just because you can negate any assertion with `.not` doesn't mean you\n   * should. With great power comes great responsibility. It's often best to\n   * assert that the one expected output was produced, rather than asserting\n   * that one of countless unexpected outputs wasn't produced. See individual\n   * assertions for specific guidance.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.equal(1); // Not recommended\n   *\n   * @name not\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('not', function () {\n    flag(this, 'negate', true);\n  });\n\n  /**\n   * ### .deep\n   *\n   * Causes all `.equal`, `.include`, `.members`, `.keys`, and `.property`\n   * assertions that follow in the chain to use deep equality instead of strict\n   * (`===`) equality. See the `deep-eql` project page for info on the deep\n   * equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) equals `{a: 1}`\n   *     expect({a: 1}).to.deep.equal({a: 1});\n   *     expect({a: 1}).to.not.equal({a: 1});\n   *\n   *     // Target array deeply (but not strictly) includes `{a: 1}`\n   *     expect([{a: 1}]).to.deep.include({a: 1});\n   *     expect([{a: 1}]).to.not.include({a: 1});\n   *\n   *     // Target object deeply (but not strictly) includes `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.deep.include({x: {a: 1}});\n   *     expect({x: {a: 1}}).to.not.include({x: {a: 1}});\n   *\n   *     // Target array deeply (but not strictly) has member `{a: 1}`\n   *     expect([{a: 1}]).to.have.deep.members([{a: 1}]);\n   *     expect([{a: 1}]).to.not.have.members([{a: 1}]);\n   *\n   *     // Target set deeply (but not strictly) has key `{a: 1}`\n   *     expect(new Set([{a: 1}])).to.have.deep.keys([{a: 1}]);\n   *     expect(new Set([{a: 1}])).to.not.have.keys([{a: 1}]);\n   *\n   *     // Target object deeply (but not strictly) has property `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.have.deep.property('x', {a: 1});\n   *     expect({x: {a: 1}}).to.not.have.property('x', {a: 1});\n   *\n   * @name deep\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('deep', function () {\n    flag(this, 'deep', true);\n  });\n\n  /**\n   * ### .nested\n   *\n   * Enables dot- and bracket-notation in all `.property` and `.include`\n   * assertions that follow in the chain.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]');\n   *     expect({a: {b: ['x', 'y']}}).to.nested.include({'a.b[1]': 'y'});\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 'x'}}).to.have.nested.property('\\\\.a.\\\\[b\\\\]');\n   *     expect({'.a': {'[b]': 'x'}}).to.nested.include({'\\\\.a.\\\\[b\\\\]': 'x'});\n   *\n   * `.nested` cannot be combined with `.own`.\n   *\n   * @name nested\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('nested', function () {\n    flag(this, 'nested', true);\n  });\n\n  /**\n   * ### .own\n   *\n   * Causes all `.property` and `.include` assertions that follow in the chain\n   * to ignore inherited properties.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.have.own.property('a');\n   *     expect({a: 1}).to.have.property('b').but.not.own.property('b'); \n   *\n   *     expect({a: 1}).to.own.include({a: 1});\n   *     expect({a: 1}).to.include({b: 2}).but.not.own.include({b: 2});\n   *\n   * `.own` cannot be combined with `.nested`.\n   *\n   * @name own\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('own', function () {\n    flag(this, 'own', true);\n  });\n\n  /**\n   * ### .ordered\n   *\n   * Causes all `.members` assertions that follow in the chain to require that\n   * members be in the same order.\n   *\n   *     expect([1, 2]).to.have.ordered.members([1, 2])\n   *       .but.not.have.ordered.members([2, 1]);\n   *\n   * When `.include` and `.ordered` are combined, the ordering begins at the\n   * start of both arrays.\n   *\n   *     expect([1, 2, 3]).to.include.ordered.members([1, 2])\n   *       .but.not.include.ordered.members([2, 3]);\n   *\n   * @name ordered\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('ordered', function () {\n    flag(this, 'ordered', true);\n  });\n\n  /**\n   * ### .any\n   *\n   * Causes all `.keys` assertions that follow in the chain to only require that\n   * the target have at least one of the given keys. This is the opposite of\n   * `.all`, which requires that the target have all of the given keys.\n   *\n   *     expect({a: 1, b: 2}).to.not.have.any.keys('c', 'd');\n   *\n   * See the `.keys` doc for guidance on when to use `.any` or `.all`.\n   *\n   * @name any\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('any', function () {\n    flag(this, 'any', true);\n    flag(this, 'all', false);\n  });\n\n\n  /**\n   * ### .all\n   *\n   * Causes all `.keys` assertions that follow in the chain to require that the\n   * target have all of the given keys. This is the opposite of `.any`, which\n   * only requires that the target have at least one of the given keys.\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *\n   * Note that `.all` is used by default when neither `.all` nor `.any` are\n   * added earlier in the chain. However, it's often best to add `.all` anyway\n   * because it improves readability.\n   *\n   * See the `.keys` doc for guidance on when to use `.any` or `.all`.\n   *\n   * @name all\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('all', function () {\n    flag(this, 'all', true);\n    flag(this, 'any', false);\n  });\n\n  /**\n   * ### .a(type[, msg])\n   *\n   * Asserts that the target's type is equal to the given string `type`. Types\n   * are case insensitive. See the `type-detect` project page for info on the\n   * type detection algorithm: https://github.com/chaijs/type-detect.\n   *\n   *     expect('foo').to.be.a('string');\n   *     expect({a: 1}).to.be.an('object');\n   *     expect(null).to.be.a('null');\n   *     expect(undefined).to.be.an('undefined');\n   *     expect(new Error).to.be.an('error');\n   *     expect(Promise.resolve()).to.be.a('promise');\n   *     expect(new Float32Array).to.be.a('float32array');\n   *     expect(Symbol()).to.be.a('symbol');\n   *\n   * `.a` supports objects that have a custom type set via `Symbol.toStringTag`.\n   *\n   *     var myObj = {\n   *       [Symbol.toStringTag]: 'myCustomType'\n   *     };\n   *\n   *     expect(myObj).to.be.a('myCustomType').but.not.an('object');\n   *\n   * It's often best to use `.a` to check a target's type before making more\n   * assertions on the same target. That way, you avoid unexpected behavior from\n   * any assertion that does different things based on the target's type.\n   *\n   *     expect([1, 2, 3]).to.be.an('array').that.includes(2);\n   *     expect([]).to.be.an('array').that.is.empty;\n   *\n   * Add `.not` earlier in the chain to negate `.a`. However, it's often best to\n   * assert that the target is the expected type, rather than asserting that it\n   * isn't one of many unexpected types.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.an('array'); // Not recommended\n   *\n   * `.a` accepts an optional `msg` argument which is a custom error message to\n   * show when the assertion fails. The message can also be given as the second\n   * argument to `expect`.\n   *\n   *     expect(1).to.be.a('string', 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.a('string');\n   *\n   * `.a` can also be used as a language chain to improve the readability of\n   * your assertions. \n   *\n   *     expect({b: 2}).to.have.a.property('b');\n   *\n   * The alias `.an` can be used interchangeably with `.a`.\n   *\n   * @name a\n   * @alias an\n   * @param {String} type\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function an (type, msg) {\n    if (msg) flag(this, 'message', msg);\n    type = type.toLowerCase();\n    var obj = flag(this, 'object')\n      , article = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(type.charAt(0)) ? 'an ' : 'a ';\n\n    this.assert(\n        type === _.type(obj).toLowerCase()\n      , 'expected #{this} to be ' + article + type\n      , 'expected #{this} not to be ' + article + type\n    );\n  }\n\n  Assertion.addChainableMethod('an', an);\n  Assertion.addChainableMethod('a', an);\n\n  /**\n   * ### .include(val[, msg])\n   *\n   * When the target is a string, `.include` asserts that the given string `val`\n   * is a substring of the target.\n   *\n   *     expect('foobar').to.include('foo');\n   *\n   * When the target is an array, `.include` asserts that the given `val` is a\n   * member of the target.\n   *\n   *     expect([1, 2, 3]).to.include(2);\n   *\n   * When the target is an object, `.include` asserts that the given object\n   * `val`'s properties are a subset of the target's properties.\n   *\n   *     expect({a: 1, b: 2, c: 3}).to.include({a: 1, b: 2});\n   *\n   * When the target is a Set or WeakSet, `.include` asserts that the given `val` is a\n   * member of the target. SameValueZero equality algorithm is used.\n   *\n   *     expect(new Set([1, 2])).to.include(2);\n   *\n   * When the target is a Map, `.include` asserts that the given `val` is one of\n   * the values of the target. SameValueZero equality algorithm is used.\n   *\n   *     expect(new Map([['a', 1], ['b', 2]])).to.include(2);\n   *\n   * Because `.include` does different things based on the target's type, it's\n   * important to check the target's type before using `.include`. See the `.a`\n   * doc for info on testing a target's type.\n   *\n   *     expect([1, 2, 3]).to.be.an('array').that.includes(2);\n   *\n   * By default, strict (`===`) equality is used to compare array members and\n   * object properties. Add `.deep` earlier in the chain to use deep equality\n   * instead (WeakSet targets are not supported). See the `deep-eql` project\n   * page for info on the deep equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target array deeply (but not strictly) includes `{a: 1}`\n   *     expect([{a: 1}]).to.deep.include({a: 1});\n   *     expect([{a: 1}]).to.not.include({a: 1});\n   *\n   *     // Target object deeply (but not strictly) includes `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.deep.include({x: {a: 1}});\n   *     expect({x: {a: 1}}).to.not.include({x: {a: 1}});\n   *\n   * By default, all of the target's properties are searched when working with\n   * objects. This includes properties that are inherited and/or non-enumerable.\n   * Add `.own` earlier in the chain to exclude the target's inherited\n   * properties from the search.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.own.include({a: 1});\n   *     expect({a: 1}).to.include({b: 2}).but.not.own.include({b: 2});\n   *\n   * Note that a target object is always only searched for `val`'s own\n   * enumerable properties.\n   *\n   * `.deep` and `.own` can be combined.\n   *\n   *     expect({a: {b: 2}}).to.deep.own.include({a: {b: 2}});\n   *\n   * Add `.nested` earlier in the chain to enable dot- and bracket-notation when\n   * referencing nested properties.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.nested.include({'a.b[1]': 'y'});\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 2}}).to.nested.include({'\\\\.a.\\\\[b\\\\]': 2});\n   *\n   * `.deep` and `.nested` can be combined.\n   *\n   *     expect({a: {b: [{c: 3}]}}).to.deep.nested.include({'a.b[0]': {c: 3}});\n   *\n   * `.own` and `.nested` cannot be combined.\n   *\n   * Add `.not` earlier in the chain to negate `.include`.\n   *\n   *     expect('foobar').to.not.include('taco');\n   *     expect([1, 2, 3]).to.not.include(4);\n   * \n   * However, it's dangerous to negate `.include` when the target is an object.\n   * The problem is that it creates uncertain expectations by asserting that the\n   * target object doesn't have all of `val`'s key/value pairs but may or may\n   * not have some of them. It's often best to identify the exact output that's\n   * expected, and then write an assertion that only accepts that exact output.\n   *\n   * When the target object isn't even expected to have `val`'s keys, it's\n   * often best to assert exactly that.\n   *\n   *     expect({c: 3}).to.not.have.any.keys('a', 'b'); // Recommended\n   *     expect({c: 3}).to.not.include({a: 1, b: 2}); // Not recommended\n   *\n   * When the target object is expected to have `val`'s keys, it's often best to\n   * assert that each of the properties has its expected value, rather than\n   * asserting that each property doesn't have one of many unexpected values.\n   *\n   *     expect({a: 3, b: 4}).to.include({a: 3, b: 4}); // Recommended\n   *     expect({a: 3, b: 4}).to.not.include({a: 1, b: 2}); // Not recommended\n   *\n   * `.include` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2, 3]).to.include(4, 'nooo why fail??');\n   *     expect([1, 2, 3], 'nooo why fail??').to.include(4);\n   *\n   * `.include` can also be used as a language chain, causing all `.members` and\n   * `.keys` assertions that follow in the chain to require the target to be a\n   * superset of the expected set, rather than an identical set. Note that\n   * `.members` ignores duplicates in the subset when `.include` is added.\n   *\n   *     // Target object's keys are a superset of ['a', 'b'] but not identical\n   *     expect({a: 1, b: 2, c: 3}).to.include.all.keys('a', 'b');\n   *     expect({a: 1, b: 2, c: 3}).to.not.have.all.keys('a', 'b');\n   *\n   *     // Target array is a superset of [1, 2] but not identical\n   *     expect([1, 2, 3]).to.include.members([1, 2]);\n   *     expect([1, 2, 3]).to.not.have.members([1, 2]);\n   *\n   *     // Duplicates in the subset are ignored\n   *     expect([1, 2, 3]).to.include.members([1, 2, 2, 2]);\n   *\n   * Note that adding `.any` earlier in the chain causes the `.keys` assertion\n   * to ignore `.include`.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1}).to.include.any.keys('a', 'b');\n   *     expect({a: 1}).to.have.any.keys('a', 'b');\n   *\n   * The aliases `.includes`, `.contain`, and `.contains` can be used\n   * interchangeably with `.include`.\n   *\n   * @name include\n   * @alias contain\n   * @alias includes\n   * @alias contains\n   * @param {Mixed} val\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function SameValueZero(a, b) {\n    return (_.isNaN(a) && _.isNaN(b)) || a === b;\n  }\n\n  function includeChainingBehavior () {\n    flag(this, 'contains', true);\n  }\n\n  function include (val, msg) {\n    if (msg) flag(this, 'message', msg);\n    \n    var obj = flag(this, 'object')\n      , objType = _.type(obj).toLowerCase()\n      , flagMsg = flag(this, 'message')\n      , negate = flag(this, 'negate')\n      , ssfi = flag(this, 'ssfi')\n      , isDeep = flag(this, 'deep')\n      , descriptor = isDeep ? 'deep ' : '';\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n    var included = false;\n\n    switch (objType) {\n      case 'string':\n        included = obj.indexOf(val) !== -1;\n        break;\n\n      case 'weakset':\n        if (isDeep) {\n          throw new AssertionError(\n            flagMsg + 'unable to use .deep.include with WeakSet',\n            undefined,\n            ssfi\n          );\n        }\n\n        included = obj.has(val);\n        break;\n\n      case 'map':\n        var isEql = isDeep ? _.eql : SameValueZero;\n        obj.forEach(function (item) {\n          included = included || isEql(item, val);\n        });\n        break;\n\n      case 'set':\n        if (isDeep) {\n          obj.forEach(function (item) {\n            included = included || _.eql(item, val);\n          });\n        } else {\n          included = obj.has(val);\n        }\n        break;\n\n      case 'array':\n        if (isDeep) {\n          included = obj.some(function (item) {\n            return _.eql(item, val);\n          })\n        } else {\n          included = obj.indexOf(val) !== -1;\n        }\n        break;\n\n      default:\n        // This block is for asserting a subset of properties in an object.\n        // `_.expectTypes` isn't used here because `.include` should work with\n        // objects with a custom `@@toStringTag`.\n        if (val !== Object(val)) {\n          throw new AssertionError(\n            flagMsg + 'object tested must be an array, a map, an object,'\n              + ' a set, a string, or a weakset, but ' + objType + ' given',\n            undefined,\n            ssfi\n          );\n        }\n\n        var props = Object.keys(val)\n          , firstErr = null\n          , numErrs = 0;\n  \n        props.forEach(function (prop) {\n          var propAssertion = new Assertion(obj);\n          _.transferFlags(this, propAssertion, true);\n          flag(propAssertion, 'lockSsfi', true);\n  \n          if (!negate || props.length === 1) {\n            propAssertion.property(prop, val[prop]);\n            return;\n          }\n  \n          try {\n            propAssertion.property(prop, val[prop]);\n          } catch (err) {\n            if (!_.checkError.compatibleConstructor(err, AssertionError)) {\n              throw err;\n            }\n            if (firstErr === null) firstErr = err;\n            numErrs++;\n          }\n        }, this);\n  \n        // When validating .not.include with multiple properties, we only want\n        // to throw an assertion error if all of the properties are included,\n        // in which case we throw the first property assertion error that we\n        // encountered.\n        if (negate && props.length > 1 && numErrs === props.length) {\n          throw firstErr;\n        }\n        return;\n    }\n\n    // Assert inclusion in collection or substring in a string.\n    this.assert(\n      included\n      , 'expected #{this} to ' + descriptor + 'include ' + _.inspect(val)\n      , 'expected #{this} to not ' + descriptor + 'include ' + _.inspect(val));\n  }\n\n  Assertion.addChainableMethod('include', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contain', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contains', include, includeChainingBehavior);\n  Assertion.addChainableMethod('includes', include, includeChainingBehavior);\n\n  /**\n   * ### .ok\n   *\n   * Asserts that the target is loosely (`==`) equal to `true`. However, it's\n   * often best to assert that the target is strictly (`===`) or deeply equal to\n   * its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.ok; // Not recommended\n   *\n   *     expect(true).to.be.true; // Recommended\n   *     expect(true).to.be.ok; // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.ok`.\n   *\n   *     expect(0).to.equal(0); // Recommended\n   *     expect(0).to.not.be.ok; // Not recommended\n   *\n   *     expect(false).to.be.false; // Recommended\n   *     expect(false).to.not.be.ok; // Not recommended\n   *\n   *     expect(null).to.be.null; // Recommended\n   *     expect(null).to.not.be.ok; // Not recommended\n   *\n   *     expect(undefined).to.be.undefined; // Recommended\n   *     expect(undefined).to.not.be.ok; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(false, 'nooo why fail??').to.be.ok;\n   *\n   * @name ok\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('ok', function () {\n    this.assert(\n        flag(this, 'object')\n      , 'expected #{this} to be truthy'\n      , 'expected #{this} to be falsy');\n  });\n\n  /**\n   * ### .true\n   *\n   * Asserts that the target is strictly (`===`) equal to `true`.\n   *\n   *     expect(true).to.be.true;\n   *\n   * Add `.not` earlier in the chain to negate `.true`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `true`.\n   *\n   *     expect(false).to.be.false; // Recommended\n   *     expect(false).to.not.be.true; // Not recommended\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.true; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(false, 'nooo why fail??').to.be.true;\n   *\n   * @name true\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('true', function () {\n    this.assert(\n        true === flag(this, 'object')\n      , 'expected #{this} to be true'\n      , 'expected #{this} to be false'\n      , flag(this, 'negate') ? false : true\n    );\n  });\n\n  /**\n   * ### .false\n   *\n   * Asserts that the target is strictly (`===`) equal to `false`.\n   *\n   *     expect(false).to.be.false;\n   *\n   * Add `.not` earlier in the chain to negate `.false`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to `false`.\n   *\n   *     expect(true).to.be.true; // Recommended\n   *     expect(true).to.not.be.false; // Not recommended\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.false; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(true, 'nooo why fail??').to.be.false;\n   *\n   * @name false\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('false', function () {\n    this.assert(\n        false === flag(this, 'object')\n      , 'expected #{this} to be false'\n      , 'expected #{this} to be true'\n      , flag(this, 'negate') ? true : false\n    );\n  });\n\n  /**\n   * ### .null\n   *\n   * Asserts that the target is strictly (`===`) equal to `null`.\n   *\n   *     expect(null).to.be.null;\n   *\n   * Add `.not` earlier in the chain to negate `.null`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `null`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.null; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.null;\n   *\n   * @name null\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('null', function () {\n    this.assert(\n        null === flag(this, 'object')\n      , 'expected #{this} to be null'\n      , 'expected #{this} not to be null'\n    );\n  });\n\n  /**\n   * ### .undefined\n   *\n   * Asserts that the target is strictly (`===`) equal to `undefined`.\n   *\n   *     expect(undefined).to.be.undefined;\n   *\n   * Add `.not` earlier in the chain to negate `.undefined`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to `undefined`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.undefined; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.undefined;\n   *\n   * @name undefined\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('undefined', function () {\n    this.assert(\n        undefined === flag(this, 'object')\n      , 'expected #{this} to be undefined'\n      , 'expected #{this} not to be undefined'\n    );\n  });\n\n  /**\n   * ### .NaN\n   *\n   * Asserts that the target is exactly `NaN`.\n   *\n   *     expect(NaN).to.be.NaN;\n   *\n   * Add `.not` earlier in the chain to negate `.NaN`. However, it's often best\n   * to assert that the target is equal to its expected value, rather than not\n   * equal to `NaN`.\n   *\n   *     expect('foo').to.equal('foo'); // Recommended\n   *     expect('foo').to.not.be.NaN; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(42, 'nooo why fail??').to.be.NaN;\n   *\n   * @name NaN\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('NaN', function () {\n    this.assert(\n        _.isNaN(flag(this, 'object'))\n        , 'expected #{this} to be NaN'\n        , 'expected #{this} not to be NaN'\n    );\n  });\n\n  /**\n   * ### .exist\n   *\n   * Asserts that the target is not strictly (`===`) equal to either `null` or\n   * `undefined`. However, it's often best to assert that the target is equal to\n   * its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.exist; // Not recommended\n   *\n   *     expect(0).to.equal(0); // Recommended\n   *     expect(0).to.exist; // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.exist`.\n   *\n   *     expect(null).to.be.null; // Recommended\n   *     expect(null).to.not.exist; // Not recommended\n   *\n   *     expect(undefined).to.be.undefined; // Recommended\n   *     expect(undefined).to.not.exist; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(null, 'nooo why fail??').to.exist;\n   *\n   * @name exist\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('exist', function () {\n    var val = flag(this, 'object');\n    this.assert(\n        val !== null && val !== undefined\n      , 'expected #{this} to exist'\n      , 'expected #{this} to not exist'\n    );\n  });\n\n  /**\n   * ### .empty\n   *\n   * When the target is a string or array, `.empty` asserts that the target's\n   * `length` property is strictly (`===`) equal to `0`.\n   *\n   *     expect([]).to.be.empty;\n   *     expect('').to.be.empty;\n   *\n   * When the target is a map or set, `.empty` asserts that the target's `size`\n   * property is strictly equal to `0`.\n   *\n   *     expect(new Set()).to.be.empty;\n   *     expect(new Map()).to.be.empty;\n   *\n   * When the target is a non-function object, `.empty` asserts that the target\n   * doesn't have any own enumerable properties. Properties with Symbol-based\n   * keys are excluded from the count.\n   *\n   *     expect({}).to.be.empty;\n   *\n   * Because `.empty` does different things based on the target's type, it's\n   * important to check the target's type before using `.empty`. See the `.a`\n   * doc for info on testing a target's type.\n   *\n   *     expect([]).to.be.an('array').that.is.empty;\n   *\n   * Add `.not` earlier in the chain to negate `.empty`. However, it's often\n   * best to assert that the target contains its expected number of values,\n   * rather than asserting that it's not empty.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.not.be.empty; // Not recommended\n   *\n   *     expect(new Set([1, 2, 3])).to.have.property('size', 3); // Recommended\n   *     expect(new Set([1, 2, 3])).to.not.be.empty; // Not recommended\n   *\n   *     expect(Object.keys({a: 1})).to.have.lengthOf(1); // Recommended\n   *     expect({a: 1}).to.not.be.empty; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect([1, 2, 3], 'nooo why fail??').to.be.empty;\n   *\n   * @name empty\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('empty', function () {\n    var val = flag(this, 'object')\n      , ssfi = flag(this, 'ssfi')\n      , flagMsg = flag(this, 'message')\n      , itemsCount;\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n\n    switch (_.type(val).toLowerCase()) {\n      case 'array':\n      case 'string':\n        itemsCount = val.length;\n        break;\n      case 'map':\n      case 'set':\n        itemsCount = val.size;\n        break;\n      case 'weakmap':\n      case 'weakset':\n        throw new AssertionError(\n          flagMsg + '.empty was passed a weak collection',\n          undefined,\n          ssfi\n        );\n      case 'function':\n        var msg = flagMsg + '.empty was passed a function ' + _.getName(val);\n        throw new AssertionError(msg.trim(), undefined, ssfi);\n      default:\n        if (val !== Object(val)) {\n          throw new AssertionError(\n            flagMsg + '.empty was passed non-string primitive ' + _.inspect(val),\n            undefined,\n            ssfi\n          );\n        }\n        itemsCount = Object.keys(val).length;\n    }\n\n    this.assert(\n        0 === itemsCount\n      , 'expected #{this} to be empty'\n      , 'expected #{this} not to be empty'\n    );\n  });\n\n  /**\n   * ### .arguments\n   *\n   * Asserts that the target is an `arguments` object.\n   *\n   *     function test () {\n   *       expect(arguments).to.be.arguments;\n   *     }\n   *\n   *     test();\n   *\n   * Add `.not` earlier in the chain to negate `.arguments`. However, it's often\n   * best to assert which type the target is expected to be, rather than\n   * asserting that its not an `arguments` object.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.arguments; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({}, 'nooo why fail??').to.be.arguments;\n   *\n   * The alias `.Arguments` can be used interchangeably with `.arguments`.\n   *\n   * @name arguments\n   * @alias Arguments\n   * @namespace BDD\n   * @api public\n   */\n\n  function checkArguments () {\n    var obj = flag(this, 'object')\n      , type = _.type(obj);\n    this.assert(\n        'Arguments' === type\n      , 'expected #{this} to be arguments but got ' + type\n      , 'expected #{this} to not be arguments'\n    );\n  }\n\n  Assertion.addProperty('arguments', checkArguments);\n  Assertion.addProperty('Arguments', checkArguments);\n\n  /**\n   * ### .equal(val[, msg])\n   *\n   * Asserts that the target is strictly (`===`) equal to the given `val`.\n   *\n   *     expect(1).to.equal(1);\n   *     expect('foo').to.equal('foo');\n   * \n   * Add `.deep` earlier in the chain to use deep equality instead. See the\n   * `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) equals `{a: 1}`\n   *     expect({a: 1}).to.deep.equal({a: 1});\n   *     expect({a: 1}).to.not.equal({a: 1});\n   *\n   *     // Target array deeply (but not strictly) equals `[1, 2]`\n   *     expect([1, 2]).to.deep.equal([1, 2]);\n   *     expect([1, 2]).to.not.equal([1, 2]);\n   *\n   * Add `.not` earlier in the chain to negate `.equal`. However, it's often\n   * best to assert that the target is equal to its expected value, rather than\n   * not equal to one of countless unexpected values.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.equal(2); // Not recommended\n   *\n   * `.equal` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.equal(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.equal(2);\n   *\n   * The aliases `.equals` and `eq` can be used interchangeably with `.equal`.\n   *\n   * @name equal\n   * @alias equals\n   * @alias eq\n   * @param {Mixed} val\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertEqual (val, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'deep')) {\n      return this.eql(val);\n    } else {\n      this.assert(\n          val === obj\n        , 'expected #{this} to equal #{exp}'\n        , 'expected #{this} to not equal #{exp}'\n        , val\n        , this._obj\n        , true\n      );\n    }\n  }\n\n  Assertion.addMethod('equal', assertEqual);\n  Assertion.addMethod('equals', assertEqual);\n  Assertion.addMethod('eq', assertEqual);\n\n  /**\n   * ### .eql(obj[, msg])\n   *\n   * Asserts that the target is deeply equal to the given `obj`. See the\n   * `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object is deeply (but not strictly) equal to {a: 1}\n   *     expect({a: 1}).to.eql({a: 1}).but.not.equal({a: 1});\n   *\n   *     // Target array is deeply (but not strictly) equal to [1, 2]\n   *     expect([1, 2]).to.eql([1, 2]).but.not.equal([1, 2]);\n   *\n   * Add `.not` earlier in the chain to negate `.eql`. However, it's often best\n   * to assert that the target is deeply equal to its expected value, rather\n   * than not deeply equal to one of countless unexpected values.\n   *\n   *     expect({a: 1}).to.eql({a: 1}); // Recommended\n   *     expect({a: 1}).to.not.eql({b: 2}); // Not recommended\n   *\n   * `.eql` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect({a: 1}).to.eql({b: 2}, 'nooo why fail??');\n   *     expect({a: 1}, 'nooo why fail??').to.eql({b: 2});\n   *\n   * The alias `.eqls` can be used interchangeably with `.eql`.\n   *\n   * The `.deep.equal` assertion is almost identical to `.eql` but with one\n   * difference: `.deep.equal` causes deep equality comparisons to also be used\n   * for any other assertions that follow in the chain.\n   *\n   * @name eql\n   * @alias eqls\n   * @param {Mixed} obj\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertEql(obj, msg) {\n    if (msg) flag(this, 'message', msg);\n    this.assert(\n        _.eql(obj, flag(this, 'object'))\n      , 'expected #{this} to deeply equal #{exp}'\n      , 'expected #{this} to not deeply equal #{exp}'\n      , obj\n      , this._obj\n      , true\n    );\n  }\n\n  Assertion.addMethod('eql', assertEql);\n  Assertion.addMethod('eqls', assertEql);\n\n  /**\n   * ### .above(n[, msg])\n   *\n   * Asserts that the target is a number or a date greater than the given number or date `n` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.above(1); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the value of the\n   * target's `length` property is greater than the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.above(2); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.above(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.above`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(1).to.not.be.above(2); // Not recommended\n   *\n   * `.above` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.above(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.above(2);\n   *\n   * The aliases `.gt` and `.greaterThan` can be used interchangeably with\n   * `.above`.\n   *\n   * @name above\n   * @alias gt\n   * @alias greaterThan\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertAbove (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , shouldThrow = true;\n\n    if (doLength) {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n    \n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to above must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to above must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var len = obj.length;\n      this.assert(\n          len > n\n        , 'expected #{this} to have a length above #{exp} but got #{act}'\n        , 'expected #{this} to not have a length above #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj > n\n        , 'expected #{this} to be above #{exp}'\n        , 'expected #{this} to be at most #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('above', assertAbove);\n  Assertion.addMethod('gt', assertAbove);\n  Assertion.addMethod('greaterThan', assertAbove);\n\n  /**\n   * ### .least(n[, msg])\n   *\n   * Asserts that the target is a number or a date greater than or equal to the given\n   * number or date `n` respectively. However, it's often best to assert that the target is equal to\n   * its expected value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.at.least(1); // Not recommended\n   *     expect(2).to.be.at.least(2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the value of the\n   * target's `length` property is greater than or equal to the given number\n   * `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.at.least(2); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.at.least(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.least`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.at.least(2); // Not recommended\n   *\n   * `.least` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.at.least(2, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.at.least(2);\n   *\n   * The alias `.gte` can be used interchangeably with `.least`.\n   *\n   * @name least\n   * @alias gte\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertLeast (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , shouldThrow = true;\n\n    if (doLength) {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to least must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to least must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var len = obj.length;\n      this.assert(\n          len >= n\n        , 'expected #{this} to have a length at least #{exp} but got #{act}'\n        , 'expected #{this} to have a length below #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj >= n\n        , 'expected #{this} to be at least #{exp}'\n        , 'expected #{this} to be below #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('least', assertLeast);\n  Assertion.addMethod('gte', assertLeast);\n\n  /**\n   * ### .below(n[, msg])\n   *\n   * Asserts that the target is a number or a date less than the given number or date `n` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.below(2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the value of the\n   * target's `length` property is less than the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.below(4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.length(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.below(4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.below`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.be.below(1); // Not recommended\n   *\n   * `.below` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(2).to.be.below(1, 'nooo why fail??');\n   *     expect(2, 'nooo why fail??').to.be.below(1);\n   *\n   * The aliases `.lt` and `.lessThan` can be used interchangeably with\n   * `.below`.\n   *\n   * @name below\n   * @alias lt\n   * @alias lessThan\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertBelow (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , shouldThrow = true;\n\n    if (doLength) {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to below must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to below must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var len = obj.length;\n      this.assert(\n          len < n\n        , 'expected #{this} to have a length below #{exp} but got #{act}'\n        , 'expected #{this} to not have a length below #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj < n\n        , 'expected #{this} to be below #{exp}'\n        , 'expected #{this} to be at least #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('below', assertBelow);\n  Assertion.addMethod('lt', assertBelow);\n  Assertion.addMethod('lessThan', assertBelow);\n\n  /**\n   * ### .most(n[, msg])\n   *\n   * Asserts that the target is a number or a date less than or equal to the given number\n   * or date `n` respectively. However, it's often best to assert that the target is equal to its\n   * expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.at.most(2); // Not recommended\n   *     expect(1).to.be.at.most(1); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the value of the\n   * target's `length` property is less than or equal to the given number `n`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.at.most(4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.at.most(4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.most`.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.not.be.at.most(1); // Not recommended\n   *\n   * `.most` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(2).to.be.at.most(1, 'nooo why fail??');\n   *     expect(2, 'nooo why fail??').to.be.at.most(1);\n   *\n   * The alias `.lte` can be used interchangeably with `.most`.\n   *\n   * @name most\n   * @alias lte\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertMost (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , nType = _.type(n).toLowerCase()\n      , shouldThrow = true;\n\n    if (doLength) {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n    \n    if (!doLength && (objType === 'date' && nType !== 'date')) {\n      errorMessage = msgPrefix + 'the argument to most must be a date';\n    } else if (nType !== 'number' && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the argument to most must be a number';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var len = obj.length;\n      this.assert(\n          len <= n\n        , 'expected #{this} to have a length at most #{exp} but got #{act}'\n        , 'expected #{this} to have a length above #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj <= n\n        , 'expected #{this} to be at most #{exp}'\n        , 'expected #{this} to be above #{exp}'\n        , n\n      );\n    }\n  }\n\n  Assertion.addMethod('most', assertMost);\n  Assertion.addMethod('lte', assertMost);\n\n  /**\n   * ### .within(start, finish[, msg])\n   *\n   * Asserts that the target is a number or a date greater than or equal to the given\n   * number or date `start`, and less than or equal to the given number or date `finish` respectively.\n   * However, it's often best to assert that the target is equal to its expected\n   * value.\n   *\n   *     expect(2).to.equal(2); // Recommended\n   *     expect(2).to.be.within(1, 3); // Not recommended\n   *     expect(2).to.be.within(2, 3); // Not recommended\n   *     expect(2).to.be.within(1, 2); // Not recommended\n   *\n   * Add `.lengthOf` earlier in the chain to assert that the value of the\n   * target's `length` property is greater than or equal to the given number\n   * `start`, and less than or equal to the given number `finish`.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.have.lengthOf.within(2, 4); // Not recommended\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3); // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.within(2, 4); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.within`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.within(2, 4); // Not recommended\n   *\n   * `.within` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(4).to.be.within(1, 3, 'nooo why fail??');\n   *     expect(4, 'nooo why fail??').to.be.within(1, 3);\n   *\n   * @name within\n   * @param {Number} start lower bound inclusive\n   * @param {Number} finish upper bound inclusive\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('within', function (start, finish, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , doLength = flag(this, 'doLength')\n      , flagMsg = flag(this, 'message')\n      , msgPrefix = ((flagMsg) ? flagMsg + ': ' : '')\n      , ssfi = flag(this, 'ssfi')\n      , objType = _.type(obj).toLowerCase()\n      , startType = _.type(start).toLowerCase()\n      , finishType = _.type(finish).toLowerCase()\n      , shouldThrow = true\n      , range = (startType === 'date' && finishType === 'date')\n          ? start.toUTCString() + '..' + finish.toUTCString()\n          : start + '..' + finish;\n\n    if (doLength) {\n      new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    }\n\n    if (!doLength && (objType === 'date' && (startType !== 'date' || finishType !== 'date'))) {\n      errorMessage = msgPrefix + 'the arguments to within must be dates';\n    } else if ((startType !== 'number' || finishType !== 'number') && (doLength || objType === 'number')) {\n      errorMessage = msgPrefix + 'the arguments to within must be numbers';\n    } else if (!doLength && (objType !== 'date' && objType !== 'number')) {\n      var printObj = (objType === 'string') ? \"'\" + obj + \"'\" : obj;\n      errorMessage = msgPrefix + 'expected ' + printObj + ' to be a number or a date';\n    } else {\n      shouldThrow = false;\n    }\n\n    if (shouldThrow) {\n      throw new AssertionError(errorMessage, undefined, ssfi);\n    }\n\n    if (doLength) {\n      var len = obj.length;\n      this.assert(\n          len >= start && len <= finish\n        , 'expected #{this} to have a length within ' + range\n        , 'expected #{this} to not have a length within ' + range\n      );\n    } else {\n      this.assert(\n          obj >= start && obj <= finish\n        , 'expected #{this} to be within ' + range\n        , 'expected #{this} to not be within ' + range\n      );\n    }\n  });\n\n  /**\n   * ### .instanceof(constructor[, msg])\n   *\n   * Asserts that the target is an instance of the given `constructor`.\n   *\n   *     function Cat () { }\n   *\n   *     expect(new Cat()).to.be.an.instanceof(Cat);\n   *     expect([1, 2]).to.be.an.instanceof(Array);\n   *\n   * Add `.not` earlier in the chain to negate `.instanceof`.\n   *\n   *     expect({a: 1}).to.not.be.an.instanceof(Array);\n   *\n   * `.instanceof` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1).to.be.an.instanceof(Array, 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.an.instanceof(Array);\n   *\n   * Due to limitations in ES5, `.instanceof` may not always work as expected\n   * when using a transpiler such as Babel or TypeScript. In particular, it may\n   * produce unexpected results when subclassing built-in object such as\n   * `Array`, `Error`, and `Map`. See your transpiler's docs for details:\n   *\n   * - ([Babel](https://babeljs.io/docs/usage/caveats/#classes))\n   * - ([TypeScript](https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work))\n   *\n   * The alias `.instanceOf` can be used interchangeably with `.instanceof`.\n   *\n   * @name instanceof\n   * @param {Constructor} constructor\n   * @param {String} msg _optional_\n   * @alias instanceOf\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertInstanceOf (constructor, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var target = flag(this, 'object')\n    var ssfi = flag(this, 'ssfi');\n    var flagMsg = flag(this, 'message');\n\n    try {\n      var isInstanceOf = target instanceof constructor;\n    } catch (err) {\n      if (err instanceof TypeError) {\n        flagMsg = flagMsg ? flagMsg + ': ' : '';\n        throw new AssertionError(\n          flagMsg + 'The instanceof assertion needs a constructor but '\n            + _.type(constructor) + ' was given.',\n          undefined,\n          ssfi\n        );\n      }\n      throw err;\n    }\n\n    var name = _.getName(constructor);\n    if (name === null) {\n      name = 'an unnamed constructor';\n    }\n\n    this.assert(\n        isInstanceOf\n      , 'expected #{this} to be an instance of ' + name\n      , 'expected #{this} to not be an instance of ' + name\n    );\n  };\n\n  Assertion.addMethod('instanceof', assertInstanceOf);\n  Assertion.addMethod('instanceOf', assertInstanceOf);\n\n  /**\n   * ### .property(name[, val[, msg]])\n   *\n   * Asserts that the target has a property with the given key `name`.\n   *\n   *     expect({a: 1}).to.have.property('a');\n   *\n   * When `val` is provided, `.property` also asserts that the property's value\n   * is equal to the given `val`.\n   *\n   *     expect({a: 1}).to.have.property('a', 1);\n   *\n   * By default, strict (`===`) equality is used. Add `.deep` earlier in the\n   * chain to use deep equality instead. See the `deep-eql` project page for\n   * info on the deep equality algorithm: https://github.com/chaijs/deep-eql.\n   *\n   *     // Target object deeply (but not strictly) has property `x: {a: 1}`\n   *     expect({x: {a: 1}}).to.have.deep.property('x', {a: 1});\n   *     expect({x: {a: 1}}).to.not.have.property('x', {a: 1});\n   *\n   * The target's enumerable and non-enumerable properties are always included\n   * in the search. By default, both own and inherited properties are included.\n   * Add `.own` earlier in the chain to exclude inherited properties from the\n   * search.\n   *\n   *     Object.prototype.b = 2;\n   *\n   *     expect({a: 1}).to.have.own.property('a');\n   *     expect({a: 1}).to.have.own.property('a', 1);\n   *     expect({a: 1}).to.have.property('b').but.not.own.property('b'); \n   *\n   * `.deep` and `.own` can be combined.\n   *\n   *     expect({x: {a: 1}}).to.have.deep.own.property('x', {a: 1});\n   *\n   * Add `.nested` earlier in the chain to enable dot- and bracket-notation when\n   * referencing nested properties.\n   *\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]');\n   *     expect({a: {b: ['x', 'y']}}).to.have.nested.property('a.b[1]', 'y');\n   *\n   * If `.` or `[]` are part of an actual property name, they can be escaped by\n   * adding two backslashes before them.\n   *\n   *     expect({'.a': {'[b]': 'x'}}).to.have.nested.property('\\\\.a.\\\\[b\\\\]');\n   *\n   * `.deep` and `.nested` can be combined.\n   *\n   *     expect({a: {b: [{c: 3}]}})\n   *       .to.have.deep.nested.property('a.b[0]', {c: 3});\n   *\n   * `.own` and `.nested` cannot be combined.\n   *\n   * Add `.not` earlier in the chain to negate `.property`.\n   *\n   *     expect({a: 1}).to.not.have.property('b');\n   * \n   * However, it's dangerous to negate `.property` when providing `val`. The\n   * problem is that it creates uncertain expectations by asserting that the\n   * target either doesn't have a property with the given key `name`, or that it\n   * does have a property with the given key `name` but its value isn't equal to\n   * the given `val`. It's often best to identify the exact output that's\n   * expected, and then write an assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to have a property with the given key\n   * `name`, it's often best to assert exactly that.\n   *\n   *     expect({b: 2}).to.not.have.property('a'); // Recommended\n   *     expect({b: 2}).to.not.have.property('a', 1); // Not recommended\n   *\n   * When the target is expected to have a property with the given key `name`,\n   * it's often best to assert that the property has its expected value, rather\n   * than asserting that it doesn't have one of many unexpected values.\n   *\n   *     expect({a: 3}).to.have.property('a', 3); // Recommended\n   *     expect({a: 3}).to.not.have.property('a', 1); // Not recommended\n   *\n   * `.property` changes the target of any assertions that follow in the chain\n   * to be the value of the property from the original target object.\n   *\n   *     expect({a: 1}).to.have.property('a').that.is.a('number');\n   *\n   * `.property` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing `val`, only use the\n   * second form.\n   *\n   *     // Recommended\n   *     expect({a: 1}).to.have.property('a', 2, 'nooo why fail??');\n   *     expect({a: 1}, 'nooo why fail??').to.have.property('a', 2);\n   *     expect({a: 1}, 'nooo why fail??').to.have.property('b');\n   *\n   *     // Not recommended\n   *     expect({a: 1}).to.have.property('b', undefined, 'nooo why fail??');\n   * \n   * The above assertion isn't the same thing as not providing `val`. Instead,\n   * it's asserting that the target object has a `b` property that's equal to\n   * `undefined`.\n   *\n   * The assertions `.ownProperty` and `.haveOwnProperty` can be used\n   * interchangeably with `.own.property`.\n   *\n   * @name property\n   * @param {String} name\n   * @param {Mixed} val (optional)\n   * @param {String} msg _optional_\n   * @returns value of property for chaining\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertProperty (name, val, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var isNested = flag(this, 'nested')\n      , isOwn = flag(this, 'own')\n      , flagMsg = flag(this, 'message')\n      , obj = flag(this, 'object')\n      , ssfi = flag(this, 'ssfi');\n\n    if (isNested && isOwn) {\n      flagMsg = flagMsg ? flagMsg + ': ' : '';\n      throw new AssertionError(\n        flagMsg + 'The \"nested\" and \"own\" flags cannot be combined.',\n        undefined,\n        ssfi\n      );\n    }\n\n    if (obj === null || obj === undefined) {\n      flagMsg = flagMsg ? flagMsg + ': ' : '';\n      throw new AssertionError(\n        flagMsg + 'Target cannot be null or undefined.',\n        undefined,\n        ssfi\n      );\n    }\n\n    var isDeep = flag(this, 'deep')\n      , negate = flag(this, 'negate')\n      , pathInfo = isNested ? _.getPathInfo(obj, name) : null\n      , value = isNested ? pathInfo.value : obj[name];\n\n    var descriptor = '';\n    if (isDeep) descriptor += 'deep ';\n    if (isOwn) descriptor += 'own ';\n    if (isNested) descriptor += 'nested ';\n    descriptor += 'property ';\n\n    var hasProperty;\n    if (isOwn) hasProperty = Object.prototype.hasOwnProperty.call(obj, name);\n    else if (isNested) hasProperty = pathInfo.exists;\n    else hasProperty = _.hasProperty(obj, name);\n\n    // When performing a negated assertion for both name and val, merely having\n    // a property with the given name isn't enough to cause the assertion to\n    // fail. It must both have a property with the given name, and the value of\n    // that property must equal the given val. Therefore, skip this assertion in\n    // favor of the next.\n    if (!negate || arguments.length === 1) {\n      this.assert(\n          hasProperty\n        , 'expected #{this} to have ' + descriptor + _.inspect(name)\n        , 'expected #{this} to not have ' + descriptor + _.inspect(name));\n    }\n\n    if (arguments.length > 1) {\n      this.assert(\n          hasProperty && (isDeep ? _.eql(val, value) : val === value)\n        , 'expected #{this} to have ' + descriptor + _.inspect(name) + ' of #{exp}, but got #{act}'\n        , 'expected #{this} to not have ' + descriptor + _.inspect(name) + ' of #{act}'\n        , val\n        , value\n      );\n    }\n\n    flag(this, 'object', value);\n  }\n\n  Assertion.addMethod('property', assertProperty);\n\n  function assertOwnProperty (name, value, msg) {\n    flag(this, 'own', true);\n    assertProperty.apply(this, arguments);\n  }\n\n  Assertion.addMethod('ownProperty', assertOwnProperty);\n  Assertion.addMethod('haveOwnProperty', assertOwnProperty);\n\n  /**\n   * ### .ownPropertyDescriptor(name[, descriptor[, msg]])\n   *\n   * Asserts that the target has its own property descriptor with the given key\n   * `name`. Enumerable and non-enumerable properties are included in the\n   * search.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a');\n   *\n   * When `descriptor` is provided, `.ownPropertyDescriptor` also asserts that\n   * the property's descriptor is deeply equal to the given `descriptor`. See\n   * the `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * Add `.not` earlier in the chain to negate `.ownPropertyDescriptor`.\n   *\n   *     expect({a: 1}).to.not.have.ownPropertyDescriptor('b');\n   * \n   * However, it's dangerous to negate `.ownPropertyDescriptor` when providing\n   * a `descriptor`. The problem is that it creates uncertain expectations by\n   * asserting that the target either doesn't have a property descriptor with\n   * the given key `name`, or that it does have a property descriptor with the\n   * given key `name` but its not deeply equal to the given `descriptor`. It's\n   * often best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to have a property descriptor with the given\n   * key `name`, it's often best to assert exactly that.\n   *\n   *     // Recommended\n   *     expect({b: 2}).to.not.have.ownPropertyDescriptor('a');\n   *\n   *     // Not recommended\n   *     expect({b: 2}).to.not.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * When the target is expected to have a property descriptor with the given\n   * key `name`, it's often best to assert that the property has its expected\n   * descriptor, rather than asserting that it doesn't have one of many\n   * unexpected descriptors.\n   *\n   *     // Recommended\n   *     expect({a: 3}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 3,\n   *     });\n   *\n   *     // Not recommended\n   *     expect({a: 3}).to.not.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 1,\n   *     });\n   *\n   * `.ownPropertyDescriptor` changes the target of any assertions that follow\n   * in the chain to be the value of the property descriptor from the original\n   * target object.\n   *\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a')\n   *       .that.has.property('enumerable', true);\n   *\n   * `.ownPropertyDescriptor` accepts an optional `msg` argument which is a\n   * custom error message to show when the assertion fails. The message can also\n   * be given as the second argument to `expect`. When not providing\n   * `descriptor`, only use the second form.\n   *\n   *     // Recommended\n   *     expect({a: 1}).to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 2,\n   *     }, 'nooo why fail??');\n   *\n   *     // Recommended\n   *     expect({a: 1}, 'nooo why fail??').to.have.ownPropertyDescriptor('a', {\n   *       configurable: true,\n   *       enumerable: true,\n   *       writable: true,\n   *       value: 2,\n   *     });\n   * \n   *     // Recommended\n   *     expect({a: 1}, 'nooo why fail??').to.have.ownPropertyDescriptor('b');\n   *\n   *     // Not recommended\n   *     expect({a: 1})\n   *       .to.have.ownPropertyDescriptor('b', undefined, 'nooo why fail??');\n   *\n   * The above assertion isn't the same thing as not providing `descriptor`.\n   * Instead, it's asserting that the target object has a `b` property\n   * descriptor that's deeply equal to `undefined`.\n   *\n   * The alias `.haveOwnPropertyDescriptor` can be used interchangeably with\n   * `.ownPropertyDescriptor`.\n   *\n   * @name ownPropertyDescriptor\n   * @alias haveOwnPropertyDescriptor\n   * @param {String} name\n   * @param {Object} descriptor _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertOwnPropertyDescriptor (name, descriptor, msg) {\n    if (typeof descriptor === 'string') {\n      msg = descriptor;\n      descriptor = null;\n    }\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var actualDescriptor = Object.getOwnPropertyDescriptor(Object(obj), name);\n    if (actualDescriptor && descriptor) {\n      this.assert(\n          _.eql(descriptor, actualDescriptor)\n        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to match ' + _.inspect(descriptor) + ', got ' + _.inspect(actualDescriptor)\n        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to not match ' + _.inspect(descriptor)\n        , descriptor\n        , actualDescriptor\n        , true\n      );\n    } else {\n      this.assert(\n          actualDescriptor\n        , 'expected #{this} to have an own property descriptor for ' + _.inspect(name)\n        , 'expected #{this} to not have an own property descriptor for ' + _.inspect(name)\n      );\n    }\n    flag(this, 'object', actualDescriptor);\n  }\n\n  Assertion.addMethod('ownPropertyDescriptor', assertOwnPropertyDescriptor);\n  Assertion.addMethod('haveOwnPropertyDescriptor', assertOwnPropertyDescriptor);\n\n  /**\n   * ### .lengthOf(n[, msg])\n   *\n   * Asserts that the target's `length` property is equal to the given number\n   * `n`.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(3);\n   *     expect('foo').to.have.lengthOf(3);\n   *\n   * Add `.not` earlier in the chain to negate `.lengthOf`. However, it's often\n   * best to assert that the target's `length` property is equal to its expected\n   * value, rather than not equal to one of many unexpected values.\n   *\n   *     expect('foo').to.have.lengthOf(3); // Recommended\n   *     expect('foo').to.not.have.lengthOf(4); // Not recommended\n   *\n   * `.lengthOf` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2, 3]).to.have.lengthOf(2, 'nooo why fail??');\n   *     expect([1, 2, 3], 'nooo why fail??').to.have.lengthOf(2);\n   *\n   * `.lengthOf` can also be used as a language chain, causing all `.above`,\n   * `.below`, `.least`, `.most`, and `.within` assertions that follow in the\n   * chain to use the target's `length` property as the target. However, it's\n   * often best to assert that the target's `length` property is equal to its\n   * expected length, rather than asserting that its `length` property falls\n   * within some range of values.\n   *\n   *     // Recommended\n   *     expect([1, 2, 3]).to.have.lengthOf(3);\n   *\n   *     // Not recommended\n   *     expect([1, 2, 3]).to.have.lengthOf.above(2);\n   *     expect([1, 2, 3]).to.have.lengthOf.below(4);\n   *     expect([1, 2, 3]).to.have.lengthOf.at.least(3);\n   *     expect([1, 2, 3]).to.have.lengthOf.at.most(3);\n   *     expect([1, 2, 3]).to.have.lengthOf.within(2,4);\n   *\n   * Due to a compatibility issue, the alias `.length` can't be chained directly\n   * off of an uninvoked method such as `.a`. Therefore, `.length` can't be used\n   * interchangeably with `.lengthOf` in every situation. It's recommended to\n   * always use `.lengthOf` instead of `.length`.\n   *\n   *     expect([1, 2, 3]).to.have.a.length(3); // incompatible; throws error\n   *     expect([1, 2, 3]).to.have.a.lengthOf(3);  // passes as expected\n   *\n   * @name lengthOf\n   * @alias length\n   * @param {Number} n\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertLengthChain () {\n    flag(this, 'doLength', true);\n  }\n\n  function assertLength (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(obj, flagMsg, ssfi, true).to.have.property('length');\n    var len = obj.length;\n\n    this.assert(\n        len == n\n      , 'expected #{this} to have a length of #{exp} but got #{act}'\n      , 'expected #{this} to not have a length of #{act}'\n      , n\n      , len\n    );\n  }\n\n  Assertion.addChainableMethod('length', assertLength, assertLengthChain);\n  Assertion.addChainableMethod('lengthOf', assertLength, assertLengthChain);\n\n  /**\n   * ### .match(re[, msg])\n   *\n   * Asserts that the target matches the given regular expression `re`.\n   *\n   *     expect('foobar').to.match(/^foo/);\n   *\n   * Add `.not` earlier in the chain to negate `.match`.\n   *\n   *     expect('foobar').to.not.match(/taco/);\n   *\n   * `.match` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect('foobar').to.match(/taco/, 'nooo why fail??');\n   *     expect('foobar', 'nooo why fail??').to.match(/taco/);\n   *\n   * The alias `.matches` can be used interchangeably with `.match`.\n   *\n   * @name match\n   * @alias matches\n   * @param {RegExp} re\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n  function assertMatch(re, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    this.assert(\n        re.exec(obj)\n      , 'expected #{this} to match ' + re\n      , 'expected #{this} not to match ' + re\n    );\n  }\n\n  Assertion.addMethod('match', assertMatch);\n  Assertion.addMethod('matches', assertMatch);\n\n  /**\n   * ### .string(str[, msg])\n   *\n   * Asserts that the target string contains the given substring `str`.\n   *\n   *     expect('foobar').to.have.string('bar');\n   *\n   * Add `.not` earlier in the chain to negate `.string`.\n   *\n   *     expect('foobar').to.not.have.string('taco');\n   *\n   * `.string` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect('foobar').to.have.string(/taco/, 'nooo why fail??');\n   *     expect('foobar', 'nooo why fail??').to.have.string(/taco/);\n   *\n   * @name string\n   * @param {String} str\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('string', function (str, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(obj, flagMsg, ssfi, true).is.a('string');\n\n    this.assert(\n        ~obj.indexOf(str)\n      , 'expected #{this} to contain ' + _.inspect(str)\n      , 'expected #{this} to not contain ' + _.inspect(str)\n    );\n  });\n\n  /**\n   * ### .keys(key1[, key2[, ...]])\n   *\n   * Asserts that the target object, array, map, or set has the given keys. Only\n   * the target's own inherited properties are included in the search. \n   *\n   * When the target is an object or array, keys can be provided as one or more\n   * string arguments, a single array argument, or a single object argument. In\n   * the latter case, only the keys in the given object matter; the values are\n   * ignored.\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *     expect(['x', 'y']).to.have.all.keys(0, 1);\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys(['a', 'b']);\n   *     expect(['x', 'y']).to.have.all.keys([0, 1]);\n   *\n   *     expect({a: 1, b: 2}).to.have.all.keys({a: 4, b: 5}); // ignore 4 and 5\n   *     expect(['x', 'y']).to.have.all.keys({0: 4, 1: 5}); // ignore 4 and 5\n   *\n   * When the target is a map or set, each key must be provided as a separate\n   * argument.\n   *\n   *     expect(new Map([['a', 1], ['b', 2]])).to.have.all.keys('a', 'b');\n   *     expect(new Set(['a', 'b'])).to.have.all.keys('a', 'b');\n   *\n   * Because `.keys` does different things based on the target's type, it's\n   * important to check the target's type before using `.keys`. See the `.a` doc\n   * for info on testing a target's type.\n   *\n   *     expect({a: 1, b: 2}).to.be.an('object').that.has.all.keys('a', 'b');\n   *\n   * By default, strict (`===`) equality is used to compare keys of maps and\n   * sets. Add `.deep` earlier in the chain to use deep equality instead. See\n   * the `deep-eql` project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target set deeply (but not strictly) has key `{a: 1}`\n   *     expect(new Set([{a: 1}])).to.have.all.deep.keys([{a: 1}]);\n   *     expect(new Set([{a: 1}])).to.not.have.all.keys([{a: 1}]);\n   *\n   * By default, the target must have all of the given keys and no more. Add\n   * `.any` earlier in the chain to only require that the target have at least\n   * one of the given keys. Also, add `.not` earlier in the chain to negate\n   * `.keys`. It's often best to add `.any` when negating `.keys`, and to use\n   * `.all` when asserting `.keys` without negation.\n   *\n   * When negating `.keys`, `.any` is preferred because `.not.any.keys` asserts\n   * exactly what's expected of the output, whereas `.not.all.keys` creates\n   * uncertain expectations.\n   *\n   *     // Recommended; asserts that target doesn't have any of the given keys\n   *     expect({a: 1, b: 2}).to.not.have.any.keys('c', 'd');\n   *\n   *     // Not recommended; asserts that target doesn't have all of the given\n   *     // keys but may or may not have some of them\n   *     expect({a: 1, b: 2}).to.not.have.all.keys('c', 'd');\n   *\n   * When asserting `.keys` without negation, `.all` is preferred because\n   * `.all.keys` asserts exactly what's expected of the output, whereas\n   * `.any.keys` creates uncertain expectations.\n   *\n   *     // Recommended; asserts that target has all the given keys\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b');\n   *\n   *     // Not recommended; asserts that target has at least one of the given\n   *     // keys but may or may not have more of them\n   *     expect({a: 1, b: 2}).to.have.any.keys('a', 'b');\n   *\n   * Note that `.all` is used by default when neither `.all` nor `.any` appear\n   * earlier in the chain. However, it's often best to add `.all` anyway because\n   * it improves readability.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1, b: 2}).to.have.all.keys('a', 'b'); // Recommended\n   *     expect({a: 1, b: 2}).to.have.keys('a', 'b'); // Not recommended\n   *\n   * Add `.include` earlier in the chain to require that the target's keys be a\n   * superset of the expected keys, rather than identical sets.\n   *\n   *     // Target object's keys are a superset of ['a', 'b'] but not identical\n   *     expect({a: 1, b: 2, c: 3}).to.include.all.keys('a', 'b');\n   *     expect({a: 1, b: 2, c: 3}).to.not.have.all.keys('a', 'b');\n   *\n   * However, if `.any` and `.include` are combined, only the `.any` takes\n   * effect. The `.include` is ignored in this case.\n   *\n   *     // Both assertions are identical\n   *     expect({a: 1}).to.have.any.keys('a', 'b');\n   *     expect({a: 1}).to.include.any.keys('a', 'b');\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.have.key('b');\n   *\n   * The alias `.key` can be used interchangeably with `.keys`.\n   *\n   * @name keys\n   * @alias key\n   * @param {...String|Array|Object} keys\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertKeys (keys) {\n    var obj = flag(this, 'object')\n      , objType = _.type(obj)\n      , keysType = _.type(keys)\n      , ssfi = flag(this, 'ssfi')\n      , isDeep = flag(this, 'deep')\n      , str\n      , deepStr = ''\n      , ok = true\n      , flagMsg = flag(this, 'message');\n\n    flagMsg = flagMsg ? flagMsg + ': ' : '';\n    var mixedArgsMsg = flagMsg + 'when testing keys against an object or an array you must give a single Array|Object|String argument or multiple String arguments';\n\n    if (objType === 'Map' || objType === 'Set') {\n      deepStr = isDeep ? 'deeply ' : '';\n      actual = [];\n\n      // Map and Set '.keys' aren't supported in IE 11. Therefore, use .forEach.\n      obj.forEach(function (val, key) { actual.push(key) });\n\n      if (keysType !== 'Array') {\n        keys = Array.prototype.slice.call(arguments);\n      }\n\n    } else {\n      actual = _.getOwnEnumerableProperties(obj);\n\n      switch (keysType) {\n        case 'Array':\n          if (arguments.length > 1) {\n            throw new AssertionError(mixedArgsMsg, undefined, ssfi);\n          }\n          break;\n        case 'Object':\n          if (arguments.length > 1) {\n            throw new AssertionError(mixedArgsMsg, undefined, ssfi);\n          }\n          keys = Object.keys(keys);\n          break;\n        default:\n          keys = Array.prototype.slice.call(arguments);\n      }\n\n      // Only stringify non-Symbols because Symbols would become \"Symbol()\"\n      keys = keys.map(function (val) {\n        return typeof val === 'symbol' ? val : String(val);\n      });\n    }\n\n    if (!keys.length) {\n      throw new AssertionError(flagMsg + 'keys required', undefined, ssfi);\n    }\n\n    var len = keys.length\n      , any = flag(this, 'any')\n      , all = flag(this, 'all')\n      , expected = keys\n      , actual;\n\n    if (!any && !all) {\n      all = true;\n    }\n\n    // Has any\n    if (any) {\n      ok = expected.some(function(expectedKey) {\n        return actual.some(function(actualKey) {\n          if (isDeep) {\n            return _.eql(expectedKey, actualKey);\n          } else {\n            return expectedKey === actualKey;\n          }\n        });\n      });\n    }\n\n    // Has all\n    if (all) {\n      ok = expected.every(function(expectedKey) {\n        return actual.some(function(actualKey) {\n          if (isDeep) {\n            return _.eql(expectedKey, actualKey);\n          } else {\n            return expectedKey === actualKey;\n          }\n        });\n      });\n\n      if (!flag(this, 'contains')) {\n        ok = ok && keys.length == actual.length;\n      }\n    }\n\n    // Key string\n    if (len > 1) {\n      keys = keys.map(function(key) {\n        return _.inspect(key);\n      });\n      var last = keys.pop();\n      if (all) {\n        str = keys.join(', ') + ', and ' + last;\n      }\n      if (any) {\n        str = keys.join(', ') + ', or ' + last;\n      }\n    } else {\n      str = _.inspect(keys[0]);\n    }\n\n    // Form\n    str = (len > 1 ? 'keys ' : 'key ') + str;\n\n    // Have / include\n    str = (flag(this, 'contains') ? 'contain ' : 'have ') + str;\n\n    // Assertion\n    this.assert(\n        ok\n      , 'expected #{this} to ' + deepStr + str\n      , 'expected #{this} to not ' + deepStr + str\n      , expected.slice(0).sort(_.compareByInspect)\n      , actual.sort(_.compareByInspect)\n      , true\n    );\n  }\n\n  Assertion.addMethod('keys', assertKeys);\n  Assertion.addMethod('key', assertKeys);\n\n  /**\n   * ### .throw([errorLike], [errMsgMatcher], [msg])\n   *\n   * When no arguments are provided, `.throw` invokes the target function and\n   * asserts that an error is thrown.\n   * \n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw();\n   *\n   * When one argument is provided, and it's an error constructor, `.throw`\n   * invokes the target function and asserts that an error is thrown that's an\n   * instance of that error constructor.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(TypeError);\n   *\n   * When one argument is provided, and it's an error instance, `.throw` invokes\n   * the target function and asserts that an error is thrown that's strictly\n   * (`===`) equal to that error instance.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(err);\n   *\n   * When one argument is provided, and it's a string, `.throw` invokes the\n   * target function and asserts that an error is thrown with a message that\n   * contains that string.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw('salmon');\n   *\n   * When one argument is provided, and it's a regular expression, `.throw`\n   * invokes the target function and asserts that an error is thrown with a\n   * message that matches that regular expression.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(/salmon/);\n   *\n   * When two arguments are provided, and the first is an error instance or\n   * constructor, and the second is a string or regular expression, `.throw`\n   * invokes the function and asserts that an error is thrown that fulfills both\n   * conditions as described above.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(TypeError, 'salmon');\n   *     expect(badFn).to.throw(TypeError, /salmon/);\n   *     expect(badFn).to.throw(err, 'salmon');\n   *     expect(badFn).to.throw(err, /salmon/);\n   *\n   * Add `.not` earlier in the chain to negate `.throw`.\n   *     \n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.not.throw();\n   * \n   * However, it's dangerous to negate `.throw` when providing any arguments.\n   * The problem is that it creates uncertain expectations by asserting that the\n   * target either doesn't throw an error, or that it throws an error but of a\n   * different type than the given type, or that it throws an error of the given\n   * type but with a message that doesn't include the given string. It's often\n   * best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to throw an error, it's often best to assert\n   * exactly that.\n   *\n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.not.throw(); // Recommended\n   *     expect(goodFn).to.not.throw(ReferenceError, 'x'); // Not recommended\n   *\n   * When the target is expected to throw an error, it's often best to assert\n   * that the error is of its expected type, and has a message that includes an\n   * expected string, rather than asserting that it doesn't have one of many\n   * unexpected types, and doesn't have a message that includes some string.\n   *\n   *     var badFn = function () { throw new TypeError('Illegal salmon!'); };\n   *\n   *     expect(badFn).to.throw(TypeError, 'salmon'); // Recommended\n   *     expect(badFn).to.not.throw(ReferenceError, 'x'); // Not recommended\n   *\n   * `.throw` changes the target of any assertions that follow in the chain to\n   * be the error object that's thrown.\n   *\n   *     var err = new TypeError('Illegal salmon!');\n   *     err.code = 42;\n   *     var badFn = function () { throw err; };\n   *\n   *     expect(badFn).to.throw(TypeError).with.property('code', 42);\n   *\n   * `.throw` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`. When not providing two arguments, always use\n   * the second form.\n   *\n   *     var goodFn = function () {};\n   *\n   *     expect(goodFn).to.throw(TypeError, 'x', 'nooo why fail??');\n   *     expect(goodFn, 'nooo why fail??').to.throw();\n   *\n   * Due to limitations in ES5, `.throw` may not always work as expected when\n   * using a transpiler such as Babel or TypeScript. In particular, it may\n   * produce unexpected results when subclassing the built-in `Error` object and\n   * then passing the subclassed constructor to `.throw`. See your transpiler's\n   * docs for details:\n   *\n   * - ([Babel](https://babeljs.io/docs/usage/caveats/#classes))\n   * - ([TypeScript](https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work))\n   *\n   * Beware of some common mistakes when using the `throw` assertion. One common\n   * mistake is to accidentally invoke the function yourself instead of letting\n   * the `throw` assertion invoke the function for you. For example, when\n   * testing if a function named `fn` throws, provide `fn` instead of `fn()` as\n   * the target for the assertion.\n   *\n   *     expect(fn).to.throw();     // Good! Tests `fn` as desired\n   *     expect(fn()).to.throw();   // Bad! Tests result of `fn()`, not `fn`\n   *\n   * If you need to assert that your function `fn` throws when passed certain\n   * arguments, then wrap a call to `fn` inside of another function.\n   *\n   *     expect(function () { fn(42); }).to.throw();  // Function expression\n   *     expect(() => fn(42)).to.throw();             // ES6 arrow function\n   *\n   * Another common mistake is to provide an object method (or any stand-alone\n   * function that relies on `this`) as the target of the assertion. Doing so is\n   * problematic because the `this` context will be lost when the function is\n   * invoked by `.throw`; there's no way for it to know what `this` is supposed\n   * to be. There are two ways around this problem. One solution is to wrap the\n   * method or function call inside of another function. Another solution is to\n   * use `bind`.\n   *\n   *     expect(function () { cat.meow(); }).to.throw();  // Function expression\n   *     expect(() => cat.meow()).to.throw();             // ES6 arrow function\n   *     expect(cat.meow.bind(cat)).to.throw();           // Bind\n   *\n   * Finally, it's worth mentioning that it's a best practice in JavaScript to\n   * only throw `Error` and derivatives of `Error` such as `ReferenceError`,\n   * `TypeError`, and user-defined objects that extend `Error`. No other type of\n   * value will generate a stack trace when initialized. With that said, the\n   * `throw` assertion does technically support any type of value being thrown,\n   * not just `Error` and its derivatives.\n   *\n   * The aliases `.throws` and `.Throw` can be used interchangeably with\n   * `.throw`.\n   *\n   * @name throw\n   * @alias throws\n   * @alias Throw\n   * @param {Error|ErrorConstructor} errorLike\n   * @param {String|RegExp} errMsgMatcher error message\n   * @param {String} msg _optional_\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @returns error for chaining (null if no error)\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertThrows (errorLike, errMsgMatcher, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , ssfi = flag(this, 'ssfi')\n      , flagMsg = flag(this, 'message')\n      , negate = flag(this, 'negate') || false;\n    new Assertion(obj, flagMsg, ssfi, true).is.a('function');\n\n    if (errorLike instanceof RegExp || typeof errorLike === 'string') {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    var caughtErr;\n    try {\n      obj();\n    } catch (err) {\n      caughtErr = err;\n    }\n\n    // If we have the negate flag enabled and at least one valid argument it means we do expect an error\n    // but we want it to match a given set of criteria\n    var everyArgIsUndefined = errorLike === undefined && errMsgMatcher === undefined;\n\n    // If we've got the negate flag enabled and both args, we should only fail if both aren't compatible\n    // See Issue #551 and PR #683@GitHub\n    var everyArgIsDefined = Boolean(errorLike && errMsgMatcher);\n    var errorLikeFail = false;\n    var errMsgMatcherFail = false;\n\n    // Checking if error was thrown\n    if (everyArgIsUndefined || !everyArgIsUndefined && !negate) {\n      // We need this to display results correctly according to their types\n      var errorLikeString = 'an error';\n      if (errorLike instanceof Error) {\n        errorLikeString = '#{exp}';\n      } else if (errorLike) {\n        errorLikeString = _.checkError.getConstructorName(errorLike);\n      }\n\n      this.assert(\n          caughtErr\n        , 'expected #{this} to throw ' + errorLikeString\n        , 'expected #{this} to not throw an error but #{act} was thrown'\n        , errorLike && errorLike.toString()\n        , (caughtErr instanceof Error ?\n            caughtErr.toString() : (typeof caughtErr === 'string' ? caughtErr : caughtErr &&\n                                    _.checkError.getConstructorName(caughtErr)))\n      );\n    }\n\n    if (errorLike && caughtErr) {\n      // We should compare instances only if `errorLike` is an instance of `Error`\n      if (errorLike instanceof Error) {\n        var isCompatibleInstance = _.checkError.compatibleInstance(caughtErr, errorLike);\n\n        if (isCompatibleInstance === negate) {\n          // These checks were created to ensure we won't fail too soon when we've got both args and a negate\n          // See Issue #551 and PR #683@GitHub\n          if (everyArgIsDefined && negate) {\n            errorLikeFail = true;\n          } else {\n            this.assert(\n                negate\n              , 'expected #{this} to throw #{exp} but #{act} was thrown'\n              , 'expected #{this} to not throw #{exp}' + (caughtErr && !negate ? ' but #{act} was thrown' : '')\n              , errorLike.toString()\n              , caughtErr.toString()\n            );\n          }\n        }\n      }\n\n      var isCompatibleConstructor = _.checkError.compatibleConstructor(caughtErr, errorLike);\n      if (isCompatibleConstructor === negate) {\n        if (everyArgIsDefined && negate) {\n            errorLikeFail = true;\n        } else {\n          this.assert(\n              negate\n            , 'expected #{this} to throw #{exp} but #{act} was thrown'\n            , 'expected #{this} to not throw #{exp}' + (caughtErr ? ' but #{act} was thrown' : '')\n            , (errorLike instanceof Error ? errorLike.toString() : errorLike && _.checkError.getConstructorName(errorLike))\n            , (caughtErr instanceof Error ? caughtErr.toString() : caughtErr && _.checkError.getConstructorName(caughtErr))\n          );\n        }\n      }\n    }\n\n    if (caughtErr && errMsgMatcher !== undefined && errMsgMatcher !== null) {\n      // Here we check compatible messages\n      var placeholder = 'including';\n      if (errMsgMatcher instanceof RegExp) {\n        placeholder = 'matching'\n      }\n\n      var isCompatibleMessage = _.checkError.compatibleMessage(caughtErr, errMsgMatcher);\n      if (isCompatibleMessage === negate) {\n        if (everyArgIsDefined && negate) {\n            errMsgMatcherFail = true;\n        } else {\n          this.assert(\n            negate\n            , 'expected #{this} to throw error ' + placeholder + ' #{exp} but got #{act}'\n            , 'expected #{this} to throw error not ' + placeholder + ' #{exp}'\n            ,  errMsgMatcher\n            ,  _.checkError.getMessage(caughtErr)\n          );\n        }\n      }\n    }\n\n    // If both assertions failed and both should've matched we throw an error\n    if (errorLikeFail && errMsgMatcherFail) {\n      this.assert(\n        negate\n        , 'expected #{this} to throw #{exp} but #{act} was thrown'\n        , 'expected #{this} to not throw #{exp}' + (caughtErr ? ' but #{act} was thrown' : '')\n        , (errorLike instanceof Error ? errorLike.toString() : errorLike && _.checkError.getConstructorName(errorLike))\n        , (caughtErr instanceof Error ? caughtErr.toString() : caughtErr && _.checkError.getConstructorName(caughtErr))\n      );\n    }\n\n    flag(this, 'object', caughtErr);\n  };\n\n  Assertion.addMethod('throw', assertThrows);\n  Assertion.addMethod('throws', assertThrows);\n  Assertion.addMethod('Throw', assertThrows);\n\n  /**\n   * ### .respondTo(method[, msg])\n   *\n   * When the target is a non-function object, `.respondTo` asserts that the\n   * target has a method with the given name `method`. The method can be own or\n   * inherited, and it can be enumerable or non-enumerable.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(new Cat()).to.respondTo('meow');\n   *\n   * When the target is a function, `.respondTo` asserts that the target's\n   * `prototype` property has a method with the given name `method`. Again, the\n   * method can be own or inherited, and it can be enumerable or non-enumerable.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(Cat).to.respondTo('meow');\n   *\n   * Add `.itself` earlier in the chain to force `.respondTo` to treat the\n   * target as a non-function object, even if it's a function. Thus, it asserts\n   * that the target has a method with the given name `method`, rather than\n   * asserting that the target's `prototype` property has a method with the\n   * given name `method`.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *     Cat.hiss = function () {};\n   *\n   *     expect(Cat).itself.to.respondTo('hiss').but.not.respondTo('meow');\n   *\n   * When not adding `.itself`, it's important to check the target's type before\n   * using `.respondTo`. See the `.a` doc for info on checking a target's type.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *\n   *     expect(new Cat()).to.be.an('object').that.respondsTo('meow');\n   *\n   * Add `.not` earlier in the chain to negate `.respondTo`.\n   *\n   *     function Dog () {}\n   *     Dog.prototype.bark = function () {};\n   *\n   *     expect(new Dog()).to.not.respondTo('meow');\n   *\n   * `.respondTo` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect({}).to.respondTo('meow', 'nooo why fail??');\n   *     expect({}, 'nooo why fail??').to.respondTo('meow');\n   *\n   * The alias `.respondsTo` can be used interchangeably with `.respondTo`.\n   *\n   * @name respondTo\n   * @alias respondsTo\n   * @param {String} method\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function respondTo (method, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , itself = flag(this, 'itself')\n      , context = ('function' === typeof obj && !itself)\n        ? obj.prototype[method]\n        : obj[method];\n\n    this.assert(\n        'function' === typeof context\n      , 'expected #{this} to respond to ' + _.inspect(method)\n      , 'expected #{this} to not respond to ' + _.inspect(method)\n    );\n  }\n\n  Assertion.addMethod('respondTo', respondTo);\n  Assertion.addMethod('respondsTo', respondTo);\n\n  /**\n   * ### .itself\n   *\n   * Forces all `.respondTo` assertions that follow in the chain to behave as if\n   * the target is a non-function object, even if it's a function. Thus, it\n   * causes `.respondTo` to assert that the target has a method with the given\n   * name, rather than asserting that the target's `prototype` property has a\n   * method with the given name.\n   *\n   *     function Cat () {}\n   *     Cat.prototype.meow = function () {};\n   *     Cat.hiss = function () {};\n   *\n   *     expect(Cat).itself.to.respondTo('hiss').but.not.respondTo('meow');\n   *\n   * @name itself\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('itself', function () {\n    flag(this, 'itself', true);\n  });\n\n  /**\n   * ### .satisfy(matcher[, msg])\n   *\n   * Invokes the given `matcher` function with the target being passed as the\n   * first argument, and asserts that the value returned is truthy.\n   *\n   *     expect(1).to.satisfy(function(num) {\n   *       return num > 0; \n   *     });\n   *\n   * Add `.not` earlier in the chain to negate `.satisfy`.\n   *\n   *     expect(1).to.not.satisfy(function(num) {\n   *       return num > 2;\n   *     });\n   *\n   * `.satisfy` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1).to.satisfy(function(num) {\n   *       return num > 2;\n   *     }, 'nooo why fail??');\n   *\n   *     expect(1, 'nooo why fail??').to.satisfy(function(num) {\n   *       return num > 2;\n   *     });\n   *\n   * The alias `.satisfies` can be used interchangeably with `.satisfy`.\n   *\n   * @name satisfy\n   * @alias satisfies\n   * @param {Function} matcher\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function satisfy (matcher, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var result = matcher(obj);\n    this.assert(\n        result\n      , 'expected #{this} to satisfy ' + _.objDisplay(matcher)\n      , 'expected #{this} to not satisfy' + _.objDisplay(matcher)\n      , flag(this, 'negate') ? false : true\n      , result\n    );\n  }\n\n  Assertion.addMethod('satisfy', satisfy);\n  Assertion.addMethod('satisfies', satisfy);\n\n  /**\n   * ### .closeTo(expected, delta[, msg])\n   *\n   * Asserts that the target is a number that's within a given +/- `delta` range\n   * of the given number `expected`. However, it's often best to assert that the\n   * target is equal to its expected value.\n   *\n   *     // Recommended\n   *     expect(1.5).to.equal(1.5);\n   *\n   *     // Not recommended\n   *     expect(1.5).to.be.closeTo(1, 0.5);\n   *     expect(1.5).to.be.closeTo(2, 0.5);\n   *     expect(1.5).to.be.closeTo(1, 1);\n   *\n   * Add `.not` earlier in the chain to negate `.closeTo`.\n   *\n   *     expect(1.5).to.equal(1.5); // Recommended\n   *     expect(1.5).to.not.be.closeTo(3, 1); // Not recommended\n   *\n   * `.closeTo` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect(1.5).to.be.closeTo(3, 1, 'nooo why fail??');\n   *     expect(1.5, 'nooo why fail??').to.be.closeTo(3, 1);\n   *\n   * The alias `.approximately` can be used interchangeably with `.closeTo`.\n   *\n   * @name closeTo\n   * @alias approximately\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function closeTo(expected, delta, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n\n    new Assertion(obj, flagMsg, ssfi, true).is.a('number');\n    if (typeof expected !== 'number' || typeof delta !== 'number') {\n      flagMsg = flagMsg ? flagMsg + ': ' : '';\n      throw new AssertionError(\n          flagMsg + 'the arguments to closeTo or approximately must be numbers',\n          undefined,\n          ssfi\n      );\n    }\n\n    this.assert(\n        Math.abs(obj - expected) <= delta\n      , 'expected #{this} to be close to ' + expected + ' +/- ' + delta\n      , 'expected #{this} not to be close to ' + expected + ' +/- ' + delta\n    );\n  }\n\n  Assertion.addMethod('closeTo', closeTo);\n  Assertion.addMethod('approximately', closeTo);\n\n  // Note: Duplicates are ignored if testing for inclusion instead of sameness.\n  function isSubsetOf(subset, superset, cmp, contains, ordered) {\n    if (!contains) {\n      if (subset.length !== superset.length) return false;\n      superset = superset.slice();\n    }\n\n    return subset.every(function(elem, idx) {\n      if (ordered) return cmp ? cmp(elem, superset[idx]) : elem === superset[idx];\n\n      if (!cmp) {\n        var matchIdx = superset.indexOf(elem);\n        if (matchIdx === -1) return false;\n\n        // Remove match from superset so not counted twice if duplicate in subset.\n        if (!contains) superset.splice(matchIdx, 1);\n        return true;\n      }\n\n      return superset.some(function(elem2, matchIdx) {\n        if (!cmp(elem, elem2)) return false;\n\n        // Remove match from superset so not counted twice if duplicate in subset.\n        if (!contains) superset.splice(matchIdx, 1);\n        return true;\n      });\n    });\n  }\n\n  /**\n   * ### .members(set[, msg])\n   *\n   * Asserts that the target array has the same members as the given array\n   * `set`.\n   *\n   *     expect([1, 2, 3]).to.have.members([2, 1, 3]);\n   *     expect([1, 2, 2]).to.have.members([2, 1, 2]);\n   *\n   * By default, members are compared using strict (`===`) equality. Add `.deep`\n   * earlier in the chain to use deep equality instead. See the `deep-eql`\n   * project page for info on the deep equality algorithm:\n   * https://github.com/chaijs/deep-eql.\n   *\n   *     // Target array deeply (but not strictly) has member `{a: 1}`\n   *     expect([{a: 1}]).to.have.deep.members([{a: 1}]);\n   *     expect([{a: 1}]).to.not.have.members([{a: 1}]);\n   *\n   * By default, order doesn't matter. Add `.ordered` earlier in the chain to\n   * require that members appear in the same order.\n   *\n   *     expect([1, 2, 3]).to.have.ordered.members([1, 2, 3]);\n   *     expect([1, 2, 3]).to.have.members([2, 1, 3])\n   *       .but.not.ordered.members([2, 1, 3]);\n   *\n   * By default, both arrays must be the same size. Add `.include` earlier in\n   * the chain to require that the target's members be a superset of the\n   * expected members. Note that duplicates are ignored in the subset when\n   * `.include` is added.\n   *\n   *     // Target array is a superset of [1, 2] but not identical\n   *     expect([1, 2, 3]).to.include.members([1, 2]);\n   *     expect([1, 2, 3]).to.not.have.members([1, 2]);\n   *\n   *     // Duplicates in the subset are ignored\n   *     expect([1, 2, 3]).to.include.members([1, 2, 2, 2]);\n   *\n   * `.deep`, `.ordered`, and `.include` can all be combined. However, if\n   * `.include` and `.ordered` are combined, the ordering begins at the start of\n   * both arrays.\n   *\n   *     expect([{a: 1}, {b: 2}, {c: 3}])\n   *       .to.include.deep.ordered.members([{a: 1}, {b: 2}])\n   *       .but.not.include.deep.ordered.members([{b: 2}, {c: 3}]);\n   *\n   * Add `.not` earlier in the chain to negate `.members`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the target array doesn't have all of the same members as\n   * the given array `set` but may or may not have some of them. It's often best\n   * to identify the exact output that's expected, and then write an assertion\n   * that only accepts that exact output.\n   *\n   *     expect([1, 2]).to.not.include(3).and.not.include(4); // Recommended\n   *     expect([1, 2]).to.not.have.members([3, 4]); // Not recommended\n   *\n   * `.members` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`.\n   *\n   *     expect([1, 2]).to.have.members([1, 2, 3], 'nooo why fail??');\n   *     expect([1, 2], 'nooo why fail??').to.have.members([1, 2, 3]);\n   *\n   * @name members\n   * @param {Array} set\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addMethod('members', function (subset, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n\n    new Assertion(obj, flagMsg, ssfi, true).to.be.an('array');\n    new Assertion(subset, flagMsg, ssfi, true).to.be.an('array');\n\n    var contains = flag(this, 'contains');\n    var ordered = flag(this, 'ordered');\n\n    var subject, failMsg, failNegateMsg, lengthCheck;\n\n    if (contains) {\n      subject = ordered ? 'an ordered superset' : 'a superset';\n      failMsg = 'expected #{this} to be ' + subject + ' of #{exp}';\n      failNegateMsg = 'expected #{this} to not be ' + subject + ' of #{exp}';\n    } else {\n      subject = ordered ? 'ordered members' : 'members';\n      failMsg = 'expected #{this} to have the same ' + subject + ' as #{exp}';\n      failNegateMsg = 'expected #{this} to not have the same ' + subject + ' as #{exp}';\n    }\n\n    var cmp = flag(this, 'deep') ? _.eql : undefined;\n\n    this.assert(\n        isSubsetOf(subset, obj, cmp, contains, ordered)\n      , failMsg\n      , failNegateMsg\n      , subset\n      , obj\n      , true\n    );\n  });\n\n  /**\n   * ### .oneOf(list[, msg])\n   *\n   * Asserts that the target is a member of the given array `list`. However,\n   * it's often best to assert that the target is equal to its expected value.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.be.oneOf([1, 2, 3]); // Not recommended\n   *\n   * Comparisons are performed using strict (`===`) equality.\n   *\n   * Add `.not` earlier in the chain to negate `.oneOf`.\n   *\n   *     expect(1).to.equal(1); // Recommended\n   *     expect(1).to.not.be.oneOf([2, 3, 4]); // Not recommended\n   *\n   * `.oneOf` accepts an optional `msg` argument which is a custom error message\n   * to show when the assertion fails. The message can also be given as the\n   * second argument to `expect`.\n   *\n   *     expect(1).to.be.oneOf([2, 3, 4], 'nooo why fail??');\n   *     expect(1, 'nooo why fail??').to.be.oneOf([2, 3, 4]);\n   *\n   * @name oneOf\n   * @param {Array<*>} list\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function oneOf (list, msg) {\n    if (msg) flag(this, 'message', msg);\n    var expected = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(list, flagMsg, ssfi, true).to.be.an('array');\n\n    this.assert(\n        list.indexOf(expected) > -1\n      , 'expected #{this} to be one of #{exp}'\n      , 'expected #{this} to not be one of #{exp}'\n      , list\n      , expected\n    );\n  }\n\n  Assertion.addMethod('oneOf', oneOf);\n\n\n  /**\n   * ### .change(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.change` asserts that the given function\n   * `subject` returns a different value when it's invoked before the target\n   * function compared to when it's invoked afterward. However, it's often best\n   * to assert that `subject` is equal to its expected value.\n   *\n   *     var dots = ''\n   *       , addDot = function () { dots += '.'; }\n   *       , getDots = function () { return dots; };\n   *\n   *     // Recommended\n   *     expect(getDots()).to.equal('');\n   *     addDot();\n   *     expect(getDots()).to.equal('.');\n   *\n   *     // Not recommended\n   *     expect(addDot).to.change(getDots);\n   *\n   * When two arguments are provided, `.change` asserts that the value of the\n   * given object `subject`'s `prop` property is different before invoking the\n   * target function compared to afterward.\n   *\n   *     var myObj = {dots: ''}\n   *       , addDot = function () { myObj.dots += '.'; };\n   *\n   *     // Recommended\n   *     expect(myObj).to.have.property('dots', '');\n   *     addDot();\n   *     expect(myObj).to.have.property('dots', '.');\n   *\n   *     // Not recommended\n   *     expect(addDot).to.change(myObj, 'dots');\n   *\n   * Strict (`===`) equality is used to compare before and after values.\n   *\n   * Add `.not` earlier in the chain to negate `.change`.\n   *\n   *     var dots = ''\n   *       , noop = function () {}\n   *       , getDots = function () { return dots; };\n   *\n   *     expect(noop).to.not.change(getDots);\n   *\n   *     var myObj = {dots: ''}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'dots');\n   *\n   * `.change` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {dots: ''}\n   *       , addDot = function () { myObj.dots += '.'; };\n   *\n   *     expect(addDot).to.not.change(myObj, 'dots', 'nooo why fail??');\n   *\n   *     var dots = ''\n   *       , addDot = function () { dots += '.'; }\n   *       , getDots = function () { return dots; };\n   *\n   *     expect(addDot, 'nooo why fail??').to.not.change(getDots);\n   *\n   * `.change` also causes all `.by` assertions that follow in the chain to\n   * assert how much a numeric subject was increased or decreased by. However,\n   * it's dangerous to use `.change.by`. The problem is that it creates\n   * uncertain expectations by asserting that the subject either increases by\n   * the given delta, or that it decreases by the given delta. It's often best\n   * to identify the exact output that's expected, and then write an assertion\n   * that only accepts that exact output.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; }\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   * The alias `.changes` can be used interchangeably with `.change`.\n   *\n   * @name change\n   * @alias changes\n   * @param {String} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertChanges (subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n\n    var initial;\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    }\n\n    fn();\n\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop;\n\n    // This gets flagged because of the .by(delta) assertion\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'change');\n    flag(this, 'realDelta', final !== initial);\n\n    this.assert(\n      initial !== final\n      , 'expected ' + msgObj + ' to change'\n      , 'expected ' + msgObj + ' to not change'\n    );\n  }\n\n  Assertion.addMethod('change', assertChanges);\n  Assertion.addMethod('changes', assertChanges);\n\n  /**\n   * ### .increase(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.increase` asserts that the given function\n   * `subject` returns a greater number when it's invoked after invoking the\n   * target function compared to when it's invoked beforehand. `.increase` also\n   * causes all `.by` assertions that follow in the chain to assert how much\n   * greater of a number is returned. It's often best to assert that the return\n   * value increased by the expected amount, rather than asserting it increased\n   * by any amount.\n   *\n   *     var val = 1\n   *       , addTwo = function () { val += 2; }\n   *       , getVal = function () { return val; };\n   *\n   *     expect(addTwo).to.increase(getVal).by(2); // Recommended\n   *     expect(addTwo).to.increase(getVal); // Not recommended\n   *\n   * When two arguments are provided, `.increase` asserts that the value of the\n   * given object `subject`'s `prop` property is greater after invoking the\n   * target function compared to beforehand.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.increase(myObj, 'val'); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.increase`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either decreases, or that it stays the same.\n   * It's often best to identify the exact output that's expected, and then\n   * write an assertion that only accepts that exact output.\n   *\n   * When the subject is expected to decrease, it's often best to assert that it\n   * decreased by the expected amount.\n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.not.increase(myObj, 'val'); // Not recommended\n   * \n   * When the subject is expected to stay the same, it's often best to assert\n   * exactly that.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'val'); // Recommended\n   *     expect(noop).to.not.increase(myObj, 'val'); // Not recommended\n   *\n   * `.increase` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.increase(myObj, 'val', 'nooo why fail??');\n   *\n   *     var val = 1\n   *       , noop = function () {}\n   *       , getVal = function () { return val; };\n   *\n   *     expect(noop, 'nooo why fail??').to.increase(getVal);\n   *\n   * The alias `.increases` can be used interchangeably with `.increase`.\n   *\n   * @name increase\n   * @alias increases\n   * @param {String|Function} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertIncreases (subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n\n    var initial;\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    }\n\n    // Make sure that the target is a number\n    new Assertion(initial, flagMsg, ssfi, true).is.a('number');\n\n    fn();\n\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop;\n\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'increase');\n    flag(this, 'realDelta', final - initial);\n\n    this.assert(\n      final - initial > 0\n      , 'expected ' + msgObj + ' to increase'\n      , 'expected ' + msgObj + ' to not increase'\n    );\n  }\n\n  Assertion.addMethod('increase', assertIncreases);\n  Assertion.addMethod('increases', assertIncreases);\n\n  /**\n   * ### .decrease(subject[, prop[, msg]])\n   *\n   * When one argument is provided, `.decrease` asserts that the given function\n   * `subject` returns a lesser number when it's invoked after invoking the\n   * target function compared to when it's invoked beforehand. `.decrease` also\n   * causes all `.by` assertions that follow in the chain to assert how much\n   * lesser of a number is returned. It's often best to assert that the return\n   * value decreased by the expected amount, rather than asserting it decreased\n   * by any amount.\n   *\n   *     var val = 1\n   *       , subtractTwo = function () { val -= 2; }\n   *       , getVal = function () { return val; };\n   *\n   *     expect(subtractTwo).to.decrease(getVal).by(2); // Recommended\n   *     expect(subtractTwo).to.decrease(getVal); // Not recommended\n   *\n   * When two arguments are provided, `.decrease` asserts that the value of the\n   * given object `subject`'s `prop` property is lesser after invoking the\n   * target function compared to beforehand. \n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.decrease(myObj, 'val'); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.decrease`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either increases, or that it stays the same.\n   * It's often best to identify the exact output that's expected, and then\n   * write an assertion that only accepts that exact output.\n   *\n   * When the subject is expected to increase, it's often best to assert that it\n   * increased by the expected amount.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.not.decrease(myObj, 'val'); // Not recommended\n   * \n   * When the subject is expected to stay the same, it's often best to assert\n   * exactly that.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.not.change(myObj, 'val'); // Recommended\n   *     expect(noop).to.not.decrease(myObj, 'val'); // Not recommended\n   *\n   * `.decrease` accepts an optional `msg` argument which is a custom error\n   * message to show when the assertion fails. The message can also be given as\n   * the second argument to `expect`. When not providing two arguments, always\n   * use the second form.\n   *\n   *     var myObj = {val: 1}\n   *       , noop = function () {};\n   *\n   *     expect(noop).to.decrease(myObj, 'val', 'nooo why fail??');\n   *\n   *     var val = 1\n   *       , noop = function () {}\n   *       , getVal = function () { return val; };\n   *\n   *     expect(noop, 'nooo why fail??').to.decrease(getVal);\n   *\n   * The alias `.decreases` can be used interchangeably with `.decrease`.\n   *\n   * @name decrease\n   * @alias decreases\n   * @param {String|Function} subject\n   * @param {String} prop name _optional_\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertDecreases (subject, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object')\n      , flagMsg = flag(this, 'message')\n      , ssfi = flag(this, 'ssfi');\n    new Assertion(fn, flagMsg, ssfi, true).is.a('function');\n\n    var initial;\n    if (!prop) {\n      new Assertion(subject, flagMsg, ssfi, true).is.a('function');\n      initial = subject();\n    } else {\n      new Assertion(subject, flagMsg, ssfi, true).to.have.property(prop);\n      initial = subject[prop];\n    }\n\n    // Make sure that the target is a number\n    new Assertion(initial, flagMsg, ssfi, true).is.a('number');\n\n    fn();\n\n    var final = prop === undefined || prop === null ? subject() : subject[prop];\n    var msgObj = prop === undefined || prop === null ? initial : '.' + prop;\n\n    flag(this, 'deltaMsgObj', msgObj);\n    flag(this, 'initialDeltaValue', initial);\n    flag(this, 'finalDeltaValue', final);\n    flag(this, 'deltaBehavior', 'decrease');\n    flag(this, 'realDelta', initial - final);\n\n    this.assert(\n      final - initial < 0\n      , 'expected ' + msgObj + ' to decrease'\n      , 'expected ' + msgObj + ' to not decrease'\n    );\n  }\n\n  Assertion.addMethod('decrease', assertDecreases);\n  Assertion.addMethod('decreases', assertDecreases);\n\n  /**\n   * ### .by(delta[, msg])\n   *\n   * When following an `.increase` assertion in the chain, `.by` asserts that\n   * the subject of the `.increase` assertion increased by the given `delta`.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2);\n   *\n   * When following a `.decrease` assertion in the chain, `.by` asserts that the\n   * subject of the `.decrease` assertion decreased by the given `delta`.\n   *\n   *     var myObj = {val: 1}\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2);\n   *\n   * When following a `.change` assertion in the chain, `.by` asserts that the\n   * subject of the `.change` assertion either increased or decreased by the\n   * given `delta`. However, it's dangerous to use `.change.by`. The problem is\n   * that it creates uncertain expectations. It's often best to identify the\n   * exact output that's expected, and then write an assertion that only accepts\n   * that exact output.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; }\n   *       , subtractTwo = function () { myObj.val -= 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(2); // Recommended\n   *     expect(addTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   *     expect(subtractTwo).to.decrease(myObj, 'val').by(2); // Recommended\n   *     expect(subtractTwo).to.change(myObj, 'val').by(2); // Not recommended\n   *\n   * Add `.not` earlier in the chain to negate `.by`. However, it's often best\n   * to assert that the subject changed by its expected delta, rather than\n   * asserting that it didn't change by one of countless unexpected deltas.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     // Recommended\n   *     expect(addTwo).to.increase(myObj, 'val').by(2);\n   *\n   *     // Not recommended\n   *     expect(addTwo).to.increase(myObj, 'val').but.not.by(3);\n   *\n   * `.by` accepts an optional `msg` argument which is a custom error message to\n   * show when the assertion fails. The message can also be given as the second\n   * argument to `expect`.\n   *\n   *     var myObj = {val: 1}\n   *       , addTwo = function () { myObj.val += 2; };\n   *\n   *     expect(addTwo).to.increase(myObj, 'val').by(3, 'nooo why fail??');\n   *     expect(addTwo, 'nooo why fail??').to.increase(myObj, 'val').by(3);\n   *\n   * @name by\n   * @param {Number} delta\n   * @param {String} msg _optional_\n   * @namespace BDD\n   * @api public\n   */\n\n  function assertDelta(delta, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var msgObj = flag(this, 'deltaMsgObj');\n    var initial = flag(this, 'initialDeltaValue');\n    var final = flag(this, 'finalDeltaValue');\n    var behavior = flag(this, 'deltaBehavior');\n    var realDelta = flag(this, 'realDelta');\n\n    var expression;\n    if (behavior === 'change') {\n      expression = Math.abs(final - initial) === Math.abs(delta);\n    } else {\n      expression = realDelta === Math.abs(delta);\n    }\n\n    this.assert(\n      expression\n      , 'expected ' + msgObj + ' to ' + behavior + ' by ' + delta\n      , 'expected ' + msgObj + ' to not ' + behavior + ' by ' + delta\n    );\n  }\n\n  Assertion.addMethod('by', assertDelta);\n\n  /**\n   * ### .extensible\n   *\n   * Asserts that the target is extensible, which means that new properties can\n   * be added to it. Primitives are never extensible.\n   *\n   *     expect({a: 1}).to.be.extensible;\n   *\n   * Add `.not` earlier in the chain to negate `.extensible`.\n   *\n   *     var nonExtensibleObject = Object.preventExtensions({})\n   *       , sealedObject = Object.seal({})\n   *       , frozenObject = Object.freeze({});\n   *\n   *     expect(nonExtensibleObject).to.not.be.extensible;\n   *     expect(sealedObject).to.not.be.extensible;\n   *     expect(frozenObject).to.not.be.extensible;\n   *     expect(1).to.not.be.extensible;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect(1, 'nooo why fail??').to.be.extensible;\n   *\n   * @name extensible\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('extensible', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a non-extensible ordinary object, simply return false.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isExtensible = obj === Object(obj) && Object.isExtensible(obj);\n\n    this.assert(\n      isExtensible\n      , 'expected #{this} to be extensible'\n      , 'expected #{this} to not be extensible'\n    );\n  });\n\n  /**\n   * ### .sealed\n   *\n   * Asserts that the target is sealed, which means that new properties can't be\n   * added to it, and its existing properties can't be reconfigured or deleted.\n   * However, it's possible that its existing properties can still be reassigned\n   * to different values. Primitives are always sealed.\n   *\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect(sealedObject).to.be.sealed;\n   *     expect(frozenObject).to.be.sealed;\n   *     expect(1).to.be.sealed;\n   *\n   * Add `.not` earlier in the chain to negate `.sealed`.\n   *\n   *     expect({a: 1}).to.not.be.sealed;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.be.sealed;\n   *\n   * @name sealed\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('sealed', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a sealed ordinary object, simply return true.\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isSealed = obj === Object(obj) ? Object.isSealed(obj) : true;\n\n    this.assert(\n      isSealed\n      , 'expected #{this} to be sealed'\n      , 'expected #{this} to not be sealed'\n    );\n  });\n\n  /**\n   * ### .frozen\n   *\n   * Asserts that the target is frozen, which means that new properties can't be\n   * added to it, and its existing properties can't be reassigned to different\n   * values, reconfigured, or deleted. Primitives are always frozen.\n   *\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect(frozenObject).to.be.frozen;\n   *     expect(1).to.be.frozen;\n   *\n   * Add `.not` earlier in the chain to negate `.frozen`.\n   *\n   *     expect({a: 1}).to.not.be.frozen;\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect({a: 1}, 'nooo why fail??').to.be.frozen;\n   *\n   * @name frozen\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('frozen', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is a primitive, then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a frozen ordinary object, simply return true.\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\n    // The following provides ES6 behavior for ES5 environments.\n\n    var isFrozen = obj === Object(obj) ? Object.isFrozen(obj) : true;\n\n    this.assert(\n      isFrozen\n      , 'expected #{this} to be frozen'\n      , 'expected #{this} to not be frozen'\n    );\n  });\n\n  /**\n   * ### .finite\n   *\n   * Asserts that the target is a number, and isn't `NaN` or positive/negative\n   * `Infinity`.\n   *\n   *     expect(1).to.be.finite;\n   *\n   * Add `.not` earlier in the chain to negate `.finite`. However, it's\n   * dangerous to do so. The problem is that it creates uncertain expectations\n   * by asserting that the subject either isn't a number, or that it's `NaN`, or\n   * that it's positive `Infinity`, or that it's negative `Infinity`. It's often\n   * best to identify the exact output that's expected, and then write an\n   * assertion that only accepts that exact output.\n   *\n   * When the target isn't expected to be a number, it's often best to assert\n   * that it's the expected type, rather than asserting that it isn't one of\n   * many unexpected types.\n   *\n   *     expect('foo').to.be.a('string'); // Recommended\n   *     expect('foo').to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be `NaN`, it's often best to assert exactly\n   * that.\n   *\n   *     expect(NaN).to.be.NaN; // Recommended\n   *     expect(NaN).to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be positive infinity, it's often best to\n   * assert exactly that.\n   *\n   *     expect(Infinity).to.equal(Infinity); // Recommended\n   *     expect(Infinity).to.not.be.finite; // Not recommended\n   *\n   * When the target is expected to be negative infinity, it's often best to\n   * assert exactly that.\n   *\n   *     expect(-Infinity).to.equal(-Infinity); // Recommended\n   *     expect(-Infinity).to.not.be.finite; // Not recommended\n   *\n   * A custom error message can be given as the second argument to `expect`.\n   *\n   *     expect('foo', 'nooo why fail??').to.be.finite;\n   *\n   * @name finite\n   * @namespace BDD\n   * @api public\n   */\n\n  Assertion.addProperty('finite', function(msg) {\n    var obj = flag(this, 'object');\n\n    this.assert(\n        typeof obj === \"number\" && isFinite(obj)\n      , 'expected #{this} to be a finite number'\n      , 'expected #{this} to not be a finite number'\n    );\n  });\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  chai.expect = function (val, message) {\n    return new chai.Assertion(val, message);\n  };\n\n  /**\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure.\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @namespace BDD\n   * @api public\n   */\n\n  chai.expect.fail = function (actual, expected, message, operator) {\n    message = message || 'expect.fail()';\n    throw new chai.AssertionError(message, {\n        actual: actual\n      , expected: expected\n      , operator: operator\n    }, chai.expect.fail);\n  };\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  var Assertion = chai.Assertion;\n\n  function loadShould () {\n    // explicitly define this method as function as to have it's name to include as `ssfi`\n    function shouldGetter() {\n      if (this instanceof String\n          || this instanceof Number\n          || this instanceof Boolean\n          || typeof Symbol === 'function' && this instanceof Symbol) {\n        return new Assertion(this.valueOf(), null, shouldGetter);\n      }\n      return new Assertion(this, null, shouldGetter);\n    }\n    function shouldSetter(value) {\n      // See https://github.com/chaijs/chai/issues/86: this makes\n      // `whatever.should = someValue` actually set `someValue`, which is\n      // especially useful for `global.should = require('chai').should()`.\n      //\n      // Note that we have to use [[DefineProperty]] instead of [[Put]]\n      // since otherwise we would trigger this very setter!\n      Object.defineProperty(this, 'should', {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    }\n    // modify Object.prototype to have `should`\n    Object.defineProperty(Object.prototype, 'should', {\n      set: shouldSetter\n      , get: shouldGetter\n      , configurable: true\n    });\n\n    var should = {};\n\n    /**\n     * ### .fail(actual, expected, [message], [operator])\n     *\n     * Throw a failure.\n     *\n     * @name fail\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @param {String} operator\n     * @namespace BDD\n     * @api public\n     */\n\n    should.fail = function (actual, expected, message, operator) {\n      message = message || 'should.fail()';\n      throw new chai.AssertionError(message, {\n          actual: actual\n        , expected: expected\n        , operator: operator\n      }, should.fail);\n    };\n\n    /**\n     * ### .equal(actual, expected, [message])\n     *\n     * Asserts non-strict equality (`==`) of `actual` and `expected`.\n     *\n     *     should.equal(3, '3', '== coerces values to strings');\n     *\n     * @name equal\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @namespace Should\n     * @api public\n     */\n\n    should.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.equal(val2);\n    };\n\n    /**\n     * ### .throw(function, [constructor/string/regexp], [string/regexp], [message])\n     *\n     * Asserts that `function` will throw an error that is an instance of\n     * `constructor`, or alternately that it will throw an error with message\n     * matching `regexp`.\n     *\n     *     should.throw(fn, 'function throws a reference error');\n     *     should.throw(fn, /function throws a reference error/);\n     *     should.throw(fn, ReferenceError);\n     *     should.throw(fn, ReferenceError, 'function throws a reference error');\n     *     should.throw(fn, ReferenceError, /function throws a reference error/);\n     *\n     * @name throw\n     * @alias Throw\n     * @param {Function} function\n     * @param {ErrorConstructor} constructor\n     * @param {RegExp} regexp\n     * @param {String} message\n     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n     * @namespace Should\n     * @api public\n     */\n\n    should.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.Throw(errt, errs);\n    };\n\n    /**\n     * ### .exist\n     *\n     * Asserts that the target is neither `null` nor `undefined`.\n     *\n     *     var foo = 'hi';\n     *\n     *     should.exist(foo, 'foo exists');\n     *\n     * @name exist\n     * @namespace Should\n     * @api public\n     */\n\n    should.exist = function (val, msg) {\n      new Assertion(val, msg).to.exist;\n    }\n\n    // negation\n    should.not = {}\n\n    /**\n     * ### .not.equal(actual, expected, [message])\n     *\n     * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n     *\n     *     should.not.equal(3, 4, 'these numbers are not equal');\n     *\n     * @name not.equal\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.not.equal(val2);\n    };\n\n    /**\n     * ### .throw(function, [constructor/regexp], [message])\n     *\n     * Asserts that `function` will _not_ throw an error that is an instance of\n     * `constructor`, or alternately that it will not throw an error with message\n     * matching `regexp`.\n     *\n     *     should.not.throw(fn, Error, 'function does not throw');\n     *\n     * @name not.throw\n     * @alias not.Throw\n     * @param {Function} function\n     * @param {ErrorConstructor} constructor\n     * @param {RegExp} regexp\n     * @param {String} message\n     * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.not.Throw(errt, errs);\n    };\n\n    /**\n     * ### .not.exist\n     *\n     * Asserts that the target is neither `null` nor `undefined`.\n     *\n     *     var bar = null;\n     *\n     *     should.not.exist(bar, 'bar does not exist');\n     *\n     * @name not.exist\n     * @namespace Should\n     * @api public\n     */\n\n    should.not.exist = function (val, msg) {\n      new Assertion(val, msg).to.not.exist;\n    }\n\n    should['throw'] = should['Throw'];\n    should.not['throw'] = should.not['Throw'];\n\n    return should;\n  };\n\n  chai.should = loadShould;\n  chai.Should = loadShould;\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n\nmodule.exports = function (chai, util) {\n\n  /*!\n   * Chai dependencies.\n   */\n\n  var Assertion = chai.Assertion\n    , flag = util.flag;\n\n  /*!\n   * Module export.\n   */\n\n  /**\n   * ### assert(expression, message)\n   *\n   * Write your own test expressions.\n   *\n   *     assert('foo' !== 'bar', 'foo is not bar');\n   *     assert(Array.isArray([]), 'empty arrays are arrays');\n   *\n   * @param {Mixed} expression to test for truthiness\n   * @param {String} message to display on error\n   * @name assert\n   * @namespace Assert\n   * @api public\n   */\n\n  var assert = chai.assert = function (express, errmsg) {\n    var test = new Assertion(null, null, chai.assert, true);\n    test.assert(\n        express\n      , errmsg\n      , '[ negation message unavailable ]'\n    );\n  };\n\n  /**\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure. Node.js `assert` module-compatible.\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.fail = function (actual, expected, message, operator) {\n    message = message || 'assert.fail()';\n    throw new chai.AssertionError(message, {\n        actual: actual\n      , expected: expected\n      , operator: operator\n    }, assert.fail);\n  };\n\n  /**\n   * ### .isOk(object, [message])\n   *\n   * Asserts that `object` is truthy.\n   *\n   *     assert.isOk('everything', 'everything is ok');\n   *     assert.isOk(false, 'this will fail');\n   *\n   * @name isOk\n   * @alias ok\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isOk = function (val, msg) {\n    new Assertion(val, msg, assert.isOk, true).is.ok;\n  };\n\n  /**\n   * ### .isNotOk(object, [message])\n   *\n   * Asserts that `object` is falsy.\n   *\n   *     assert.isNotOk('everything', 'this will fail');\n   *     assert.isNotOk(false, 'this will pass');\n   *\n   * @name isNotOk\n   * @alias notOk\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotOk = function (val, msg) {\n    new Assertion(val, msg, assert.isNotOk, true).is.not.ok;\n  };\n\n  /**\n   * ### .equal(actual, expected, [message])\n   *\n   * Asserts non-strict equality (`==`) of `actual` and `expected`.\n   *\n   *     assert.equal(3, '3', '== coerces values to strings');\n   *\n   * @name equal\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.equal = function (act, exp, msg) {\n    var test = new Assertion(act, msg, assert.equal, true);\n\n    test.assert(\n        exp == flag(test, 'object')\n      , 'expected #{this} to equal #{exp}'\n      , 'expected #{this} to not equal #{act}'\n      , exp\n      , act\n      , true\n    );\n  };\n\n  /**\n   * ### .notEqual(actual, expected, [message])\n   *\n   * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n   *\n   *     assert.notEqual(3, 4, 'these numbers are not equal');\n   *\n   * @name notEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notEqual = function (act, exp, msg) {\n    var test = new Assertion(act, msg, assert.notEqual, true);\n\n    test.assert(\n        exp != flag(test, 'object')\n      , 'expected #{this} to not equal #{exp}'\n      , 'expected #{this} to equal #{act}'\n      , exp\n      , act\n      , true\n    );\n  };\n\n  /**\n   * ### .strictEqual(actual, expected, [message])\n   *\n   * Asserts strict equality (`===`) of `actual` and `expected`.\n   *\n   *     assert.strictEqual(true, true, 'these booleans are strictly equal');\n   *\n   * @name strictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.strictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.strictEqual, true).to.equal(exp);\n  };\n\n  /**\n   * ### .notStrictEqual(actual, expected, [message])\n   *\n   * Asserts strict inequality (`!==`) of `actual` and `expected`.\n   *\n   *     assert.notStrictEqual(3, '3', 'no coercion for strict equality');\n   *\n   * @name notStrictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notStrictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.notStrictEqual, true).to.not.equal(exp);\n  };\n\n  /**\n   * ### .deepEqual(actual, expected, [message])\n   *\n   * Asserts that `actual` is deeply equal to `expected`.\n   *\n   *     assert.deepEqual({ tea: 'green' }, { tea: 'green' });\n   *\n   * @name deepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @alias deepStrictEqual\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepEqual = assert.deepStrictEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.deepEqual, true).to.eql(exp);\n  };\n\n  /**\n   * ### .notDeepEqual(actual, expected, [message])\n   *\n   * Assert that `actual` is not deeply equal to `expected`.\n   *\n   *     assert.notDeepEqual({ tea: 'green' }, { tea: 'jasmine' });\n   *\n   * @name notDeepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepEqual = function (act, exp, msg) {\n    new Assertion(act, msg, assert.notDeepEqual, true).to.not.eql(exp);\n  };\n\n   /**\n   * ### .isAbove(valueToCheck, valueToBeAbove, [message])\n   *\n   * Asserts `valueToCheck` is strictly greater than (>) `valueToBeAbove`.\n   *\n   *     assert.isAbove(5, 2, '5 is strictly greater than 2');\n   *\n   * @name isAbove\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAbove\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAbove = function (val, abv, msg) {\n    new Assertion(val, msg, assert.isAbove, true).to.be.above(abv);\n  };\n\n   /**\n   * ### .isAtLeast(valueToCheck, valueToBeAtLeast, [message])\n   *\n   * Asserts `valueToCheck` is greater than or equal to (>=) `valueToBeAtLeast`.\n   *\n   *     assert.isAtLeast(5, 2, '5 is greater or equal to 2');\n   *     assert.isAtLeast(3, 3, '3 is greater or equal to 3');\n   *\n   * @name isAtLeast\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAtLeast\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAtLeast = function (val, atlst, msg) {\n    new Assertion(val, msg, assert.isAtLeast, true).to.be.least(atlst);\n  };\n\n   /**\n   * ### .isBelow(valueToCheck, valueToBeBelow, [message])\n   *\n   * Asserts `valueToCheck` is strictly less than (<) `valueToBeBelow`.\n   *\n   *     assert.isBelow(3, 6, '3 is strictly less than 6');\n   *\n   * @name isBelow\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeBelow\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isBelow = function (val, blw, msg) {\n    new Assertion(val, msg, assert.isBelow, true).to.be.below(blw);\n  };\n\n   /**\n   * ### .isAtMost(valueToCheck, valueToBeAtMost, [message])\n   *\n   * Asserts `valueToCheck` is less than or equal to (<=) `valueToBeAtMost`.\n   *\n   *     assert.isAtMost(3, 6, '3 is less than or equal to 6');\n   *     assert.isAtMost(4, 4, '4 is less than or equal to 4');\n   *\n   * @name isAtMost\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAtMost\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isAtMost = function (val, atmst, msg) {\n    new Assertion(val, msg, assert.isAtMost, true).to.be.most(atmst);\n  };\n\n  /**\n   * ### .isTrue(value, [message])\n   *\n   * Asserts that `value` is true.\n   *\n   *     var teaServed = true;\n   *     assert.isTrue(teaServed, 'the tea has been served');\n   *\n   * @name isTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isTrue = function (val, msg) {\n    new Assertion(val, msg, assert.isTrue, true).is['true'];\n  };\n\n  /**\n   * ### .isNotTrue(value, [message])\n   *\n   * Asserts that `value` is not true.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotTrue(tea, 'great, time for tea!');\n   *\n   * @name isNotTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotTrue = function (val, msg) {\n    new Assertion(val, msg, assert.isNotTrue, true).to.not.equal(true);\n  };\n\n  /**\n   * ### .isFalse(value, [message])\n   *\n   * Asserts that `value` is false.\n   *\n   *     var teaServed = false;\n   *     assert.isFalse(teaServed, 'no tea yet? hmm...');\n   *\n   * @name isFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFalse = function (val, msg) {\n    new Assertion(val, msg, assert.isFalse, true).is['false'];\n  };\n\n  /**\n   * ### .isNotFalse(value, [message])\n   *\n   * Asserts that `value` is not false.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotFalse(tea, 'great, time for tea!');\n   *\n   * @name isNotFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFalse = function (val, msg) {\n    new Assertion(val, msg, assert.isNotFalse, true).to.not.equal(false);\n  };\n\n  /**\n   * ### .isNull(value, [message])\n   *\n   * Asserts that `value` is null.\n   *\n   *     assert.isNull(err, 'there was no error');\n   *\n   * @name isNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNull = function (val, msg) {\n    new Assertion(val, msg, assert.isNull, true).to.equal(null);\n  };\n\n  /**\n   * ### .isNotNull(value, [message])\n   *\n   * Asserts that `value` is not null.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotNull(tea, 'great, time for tea!');\n   *\n   * @name isNotNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotNull = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNull, true).to.not.equal(null);\n  };\n\n  /**\n   * ### .isNaN\n   *\n   * Asserts that value is NaN.\n   *\n   *     assert.isNaN(NaN, 'NaN is NaN');\n   *\n   * @name isNaN\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNaN = function (val, msg) {\n    new Assertion(val, msg, assert.isNaN, true).to.be.NaN;\n  };\n\n  /**\n   * ### .isNotNaN\n   *\n   * Asserts that value is not NaN.\n   *\n   *     assert.isNotNaN(4, '4 is not NaN');\n   *\n   * @name isNotNaN\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n  assert.isNotNaN = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNaN, true).not.to.be.NaN;\n  };\n\n  /**\n   * ### .exists\n   *\n   * Asserts that the target is neither `null` nor `undefined`.\n   *\n   *     var foo = 'hi';\n   *\n   *     assert.exists(foo, 'foo is neither `null` nor `undefined`');\n   *\n   * @name exists\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.exists = function (val, msg) {\n    new Assertion(val, msg, assert.exists, true).to.exist;\n  };\n\n  /**\n   * ### .notExists\n   *\n   * Asserts that the target is either `null` or `undefined`.\n   *\n   *     var bar = null\n   *       , baz;\n   *\n   *     assert.notExists(bar);\n   *     assert.notExists(baz, 'baz is either null or undefined');\n   *\n   * @name notExists\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notExists = function (val, msg) {\n    new Assertion(val, msg, assert.notExists, true).to.not.exist;\n  };\n\n  /**\n   * ### .isUndefined(value, [message])\n   *\n   * Asserts that `value` is `undefined`.\n   *\n   *     var tea;\n   *     assert.isUndefined(tea, 'no tea defined');\n   *\n   * @name isUndefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isUndefined = function (val, msg) {\n    new Assertion(val, msg, assert.isUndefined, true).to.equal(undefined);\n  };\n\n  /**\n   * ### .isDefined(value, [message])\n   *\n   * Asserts that `value` is not `undefined`.\n   *\n   *     var tea = 'cup of chai';\n   *     assert.isDefined(tea, 'tea has been defined');\n   *\n   * @name isDefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isDefined = function (val, msg) {\n    new Assertion(val, msg, assert.isDefined, true).to.not.equal(undefined);\n  };\n\n  /**\n   * ### .isFunction(value, [message])\n   *\n   * Asserts that `value` is a function.\n   *\n   *     function serveTea() { return 'cup of tea'; };\n   *     assert.isFunction(serveTea, 'great, we can have tea now');\n   *\n   * @name isFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFunction = function (val, msg) {\n    new Assertion(val, msg, assert.isFunction, true).to.be.a('function');\n  };\n\n  /**\n   * ### .isNotFunction(value, [message])\n   *\n   * Asserts that `value` is _not_ a function.\n   *\n   *     var serveTea = [ 'heat', 'pour', 'sip' ];\n   *     assert.isNotFunction(serveTea, 'great, we have listed the steps');\n   *\n   * @name isNotFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFunction = function (val, msg) {\n    new Assertion(val, msg, assert.isNotFunction, true).to.not.be.a('function');\n  };\n\n  /**\n   * ### .isObject(value, [message])\n   *\n   * Asserts that `value` is an object of type 'Object' (as revealed by `Object.prototype.toString`).\n   * _The assertion does not match subclassed objects._\n   *\n   *     var selection = { name: 'Chai', serve: 'with spices' };\n   *     assert.isObject(selection, 'tea selection is an object');\n   *\n   * @name isObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isObject = function (val, msg) {\n    new Assertion(val, msg, assert.isObject, true).to.be.a('object');\n  };\n\n  /**\n   * ### .isNotObject(value, [message])\n   *\n   * Asserts that `value` is _not_ an object of type 'Object' (as revealed by `Object.prototype.toString`).\n   *\n   *     var selection = 'chai'\n   *     assert.isNotObject(selection, 'tea selection is not an object');\n   *     assert.isNotObject(null, 'null is not an object');\n   *\n   * @name isNotObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotObject = function (val, msg) {\n    new Assertion(val, msg, assert.isNotObject, true).to.not.be.a('object');\n  };\n\n  /**\n   * ### .isArray(value, [message])\n   *\n   * Asserts that `value` is an array.\n   *\n   *     var menu = [ 'green', 'chai', 'oolong' ];\n   *     assert.isArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isArray = function (val, msg) {\n    new Assertion(val, msg, assert.isArray, true).to.be.an('array');\n  };\n\n  /**\n   * ### .isNotArray(value, [message])\n   *\n   * Asserts that `value` is _not_ an array.\n   *\n   *     var menu = 'green|chai|oolong';\n   *     assert.isNotArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isNotArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotArray = function (val, msg) {\n    new Assertion(val, msg, assert.isNotArray, true).to.not.be.an('array');\n  };\n\n  /**\n   * ### .isString(value, [message])\n   *\n   * Asserts that `value` is a string.\n   *\n   *     var teaOrder = 'chai';\n   *     assert.isString(teaOrder, 'order placed');\n   *\n   * @name isString\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isString = function (val, msg) {\n    new Assertion(val, msg, assert.isString, true).to.be.a('string');\n  };\n\n  /**\n   * ### .isNotString(value, [message])\n   *\n   * Asserts that `value` is _not_ a string.\n   *\n   *     var teaOrder = 4;\n   *     assert.isNotString(teaOrder, 'order placed');\n   *\n   * @name isNotString\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotString = function (val, msg) {\n    new Assertion(val, msg, assert.isNotString, true).to.not.be.a('string');\n  };\n\n  /**\n   * ### .isNumber(value, [message])\n   *\n   * Asserts that `value` is a number.\n   *\n   *     var cups = 2;\n   *     assert.isNumber(cups, 'how many cups');\n   *\n   * @name isNumber\n   * @param {Number} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNumber = function (val, msg) {\n    new Assertion(val, msg, assert.isNumber, true).to.be.a('number');\n  };\n\n  /**\n   * ### .isNotNumber(value, [message])\n   *\n   * Asserts that `value` is _not_ a number.\n   *\n   *     var cups = '2 cups please';\n   *     assert.isNotNumber(cups, 'how many cups');\n   *\n   * @name isNotNumber\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotNumber = function (val, msg) {\n    new Assertion(val, msg, assert.isNotNumber, true).to.not.be.a('number');\n  };\n\n   /**\n   * ### .isFinite(value, [message])\n   *\n   * Asserts that `value` is a finite number. Unlike `.isNumber`, this will fail for `NaN` and `Infinity`.\n   *\n   *     var cups = 2;\n   *     assert.isFinite(cups, 'how many cups');\n   *\n   *     assert.isFinite(NaN); // throws\n   *\n   * @name isFinite\n   * @param {Number} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFinite = function (val, msg) {\n    new Assertion(val, msg, assert.isFinite, true).to.be.finite;\n  };\n\n  /**\n   * ### .isBoolean(value, [message])\n   *\n   * Asserts that `value` is a boolean.\n   *\n   *     var teaReady = true\n   *       , teaServed = false;\n   *\n   *     assert.isBoolean(teaReady, 'is the tea ready');\n   *     assert.isBoolean(teaServed, 'has tea been served');\n   *\n   * @name isBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isBoolean = function (val, msg) {\n    new Assertion(val, msg, assert.isBoolean, true).to.be.a('boolean');\n  };\n\n  /**\n   * ### .isNotBoolean(value, [message])\n   *\n   * Asserts that `value` is _not_ a boolean.\n   *\n   *     var teaReady = 'yep'\n   *       , teaServed = 'nope';\n   *\n   *     assert.isNotBoolean(teaReady, 'is the tea ready');\n   *     assert.isNotBoolean(teaServed, 'has tea been served');\n   *\n   * @name isNotBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotBoolean = function (val, msg) {\n    new Assertion(val, msg, assert.isNotBoolean, true).to.not.be.a('boolean');\n  };\n\n  /**\n   * ### .typeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.typeOf({ tea: 'chai' }, 'object', 'we have an object');\n   *     assert.typeOf(['chai', 'jasmine'], 'array', 'we have an array');\n   *     assert.typeOf('tea', 'string', 'we have a string');\n   *     assert.typeOf(/tea/, 'regexp', 'we have a regular expression');\n   *     assert.typeOf(null, 'null', 'we have a null');\n   *     assert.typeOf(undefined, 'undefined', 'we have an undefined');\n   *\n   * @name typeOf\n   * @param {Mixed} value\n   * @param {String} name\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.typeOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.typeOf, true).to.be.a(type);\n  };\n\n  /**\n   * ### .notTypeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is _not_ `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.notTypeOf('tea', 'number', 'strings are not numbers');\n   *\n   * @name notTypeOf\n   * @param {Mixed} value\n   * @param {String} typeof name\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notTypeOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.notTypeOf, true).to.not.be.a(type);\n  };\n\n  /**\n   * ### .instanceOf(object, constructor, [message])\n   *\n   * Asserts that `value` is an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new Tea('chai');\n   *\n   *     assert.instanceOf(chai, Tea, 'chai is an instance of tea');\n   *\n   * @name instanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.instanceOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.instanceOf, true).to.be.instanceOf(type);\n  };\n\n  /**\n   * ### .notInstanceOf(object, constructor, [message])\n   *\n   * Asserts `value` is not an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new String('chai');\n   *\n   *     assert.notInstanceOf(chai, Tea, 'chai is not an instance of tea');\n   *\n   * @name notInstanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notInstanceOf = function (val, type, msg) {\n    new Assertion(val, msg, assert.notInstanceOf, true)\n      .to.not.be.instanceOf(type);\n  };\n\n  /**\n   * ### .include(haystack, needle, [message])\n   *\n   * Asserts that `haystack` includes `needle`. Can be used to assert the\n   * inclusion of a value in an array, a substring in a string, or a subset of\n   * properties in an object.\n   *\n   *     assert.include([1,2,3], 2, 'array contains value');\n   *     assert.include('foobar', 'foo', 'string contains substring');\n   *     assert.include({ foo: 'bar', hello: 'universe' }, { foo: 'bar' }, 'object contains property');\n   *\n   * Strict equality (===) is used. When asserting the inclusion of a value in\n   * an array, the array is searched for an element that's strictly equal to the\n   * given value. When asserting a subset of properties in an object, the object\n   * is searched for the given property keys, checking that each one is present\n   * and stricty equal to the given property value. For instance:\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.include([obj1, obj2], obj1);\n   *     assert.include({foo: obj1, bar: obj2}, {foo: obj1});\n   *     assert.include({foo: obj1, bar: obj2}, {foo: obj1, bar: obj2});\n   *\n   * @name include\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.include = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.include, true).include(inc);\n  };\n\n  /**\n   * ### .notInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` does not include `needle`. Can be used to assert\n   * the absence of a value in an array, a substring in a string, or a subset of\n   * properties in an object.\n   *\n   *     assert.notInclude([1,2,3], 4, 'array doesn't contain value');\n   *     assert.notInclude('foobar', 'baz', 'string doesn't contain substring');\n   *     assert.notInclude({ foo: 'bar', hello: 'universe' }, { foo: 'baz' }, 'object doesn't contain property');\n   *\n   * Strict equality (===) is used. When asserting the absence of a value in an\n   * array, the array is searched to confirm the absence of an element that's\n   * strictly equal to the given value. When asserting a subset of properties in\n   * an object, the object is searched to confirm that at least one of the given\n   * property keys is either not present or not strictly equal to the given\n   * property value. For instance:\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.notInclude([obj1, obj2], {a: 1});\n   *     assert.notInclude({foo: obj1, bar: obj2}, {foo: {a: 1}});\n   *     assert.notInclude({foo: obj1, bar: obj2}, {foo: obj1, bar: {b: 2}});\n   *\n   * @name notInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notInclude, true).not.include(inc);\n  };\n\n  /**\n   * ### .deepInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` includes `needle`. Can be used to assert the\n   * inclusion of a value in an array or a subset of properties in an object.\n   * Deep equality is used.\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.deepInclude([obj1, obj2], {a: 1});\n   *     assert.deepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}});\n   *     assert.deepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}, bar: {b: 2}});\n   *\n   * @name deepInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepInclude, true).deep.include(inc);\n  };\n\n  /**\n   * ### .notDeepInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` does not include `needle`. Can be used to assert\n   * the absence of a value in an array or a subset of properties in an object.\n   * Deep equality is used.\n   *\n   *     var obj1 = {a: 1}\n   *       , obj2 = {b: 2};\n   *     assert.notDeepInclude([obj1, obj2], {a: 9});\n   *     assert.notDeepInclude({foo: obj1, bar: obj2}, {foo: {a: 9}});\n   *     assert.notDeepInclude({foo: obj1, bar: obj2}, {foo: {a: 1}, bar: {b: 9}});\n   *\n   * @name notDeepInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepInclude, true).not.deep.include(inc);\n  };\n\n  /**\n   * ### .nestedInclude(haystack, needle, [message])\n   * \n   * Asserts that 'haystack' includes 'needle'. \n   * Can be used to assert the inclusion of a subset of properties in an \n   * object.\n   * Enables the use of dot- and bracket-notation for referencing nested \n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   * \n   *     assert.nestedInclude({'.a': {'b': 'x'}}, {'\\\\.a.[b]': 'x'});\n   *     assert.nestedInclude({'a': {'[b]': 'x'}}, {'a.\\\\[b\\\\]': 'x'});\n   * \n   * @name nestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public \n   */ \n\n  assert.nestedInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.nestedInclude, true).nested.include(inc);\n  };\n\n  /**\n   * ### .notNestedInclude(haystack, needle, [message])\n   * \n   * Asserts that 'haystack' does not include 'needle'. \n   * Can be used to assert the absence of a subset of properties in an \n   * object.\n   * Enables the use of dot- and bracket-notation for referencing nested \n   * properties. \n   * '[]' and '.' in property names can be escaped using double backslashes.\n   * \n   *     assert.notNestedInclude({'.a': {'b': 'x'}}, {'\\\\.a.b': 'y'});\n   *     assert.notNestedInclude({'a': {'[b]': 'x'}}, {'a.\\\\[b\\\\]': 'y'});\n   * \n   * @name notNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public \n   */ \n\n  assert.notNestedInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notNestedInclude, true)\n      .not.nested.include(inc);\n  };\n\n  /**\n   * ### .deepNestedInclude(haystack, needle, [message])\n   * \n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an \n   * object while checking for deep equality.\n   * Enables the use of dot- and bracket-notation for referencing nested \n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   * \n   *     assert.deepNestedInclude({a: {b: [{x: 1}]}}, {'a.b[0]': {x: 1}});\n   *     assert.deepNestedInclude({'.a': {'[b]': {x: 1}}}, {'\\\\.a.\\\\[b\\\\]': {x: 1}});\n   *    \n   * @name deepNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public \n   */\n\n  assert.deepNestedInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepNestedInclude, true)\n      .deep.nested.include(inc);\n  };\n\n  /**\n   * ### .notDeepNestedInclude(haystack, needle, [message])\n   * \n   * Asserts that 'haystack' does not include 'needle'.\n   * Can be used to assert the absence of a subset of properties in an \n   * object while checking for deep equality.\n   * Enables the use of dot- and bracket-notation for referencing nested \n   * properties.\n   * '[]' and '.' in property names can be escaped using double backslashes.\n   * \n   *     assert.notDeepNestedInclude({a: {b: [{x: 1}]}}, {'a.b[0]': {y: 1}})\n   *     assert.notDeepNestedInclude({'.a': {'[b]': {x: 1}}}, {'\\\\.a.\\\\[b\\\\]': {y: 2}});\n   *    \n   * @name notDeepNestedInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public \n   */\n\n  assert.notDeepNestedInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepNestedInclude, true)\n      .not.deep.nested.include(inc);\n  };\n\n  /**\n   * ### .ownInclude(haystack, needle, [message])\n   * \n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an \n   * object while ignoring inherited properties.\n   * \n   *     assert.ownInclude({ a: 1 }, { a: 1 });\n   * \n   * @name ownInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.ownInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.ownInclude, true).own.include(inc);\n  };\n\n  /**\n   * ### .notOwnInclude(haystack, needle, [message])\n   * \n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the absence of a subset of properties in an \n   * object while ignoring inherited properties.\n   * \n   *     Object.prototype.b = 2;\n   * \n   *     assert.notOwnInclude({ a: 1 }, { b: 2 });\n   * \n   * @name notOwnInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notOwnInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.notOwnInclude, true).not.own.include(inc);\n  };\n\n  /**\n   * ### .deepOwnInclude(haystack, needle, [message])\n   * \n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the inclusion of a subset of properties in an \n   * object while ignoring inherited properties and checking for deep equality.\n   * \n   *      assert.deepOwnInclude({a: {b: 2}}, {a: {b: 2}});\n   *      \n   * @name deepOwnInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepOwnInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.deepOwnInclude, true)\n      .deep.own.include(inc);\n  };\n\n   /**\n   * ### .notDeepOwnInclude(haystack, needle, [message])\n   * \n   * Asserts that 'haystack' includes 'needle'.\n   * Can be used to assert the absence of a subset of properties in an \n   * object while ignoring inherited properties and checking for deep equality.\n   * \n   *      assert.notDeepOwnInclude({a: {b: 2}}, {a: {c: 3}});\n   *      \n   * @name notDeepOwnInclude\n   * @param {Object} haystack\n   * @param {Object} needle\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepOwnInclude = function(exp, inc, msg) {\n    new Assertion(exp, msg, assert.notDeepOwnInclude, true)\n      .not.deep.own.include(inc);\n  };\n\n  /**\n   * ### .match(value, regexp, [message])\n   *\n   * Asserts that `value` matches the regular expression `regexp`.\n   *\n   *     assert.match('foobar', /^foo/, 'regexp matches');\n   *\n   * @name match\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.match = function (exp, re, msg) {\n    new Assertion(exp, msg, assert.match, true).to.match(re);\n  };\n\n  /**\n   * ### .notMatch(value, regexp, [message])\n   *\n   * Asserts that `value` does not match the regular expression `regexp`.\n   *\n   *     assert.notMatch('foobar', /^foo/, 'regexp does not match');\n   *\n   * @name notMatch\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notMatch = function (exp, re, msg) {\n    new Assertion(exp, msg, assert.notMatch, true).to.not.match(re);\n  };\n\n  /**\n   * ### .property(object, property, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property`.\n   *\n   *     assert.property({ tea: { green: 'matcha' }}, 'tea');\n   *     assert.property({ tea: { green: 'matcha' }}, 'toString');\n   *\n   * @name property\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.property = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.property, true).to.have.property(prop);\n  };\n\n  /**\n   * ### .notProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property`.\n   *\n   *     assert.notProperty({ tea: { green: 'matcha' }}, 'coffee');\n   *\n   * @name notProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notProperty, true)\n      .to.not.have.property(prop);\n  };\n\n  /**\n   * ### .propertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property` with a value given by `value`. Uses a strict equality check\n   * (===).\n   *\n   *     assert.propertyVal({ tea: 'is good' }, 'tea', 'is good');\n   *\n   * @name propertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.propertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.propertyVal, true)\n      .to.have.property(prop, val);\n  };\n\n  /**\n   * ### .notPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property` with value given by `value`. Uses a strict equality check\n   * (===).\n   *\n   *     assert.notPropertyVal({ tea: 'is good' }, 'tea', 'is bad');\n   *     assert.notPropertyVal({ tea: 'is good' }, 'coffee', 'is good');\n   *\n   * @name notPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notPropertyVal, true)\n      .to.not.have.property(prop, val);\n  };\n\n  /**\n   * ### .deepPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property` with a value given by `value`. Uses a deep equality check.\n   *\n   *     assert.deepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'matcha' });\n   *\n   * @name deepPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.deepPropertyVal, true)\n      .to.have.deep.property(prop, val);\n  };\n\n  /**\n   * ### .notDeepPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct or inherited property named\n   * by `property` with value given by `value`. Uses a deep equality check.\n   *\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { black: 'matcha' });\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'oolong' });\n   *     assert.notDeepPropertyVal({ tea: { green: 'matcha' } }, 'coffee', { green: 'matcha' });\n   *\n   * @name notDeepPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notDeepPropertyVal, true)\n      .to.not.have.deep.property(prop, val);\n  };\n\n  /**\n   * ### .ownProperty(object, property, [message])\n   *\n   * Asserts that `object` has a direct property named by `property`. Inherited\n   * properties aren't checked.\n   *\n   *     assert.ownProperty({ tea: { green: 'matcha' }}, 'tea');\n   *\n   * @name ownProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @api public\n   */\n\n  assert.ownProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.ownProperty, true)\n      .to.have.own.property(prop);\n  };\n\n  /**\n   * ### .notOwnProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by\n   * `property`. Inherited properties aren't checked.\n   *\n   *     assert.notOwnProperty({ tea: { green: 'matcha' }}, 'coffee');\n   *     assert.notOwnProperty({}, 'toString');\n   *\n   * @name notOwnProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notOwnProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notOwnProperty, true)\n      .to.not.have.own.property(prop);\n  };\n\n  /**\n   * ### .ownPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct property named by `property` and a value\n   * equal to the provided `value`. Uses a strict equality check (===).\n   * Inherited properties aren't checked.\n   *\n   *     assert.ownPropertyVal({ coffee: 'is good'}, 'coffee', 'is good');\n   *\n   * @name ownPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.ownPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.ownPropertyVal, true)\n      .to.have.own.property(prop, value);\n  };\n\n  /**\n   * ### .notOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by `property`\n   * with a value equal to the provided `value`. Uses a strict equality check\n   * (===). Inherited properties aren't checked.\n   *\n   *     assert.notOwnPropertyVal({ tea: 'is better'}, 'tea', 'is worse');\n   *     assert.notOwnPropertyVal({}, 'toString', Object.prototype.toString);\n   *\n   * @name notOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.notOwnPropertyVal, true)\n      .to.not.have.own.property(prop, value);\n  };\n\n  /**\n   * ### .deepOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a direct property named by `property` and a value\n   * equal to the provided `value`. Uses a deep equality check. Inherited\n   * properties aren't checked.\n   *\n   *     assert.deepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'matcha' });\n   *\n   * @name deepOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.deepOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.deepOwnPropertyVal, true)\n      .to.have.deep.own.property(prop, value);\n  };\n\n  /**\n   * ### .notDeepOwnPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a direct property named by `property`\n   * with a value equal to the provided `value`. Uses a deep equality check.\n   * Inherited properties aren't checked.\n   *\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { black: 'matcha' });\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'tea', { green: 'oolong' });\n   *     assert.notDeepOwnPropertyVal({ tea: { green: 'matcha' } }, 'coffee', { green: 'matcha' });\n   *     assert.notDeepOwnPropertyVal({}, 'toString', Object.prototype.toString);\n   *\n   * @name notDeepOwnPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notDeepOwnPropertyVal = function (obj, prop, value, msg) {\n    new Assertion(obj, msg, assert.notDeepOwnPropertyVal, true)\n      .to.not.have.deep.own.property(prop, value);\n  };\n\n  /**\n   * ### .nestedProperty(object, property, [message])\n   *\n   * Asserts that `object` has a direct or inherited property named by\n   * `property`, which can be a string using dot- and bracket-notation for\n   * nested reference.\n   *\n   *     assert.nestedProperty({ tea: { green: 'matcha' }}, 'tea.green');\n   *\n   * @name nestedProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.nestedProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.nestedProperty, true)\n      .to.have.nested.property(prop);\n  };\n\n  /**\n   * ### .notNestedProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property`, which\n   * can be a string using dot- and bracket-notation for nested reference. The\n   * property cannot exist on the object nor anywhere in its prototype chain.\n   *\n   *     assert.notNestedProperty({ tea: { green: 'matcha' }}, 'tea.oolong');\n   *\n   * @name notNestedProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notNestedProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg, assert.notNestedProperty, true)\n      .to.not.have.nested.property(prop);\n  };\n\n  /**\n   * ### .nestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with value given\n   * by `value`. `property` can use dot- and bracket-notation for nested\n   * reference. Uses a strict equality check (===).\n   *\n   *     assert.nestedPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'matcha');\n   *\n   * @name nestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.nestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.nestedPropertyVal, true)\n      .to.have.nested.property(prop, val);\n  };\n\n  /**\n   * ### .notNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property` with\n   * value given by `value`. `property` can use dot- and bracket-notation for\n   * nested reference. Uses a strict equality check (===).\n   *\n   *     assert.notNestedPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'konacha');\n   *     assert.notNestedPropertyVal({ tea: { green: 'matcha' }}, 'coffee.green', 'matcha');\n   *\n   * @name notNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notNestedPropertyVal, true)\n      .to.not.have.nested.property(prop, val);\n  };\n\n  /**\n   * ### .deepNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with a value given\n   * by `value`. `property` can use dot- and bracket-notation for nested\n   * reference. Uses a deep equality check.\n   *\n   *     assert.deepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { matcha: 'yum' });\n   *\n   * @name deepNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.deepNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.deepNestedPropertyVal, true)\n      .to.have.deep.nested.property(prop, val);\n  };\n\n  /**\n   * ### .notDeepNestedPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property` with\n   * value given by `value`. `property` can use dot- and bracket-notation for\n   * nested reference. Uses a deep equality check.\n   *\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { oolong: 'yum' });\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.green', { matcha: 'yuck' });\n   *     assert.notDeepNestedPropertyVal({ tea: { green: { matcha: 'yum' } } }, 'tea.black', { matcha: 'yum' });\n   *\n   * @name notDeepNestedPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notDeepNestedPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg, assert.notDeepNestedPropertyVal, true)\n      .to.not.have.deep.nested.property(prop, val);\n  }\n\n  /**\n   * ### .lengthOf(object, length, [message])\n   *\n   * Asserts that `object` has a `length` property with the expected value.\n   *\n   *     assert.lengthOf([1,2,3], 3, 'array has length of 3');\n   *     assert.lengthOf('foobar', 6, 'string has length of 6');\n   *\n   * @name lengthOf\n   * @param {Mixed} object\n   * @param {Number} length\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.lengthOf = function (exp, len, msg) {\n    new Assertion(exp, msg, assert.lengthOf, true).to.have.lengthOf(len);\n  };\n\n  /**\n   * ### .hasAnyKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has at least one of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAnyKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'iDontExist', 'baz']);\n   *     assert.hasAnyKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, iDontExist: 99, baz: 1337});\n   *     assert.hasAnyKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.hasAnyKeys(new Set([{foo: 'bar'}, 'anotherKey']), [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name hasAnyKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAnyKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAnyKeys, true).to.have.any.keys(keys);\n  }\n\n  /**\n   * ### .hasAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has all and only all of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'bar', 'baz']);\n   *     assert.hasAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, bar: 99, baz: 1337]);\n   *     assert.hasAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.hasAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name hasAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAllKeys, true).to.have.all.keys(keys);\n  }\n\n  /**\n   * ### .containsAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has all of the `keys` provided but may have more keys not listed.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'baz']);\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, ['foo', 'bar', 'baz']);\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, baz: 1337});\n   *     assert.containsAllKeys({foo: 1, bar: 2, baz: 3}, {foo: 30, bar: 99, baz: 1337});\n   *     assert.containsAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}]);\n   *     assert.containsAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{foo: 1}, 'key']);\n   *     assert.containsAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}]);\n   *     assert.containsAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{foo: 'bar'}, 'anotherKey']);\n   *\n   * @name containsAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.containsAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.containsAllKeys, true)\n      .to.contain.all.keys(keys);\n  }\n\n  /**\n   * ### .doesNotHaveAnyKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has none of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAnyKeys({foo: 1, bar: 2, baz: 3}, ['one', 'two', 'example']);\n   *     assert.doesNotHaveAnyKeys({foo: 1, bar: 2, baz: 3}, {one: 1, two: 2, example: 'foo'});\n   *     assert.doesNotHaveAnyKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{one: 'two'}, 'example']);\n   *     assert.doesNotHaveAnyKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{one: 'two'}, 'example']);\n   *\n   * @name doesNotHaveAnyKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAnyKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAnyKeys, true)\n      .to.not.have.any.keys(keys);\n  }\n\n  /**\n   * ### .doesNotHaveAllKeys(object, [keys], [message])\n   *\n   * Asserts that `object` does not have at least one of the `keys` provided.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAllKeys({foo: 1, bar: 2, baz: 3}, ['one', 'two', 'example']);\n   *     assert.doesNotHaveAllKeys({foo: 1, bar: 2, baz: 3}, {one: 1, two: 2, example: 'foo'});\n   *     assert.doesNotHaveAllKeys(new Map([[{foo: 1}, 'bar'], ['key', 'value']]), [{one: 'two'}, 'example']);\n   *     assert.doesNotHaveAllKeys(new Set([{foo: 'bar'}, 'anotherKey'], [{one: 'two'}, 'example']);\n   *\n   * @name doesNotHaveAllKeys\n   * @param {Mixed} object\n   * @param {String[]} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAllKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAllKeys, true)\n      .to.not.have.all.keys(keys);\n  }\n\n  /**\n   * ### .hasAnyDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has at least one of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {one: 'one'});\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.hasAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {one: 'one'});\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {three: 'three'}]);\n   *     assert.hasAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n   *\n   * @name doesNotHaveAllKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAnyDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAnyDeepKeys, true)\n      .to.have.any.deep.keys(keys);\n  }\n\n /**\n   * ### .hasAllDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has all and only all of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.hasAllDeepKeys(new Map([[{one: 'one'}, 'valueOne']]), {one: 'one'});\n   *     assert.hasAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.hasAllDeepKeys(new Set([{one: 'one'}]), {one: 'one'});\n   *     assert.hasAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n   *\n   * @name hasAllDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.hasAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.hasAllDeepKeys, true)\n      .to.have.all.deep.keys(keys);\n  }\n\n /**\n   * ### .containsAllDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` contains all of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.containsAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {one: 'one'});\n   *     assert.containsAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{one: 'one'}, {two: 'two'}]);\n   *     assert.containsAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {one: 'one'});\n   *     assert.containsAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {two: 'two'}]);\n   *\n   * @name containsAllDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.containsAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.containsAllDeepKeys, true)\n      .to.contain.all.deep.keys(keys);\n  }\n\n /**\n   * ### .doesNotHaveAnyDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` has none of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {thisDoesNot: 'exist'});\n   *     assert.doesNotHaveAnyDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{twenty: 'twenty'}, {fifty: 'fifty'}]);\n   *     assert.doesNotHaveAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {twenty: 'twenty'});\n   *     assert.doesNotHaveAnyDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{twenty: 'twenty'}, {fifty: 'fifty'}]);\n   *\n   * @name doesNotHaveAnyDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAnyDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAnyDeepKeys, true)\n      .to.not.have.any.deep.keys(keys);\n  }\n\n /**\n   * ### .doesNotHaveAllDeepKeys(object, [keys], [message])\n   *\n   * Asserts that `object` does not have at least one of the `keys` provided.\n   * Since Sets and Maps can have objects as keys you can use this assertion to perform\n   * a deep comparison.\n   * You can also provide a single object instead of a `keys` array and its keys\n   * will be used as the expected set of keys.\n   *\n   *     assert.doesNotHaveAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [1, 2]]), {thisDoesNot: 'exist'});\n   *     assert.doesNotHaveAllDeepKeys(new Map([[{one: 'one'}, 'valueOne'], [{two: 'two'}, 'valueTwo']]), [{twenty: 'twenty'}, {one: 'one'}]);\n   *     assert.doesNotHaveAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), {twenty: 'twenty'});\n   *     assert.doesNotHaveAllDeepKeys(new Set([{one: 'one'}, {two: 'two'}]), [{one: 'one'}, {fifty: 'fifty'}]);\n   *\n   * @name doesNotHaveAllDeepKeys\n   * @param {Mixed} object\n   * @param {Array|Object} keys\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotHaveAllDeepKeys = function (obj, keys, msg) {\n    new Assertion(obj, msg, assert.doesNotHaveAllDeepKeys, true)\n      .to.not.have.all.deep.keys(keys);\n  }\n\n /**\n   * ### .throws(fn, [errorLike/string/regexp], [string/regexp], [message])\n   *\n   * If `errorLike` is an `Error` constructor, asserts that `fn` will throw an error that is an\n   * instance of `errorLike`.\n   * If `errorLike` is an `Error` instance, asserts that the error thrown is the same\n   * instance as `errorLike`.\n   * If `errMsgMatcher` is provided, it also asserts that the error thrown will have a\n   * message matching `errMsgMatcher`.\n   *\n   *     assert.throws(fn, 'function throws a reference error');\n   *     assert.throws(fn, /function throws a reference error/);\n   *     assert.throws(fn, ReferenceError);\n   *     assert.throws(fn, errorInstance);\n   *     assert.throws(fn, ReferenceError, 'Error thrown must be a ReferenceError and have this msg');\n   *     assert.throws(fn, errorInstance, 'Error thrown must be the same errorInstance and have this msg');\n   *     assert.throws(fn, ReferenceError, /Error thrown must be a ReferenceError and match this/);\n   *     assert.throws(fn, errorInstance, /Error thrown must be the same errorInstance and match this/);\n   *\n   * @name throws\n   * @alias throw\n   * @alias Throw\n   * @param {Function} fn\n   * @param {ErrorConstructor|Error} errorLike\n   * @param {RegExp|String} errMsgMatcher\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.throws = function (fn, errorLike, errMsgMatcher, msg) {\n    if ('string' === typeof errorLike || errorLike instanceof RegExp) {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    var assertErr = new Assertion(fn, msg, assert.throws, true)\n      .to.throw(errorLike, errMsgMatcher);\n    return flag(assertErr, 'object');\n  };\n\n  /**\n   * ### .doesNotThrow(fn, [errorLike/string/regexp], [string/regexp], [message])\n   *\n   * If `errorLike` is an `Error` constructor, asserts that `fn` will _not_ throw an error that is an\n   * instance of `errorLike`.\n   * If `errorLike` is an `Error` instance, asserts that the error thrown is _not_ the same\n   * instance as `errorLike`.\n   * If `errMsgMatcher` is provided, it also asserts that the error thrown will _not_ have a\n   * message matching `errMsgMatcher`.\n   *\n   *     assert.doesNotThrow(fn, 'Any Error thrown must not have this message');\n   *     assert.doesNotThrow(fn, /Any Error thrown must not match this/);\n   *     assert.doesNotThrow(fn, Error);\n   *     assert.doesNotThrow(fn, errorInstance);\n   *     assert.doesNotThrow(fn, Error, 'Error must not have this message');\n   *     assert.doesNotThrow(fn, errorInstance, 'Error must not have this message');\n   *     assert.doesNotThrow(fn, Error, /Error must not match this/);\n   *     assert.doesNotThrow(fn, errorInstance, /Error must not match this/);\n   *\n   * @name doesNotThrow\n   * @param {Function} fn\n   * @param {ErrorConstructor} errorLike\n   * @param {RegExp|String} errMsgMatcher\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotThrow = function (fn, errorLike, errMsgMatcher, msg) {\n    if ('string' === typeof errorLike || errorLike instanceof RegExp) {\n      errMsgMatcher = errorLike;\n      errorLike = null;\n    }\n\n    new Assertion(fn, msg, assert.doesNotThrow, true)\n      .to.not.throw(errorLike, errMsgMatcher);\n  };\n\n  /**\n   * ### .operator(val1, operator, val2, [message])\n   *\n   * Compares two values using `operator`.\n   *\n   *     assert.operator(1, '<', 2, 'everything is ok');\n   *     assert.operator(1, '>', 2, 'this will fail');\n   *\n   * @name operator\n   * @param {Mixed} val1\n   * @param {String} operator\n   * @param {Mixed} val2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.operator = function (val, operator, val2, msg) {\n    var ok;\n    switch(operator) {\n      case '==':\n        ok = val == val2;\n        break;\n      case '===':\n        ok = val === val2;\n        break;\n      case '>':\n        ok = val > val2;\n        break;\n      case '>=':\n        ok = val >= val2;\n        break;\n      case '<':\n        ok = val < val2;\n        break;\n      case '<=':\n        ok = val <= val2;\n        break;\n      case '!=':\n        ok = val != val2;\n        break;\n      case '!==':\n        ok = val !== val2;\n        break;\n      default:\n        msg = msg ? msg + ': ' : msg;\n        throw new chai.AssertionError(\n          msg + 'Invalid operator \"' + operator + '\"',\n          undefined,\n          assert.operator\n        );\n    }\n    var test = new Assertion(ok, msg, assert.operator, true);\n    test.assert(\n        true === flag(test, 'object')\n      , 'expected ' + util.inspect(val) + ' to be ' + operator + ' ' + util.inspect(val2)\n      , 'expected ' + util.inspect(val) + ' to not be ' + operator + ' ' + util.inspect(val2) );\n  };\n\n  /**\n   * ### .closeTo(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.closeTo(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name closeTo\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.closeTo = function (act, exp, delta, msg) {\n    new Assertion(act, msg, assert.closeTo, true).to.be.closeTo(exp, delta);\n  };\n\n  /**\n   * ### .approximately(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.approximately(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name approximately\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.approximately = function (act, exp, delta, msg) {\n    new Assertion(act, msg, assert.approximately, true)\n      .to.be.approximately(exp, delta);\n  };\n\n  /**\n   * ### .sameMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in any order. Uses a\n   * strict equality check (===).\n   *\n   *     assert.sameMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'same members');\n   *\n   * @name sameMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameMembers, true)\n      .to.have.same.members(set2);\n  }\n\n  /**\n   * ### .notSameMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in any order.\n   * Uses a strict equality check (===).\n   *\n   *     assert.notSameMembers([ 1, 2, 3 ], [ 5, 1, 3 ], 'not same members');\n   *\n   * @name notSameMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameMembers, true)\n      .to.not.have.same.members(set2);\n  }\n\n  /**\n   * ### .sameDeepMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in any order. Uses a\n   * deep equality check.\n   *\n   *     assert.sameDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [{ b: 2 }, { a: 1 }, { c: 3 }], 'same deep members');\n   *\n   * @name sameDeepMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameDeepMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameDeepMembers, true)\n      .to.have.same.deep.members(set2);\n  }\n\n  /**\n   * ### .notSameDeepMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in any order.\n   * Uses a deep equality check.\n   *\n   *     assert.notSameDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [{ b: 2 }, { a: 1 }, { f: 5 }], 'not same deep members');\n   *\n   * @name notSameDeepMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameDeepMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameDeepMembers, true)\n      .to.not.have.same.deep.members(set2);\n  }\n\n  /**\n   * ### .sameOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in the same order.\n   * Uses a strict equality check (===).\n   *\n   *     assert.sameOrderedMembers([ 1, 2, 3 ], [ 1, 2, 3 ], 'same ordered members');\n   *\n   * @name sameOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameOrderedMembers, true)\n      .to.have.same.ordered.members(set2);\n  }\n\n  /**\n   * ### .notSameOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in the same\n   * order. Uses a strict equality check (===).\n   *\n   *     assert.notSameOrderedMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'not same ordered members');\n   *\n   * @name notSameOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameOrderedMembers, true)\n      .to.not.have.same.ordered.members(set2);\n  }\n\n  /**\n   * ### .sameDeepOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members in the same order.\n   * Uses a deep equality check.\n   *\n   * assert.sameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 }, { c: 3 } ], 'same deep ordered members');\n   *\n   * @name sameDeepOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.sameDeepOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.sameDeepOrderedMembers, true)\n      .to.have.same.deep.ordered.members(set2);\n  }\n\n  /**\n   * ### .notSameDeepOrderedMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` don't have the same members in the same\n   * order. Uses a deep equality check.\n   *\n   * assert.notSameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 }, { z: 5 } ], 'not same deep ordered members');\n   * assert.notSameDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 }, { c: 3 } ], 'not same deep ordered members');\n   *\n   * @name notSameDeepOrderedMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notSameDeepOrderedMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg, assert.notSameDeepOrderedMembers, true)\n      .to.not.have.same.deep.ordered.members(set2);\n  }\n\n  /**\n   * ### .includeMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in any order. Uses a\n   * strict equality check (===). Duplicates are ignored.\n   *\n   *     assert.includeMembers([ 1, 2, 3 ], [ 2, 1, 2 ], 'include members');\n   *\n   * @name includeMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeMembers, true)\n      .to.include.members(subset);\n  }\n\n  /**\n   * ### .notIncludeMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in any order. Uses a\n   * strict equality check (===). Duplicates are ignored.\n   *\n   *     assert.notIncludeMembers([ 1, 2, 3 ], [ 5, 1 ], 'not include members');\n   *\n   * @name notIncludeMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeMembers, true)\n      .to.not.include.members(subset);\n  }\n\n  /**\n   * ### .includeDeepMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in any order. Uses a deep\n   * equality check. Duplicates are ignored.\n   *\n   *     assert.includeDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 }, { b: 2 } ], 'include deep members');\n   *\n   * @name includeDeepMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeDeepMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeDeepMembers, true)\n      .to.include.deep.members(subset);\n  }\n\n  /**\n   * ### .notIncludeDeepMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in any order. Uses a\n   * deep equality check. Duplicates are ignored.\n   *\n   *     assert.notIncludeDeepMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { f: 5 } ], 'not include deep members');\n   *\n   * @name notIncludeDeepMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeDeepMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeDeepMembers, true)\n      .to.not.include.deep.members(subset);\n  }\n\n  /**\n   * ### .includeOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a strict equality\n   * check (===).\n   *\n   *     assert.includeOrderedMembers([ 1, 2, 3 ], [ 1, 2 ], 'include ordered members');\n   *\n   * @name includeOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeOrderedMembers, true)\n      .to.include.ordered.members(subset);\n  }\n\n  /**\n   * ### .notIncludeOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a strict equality\n   * check (===).\n   *\n   *     assert.notIncludeOrderedMembers([ 1, 2, 3 ], [ 2, 1 ], 'not include ordered members');\n   *     assert.notIncludeOrderedMembers([ 1, 2, 3 ], [ 2, 3 ], 'not include ordered members');\n   *\n   * @name notIncludeOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeOrderedMembers, true)\n      .to.not.include.ordered.members(subset);\n  }\n\n  /**\n   * ### .includeDeepOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a deep equality\n   * check.\n   *\n   *     assert.includeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { b: 2 } ], 'include deep ordered members');\n   *\n   * @name includeDeepOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.includeDeepOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.includeDeepOrderedMembers, true)\n      .to.include.deep.ordered.members(subset);\n  }\n\n  /**\n   * ### .notIncludeDeepOrderedMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` isn't included in `superset` in the same order\n   * beginning with the first element in `superset`. Uses a deep equality\n   * check.\n   *\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { a: 1 }, { f: 5 } ], 'not include deep ordered members');\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { a: 1 } ], 'not include deep ordered members');\n   *     assert.notIncludeDeepOrderedMembers([ { a: 1 }, { b: 2 }, { c: 3 } ], [ { b: 2 }, { c: 3 } ], 'not include deep ordered members');\n   *\n   * @name notIncludeDeepOrderedMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.notIncludeDeepOrderedMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg, assert.notIncludeDeepOrderedMembers, true)\n      .to.not.include.deep.ordered.members(subset);\n  }\n\n  /**\n   * ### .oneOf(inList, list, [message])\n   *\n   * Asserts that non-object, non-array value `inList` appears in the flat array `list`.\n   *\n   *     assert.oneOf(1, [ 2, 1 ], 'Not found in list');\n   *\n   * @name oneOf\n   * @param {*} inList\n   * @param {Array<*>} list\n   * @param {String} message\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.oneOf = function (inList, list, msg) {\n    new Assertion(inList, msg, assert.oneOf, true).to.be.oneOf(list);\n  }\n\n  /**\n   * ### .changes(function, object, property, [message])\n   *\n   * Asserts that a function changes the value of a property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 22 };\n   *     assert.changes(fn, obj, 'val');\n   *\n   * @name changes\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changes = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changes, true).to.change(obj, prop);\n  }\n\n   /**\n   * ### .changesBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function changes the value of a property by an amount (delta).\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 2 };\n   *     assert.changesBy(fn, obj, 'val', 2);\n   *\n   * @name changesBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changesBy, true)\n      .to.change(obj, prop).by(delta);\n  }\n\n   /**\n   * ### .doesNotChange(function, object, property, [message])\n   *\n   * Asserts that a function does not change the value of a property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { console.log('foo'); };\n   *     assert.doesNotChange(fn, obj, 'val');\n   *\n   * @name doesNotChange\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotChange = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotChange, true)\n      .to.not.change(obj, prop);\n  }\n\n  /**\n   * ### .changesButNotBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not change the value of a property or of a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 10 };\n   *     assert.changesButNotBy(fn, obj, 'val', 5);\n   *\n   * @name changesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.changesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.changesButNotBy, true)\n      .to.change(obj, prop).but.not.by(delta);\n  }\n\n  /**\n   * ### .increases(function, object, property, [message])\n   *\n   * Asserts that a function increases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 13 };\n   *     assert.increases(fn, obj, 'val');\n   *\n   * @name increases\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increases = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.increases, true)\n      .to.increase(obj, prop);\n  }\n\n  /**\n   * ### .increasesBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function increases a numeric object property or a function's return value by an amount (delta).\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 10 };\n   *     assert.increasesBy(fn, obj, 'val', 10);\n   *\n   * @name increasesBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increasesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.increasesBy, true)\n      .to.increase(obj, prop).by(delta);\n  }\n\n  /**\n   * ### .doesNotIncrease(function, object, property, [message])\n   *\n   * Asserts that a function does not increase a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 8 };\n   *     assert.doesNotIncrease(fn, obj, 'val');\n   *\n   * @name doesNotIncrease\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotIncrease = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotIncrease, true)\n      .to.not.increase(obj, prop);\n  }\n\n  /**\n   * ### .increasesButNotBy(function, object, property, [message])\n   *\n   * Asserts that a function does not increase a numeric object property or function's return value by an amount (delta).\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 15 };\n   *     assert.increasesButNotBy(fn, obj, 'val', 10);\n   *\n   * @name increasesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.increasesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.increasesButNotBy, true)\n      .to.increase(obj, prop).but.not.by(delta);\n  }\n\n  /**\n   * ### .decreases(function, object, property, [message])\n   *\n   * Asserts that a function decreases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.decreases(fn, obj, 'val');\n   *\n   * @name decreases\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreases = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.decreases, true)\n      .to.decrease(obj, prop);\n  }\n\n  /**\n   * ### .decreasesBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val -= 5 };\n   *     assert.decreasesBy(fn, obj, 'val', 5);\n   *\n   * @name decreasesBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreasesBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.decreasesBy, true)\n      .to.decrease(obj, prop).by(delta);\n  }\n\n  /**\n   * ### .doesNotDecrease(function, object, property, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property.\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 15 };\n   *     assert.doesNotDecrease(fn, obj, 'val');\n   *\n   * @name doesNotDecrease\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotDecrease = function (fn, obj, prop, msg) {\n    if (arguments.length === 3 && typeof obj === 'function') {\n      msg = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotDecrease, true)\n      .to.not.decrease(obj, prop);\n  }\n\n  /**\n   * ### .doesNotDecreaseBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.doesNotDecreaseBy(fn, obj, 'val', 1);\n   *\n   * @name doesNotDecrease\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.doesNotDecreaseBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    return new Assertion(fn, msg, assert.doesNotDecreaseBy, true)\n      .to.not.decrease(obj, prop).by(delta);\n  }\n\n  /**\n   * ### .decreasesButNotBy(function, object, property, delta, [message])\n   *\n   * Asserts that a function does not decreases a numeric object property or a function's return value by an amount (delta)\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.decreasesButNotBy(fn, obj, 'val', 1);\n   *\n   * @name decreasesButNotBy\n   * @param {Function} modifier function\n   * @param {Object} object or getter function\n   * @param {String} property name _optional_\n   * @param {Number} change amount (delta)\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.decreasesButNotBy = function (fn, obj, prop, delta, msg) {\n    if (arguments.length === 4 && typeof obj === 'function') {\n      var tmpMsg = delta;\n      delta = prop;\n      msg = tmpMsg;\n    } else if (arguments.length === 3) {\n      delta = prop;\n      prop = null;\n    }\n\n    new Assertion(fn, msg, assert.decreasesButNotBy, true)\n      .to.decrease(obj, prop).but.not.by(delta);\n  }\n\n  /*!\n   * ### .ifError(object)\n   *\n   * Asserts if value is not a false value, and throws if it is a true value.\n   * This is added to allow for chai to be a drop-in replacement for Node's\n   * assert class.\n   *\n   *     var err = new Error('I am a custom error');\n   *     assert.ifError(err); // Rethrows err!\n   *\n   * @name ifError\n   * @param {Object} object\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.ifError = function (val) {\n    if (val) {\n      throw(val);\n    }\n  };\n\n  /**\n   * ### .isExtensible(object)\n   *\n   * Asserts that `object` is extensible (can have new properties added to it).\n   *\n   *     assert.isExtensible({});\n   *\n   * @name isExtensible\n   * @alias extensible\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isExtensible = function (obj, msg) {\n    new Assertion(obj, msg, assert.isExtensible, true).to.be.extensible;\n  };\n\n  /**\n   * ### .isNotExtensible(object)\n   *\n   * Asserts that `object` is _not_ extensible.\n   *\n   *     var nonExtensibleObject = Object.preventExtensions({});\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freeze({});\n   *\n   *     assert.isNotExtensible(nonExtensibleObject);\n   *     assert.isNotExtensible(sealedObject);\n   *     assert.isNotExtensible(frozenObject);\n   *\n   * @name isNotExtensible\n   * @alias notExtensible\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotExtensible = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotExtensible, true).to.not.be.extensible;\n  };\n\n  /**\n   * ### .isSealed(object)\n   *\n   * Asserts that `object` is sealed (cannot have new properties added to it\n   * and its existing properties cannot be removed).\n   *\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.seal({});\n   *\n   *     assert.isSealed(sealedObject);\n   *     assert.isSealed(frozenObject);\n   *\n   * @name isSealed\n   * @alias sealed\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isSealed = function (obj, msg) {\n    new Assertion(obj, msg, assert.isSealed, true).to.be.sealed;\n  };\n\n  /**\n   * ### .isNotSealed(object)\n   *\n   * Asserts that `object` is _not_ sealed.\n   *\n   *     assert.isNotSealed({});\n   *\n   * @name isNotSealed\n   * @alias notSealed\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotSealed = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotSealed, true).to.not.be.sealed;\n  };\n\n  /**\n   * ### .isFrozen(object)\n   *\n   * Asserts that `object` is frozen (cannot have new properties added to it\n   * and its existing properties cannot be modified).\n   *\n   *     var frozenObject = Object.freeze({});\n   *     assert.frozen(frozenObject);\n   *\n   * @name isFrozen\n   * @alias frozen\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isFrozen = function (obj, msg) {\n    new Assertion(obj, msg, assert.isFrozen, true).to.be.frozen;\n  };\n\n  /**\n   * ### .isNotFrozen(object)\n   *\n   * Asserts that `object` is _not_ frozen.\n   *\n   *     assert.isNotFrozen({});\n   *\n   * @name isNotFrozen\n   * @alias notFrozen\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotFrozen = function (obj, msg) {\n    new Assertion(obj, msg, assert.isNotFrozen, true).to.not.be.frozen;\n  };\n\n  /**\n   * ### .isEmpty(target)\n   *\n   * Asserts that the target does not contain any values.\n   * For arrays and strings, it checks the `length` property.\n   * For `Map` and `Set` instances, it checks the `size` property.\n   * For non-function objects, it gets the count of own\n   * enumerable string keys.\n   *\n   *     assert.isEmpty([]);\n   *     assert.isEmpty('');\n   *     assert.isEmpty(new Map);\n   *     assert.isEmpty({});\n   *\n   * @name isEmpty\n   * @alias empty\n   * @param {Object|Array|String|Map|Set} target\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isEmpty = function(val, msg) {\n    new Assertion(val, msg, assert.isEmpty, true).to.be.empty;\n  };\n\n  /**\n   * ### .isNotEmpty(target)\n   *\n   * Asserts that the target contains values.\n   * For arrays and strings, it checks the `length` property.\n   * For `Map` and `Set` instances, it checks the `size` property.\n   * For non-function objects, it gets the count of own\n   * enumerable string keys.\n   *\n   *     assert.isNotEmpty([1, 2]);\n   *     assert.isNotEmpty('34');\n   *     assert.isNotEmpty(new Set([5, 6]));\n   *     assert.isNotEmpty({ key: 7 });\n   *\n   * @name isNotEmpty\n   * @alias notEmpty\n   * @param {Object|Array|String|Map|Set} target\n   * @param {String} message _optional_\n   * @namespace Assert\n   * @api public\n   */\n\n  assert.isNotEmpty = function(val, msg) {\n    new Assertion(val, msg, assert.isNotEmpty, true).to.not.be.empty;\n  };\n\n  /*!\n   * Aliases.\n   */\n\n  (function alias(name, as){\n    assert[as] = assert[name];\n    return alias;\n  })\n  ('isOk', 'ok')\n  ('isNotOk', 'notOk')\n  ('throws', 'throw')\n  ('throws', 'Throw')\n  ('isExtensible', 'extensible')\n  ('isNotExtensible', 'notExtensible')\n  ('isSealed', 'sealed')\n  ('isNotSealed', 'notSealed')\n  ('isFrozen', 'frozen')\n  ('isNotFrozen', 'notFrozen')\n  ('isEmpty', 'empty')\n  ('isNotEmpty', 'notEmpty');\n};\n","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar used = [];\n\n/*!\n * Chai version\n */\n\nexports.version = '4.1.2';\n\n/*!\n * Assertion Error\n */\n\nexports.AssertionError = require('assertion-error');\n\n/*!\n * Utils for plugins (not exported)\n */\n\nvar util = require('./chai/utils');\n\n/**\n * # .use(function)\n *\n * Provides a way to extend the internals of Chai.\n *\n * @param {Function}\n * @returns {this} for chaining\n * @api public\n */\n\nexports.use = function (fn) {\n  if (!~used.indexOf(fn)) {\n    fn(exports, util);\n    used.push(fn);\n  }\n\n  return exports;\n};\n\n/*!\n * Utility Functions\n */\n\nexports.util = util;\n\n/*!\n * Configuration\n */\n\nvar config = require('./chai/config');\nexports.config = config;\n\n/*!\n * Primary `Assertion` prototype\n */\n\nvar assertion = require('./chai/assertion');\nexports.use(assertion);\n\n/*!\n * Core Assertions\n */\n\nvar core = require('./chai/core/assertions');\nexports.use(core);\n\n/*!\n * Expect interface\n */\n\nvar expect = require('./chai/interface/expect');\nexports.use(expect);\n\n/*!\n * Should interface\n */\n\nvar should = require('./chai/interface/should');\nexports.use(should);\n\n/*!\n * Assert interface\n */\n\nvar assert = require('./chai/interface/assert');\nexports.use(assert);\n","module.exports = require('./lib/chai');\n","import { Mixable, define, predefine, mixins, mixinRules, definitions, MixinMergeRules } from '../../../lib';\nimport { expect } from 'chai'\n\nconst M = {\n    num : 1,\n    nul : null,\n    undef : void 0,\n    obj : { hi : 'there' },\n    fun(){},\n    arr : [],\n    fwd( arr ){ arr.push( \"M\" ) },\n    bck( arr ){ arr.push( \"M\" ) }    \n}\n\nclass C {\n    static a = 1;\n    b(){}\n    fwd( arr ){ arr.push( \"C\" )}\n    bck( arr ){ arr.push( \"C\" )}\n}\n\ndescribe( \"Forward declarations\", () =>{\n    it( '@predefine calls onExtend hook', () => {\n        let called = 0;\n\n        @predefine class X {\n            static onExtend( BaseClass ){\n                expect( BaseClass ).to.eql( Object );\n                called++;\n            }\n        }\n\n        expect( called ).to.eql( 1 );\n    } );\n});\n\ndescribe( \"@define decorator\", () =>{\n    it( '@define makes plain class mixable', () =>{\n        @define class X {}\n\n        expect( (X as any).define ).to.exist;\n    });\n\n    it( '@define calls onDefine hook', () =>{\n        let called = 0;\n\n        @define({ a : 1 }) class X {\n            static onDefine( spec, BaseClass ){\n                called++;\n                expect( spec ).to.eql( {} );\n                expect( BaseClass ).to.eql( Object );\n            }\n        }\n\n        expect( (X as any).define ).to.exist;\n        expect( called ).to.eql( 1 );\n    });\n\n    it( '@define does nothing when extend mixable', () =>{\n        @define class X extends Mixable {}\n\n        expect( X.__super__ ).to.eql( Mixable.prototype );\n    });\n\n    it( '@define( props ) assign members to class proto', () =>{\n        @define({\n            a : 1,\n            b : 2\n        })\n        class X {\n            a(){}\n        }\n\n        expect( (X as any).prototype.b ).to.eql( 2 );\n        expect( (X as any).prototype.a ).to.eql( 1 );\n    });\n\n    it( 'Mixable.extend creates the subclass', () =>{\n        const X = Mixable.extend({ a : 5 });\n        \n        const x = new X();\n\n        expect( x.a ).to.eql( 5 );\n        expect( x ).to.be.instanceof( Mixable );\n    });\n\n    it( 'allows toString() and valueOf() override', () =>{\n        @define class Base extends Mixable {\n            toString(){ return \"base\"; }\n            valueOf(){ return 'base'; }\n        }\n\n        @define class Sub extends Base {\n            toString(){ return \"sub\"; }\n            valueOf(){ return 'sub'; }\n        }\n\n        const base = new Base(),\n            sub = new Sub();\n\n        expect( base.toString() ).to.eql( 'base' );\n        expect( base.valueOf() ).to.eql( 'base' );\n        expect( sub.toString() ).to.eql( 'sub' );\n        expect( sub.valueOf() ).to.eql( 'sub' );\n    } );\n\n    it( 'allows toString() and valueOf() override with .extend()', () =>{\n        const Base = Mixable.extend({\n            toString(){ return \"base\"; },\n            valueOf(){ return 'base'; }\n        });\n\n        const Sub = Base.extend({\n            toString(){ return \"sub\"; },\n            valueOf(){ return 'sub'; }\n        })\n\n        const base = new Base(),\n            sub = new Sub();\n\n        expect( base.toString() ).to.eql( 'base' );\n        expect( base.valueOf() ).to.eql( 'base' );\n        expect( sub.toString() ).to.eql( 'sub' );\n        expect( sub.valueOf() ).to.eql( 'sub' );\n    } );\n\n    it( \"gives priority to the class definition\", () =>{\n        @define({\n            undef : 1\n        })\n        @mixins( M )\n        class X extends Mixable {\n            nul(){}\n        }\n\n        expect( X.prototype.nul ).to.be.instanceof( Function );\n        expect( ( X.prototype as any ).undef ).to.be.eql( 1 );\n    });\n});\n\ndescribe( '@mixins', () =>{\n    it( \"merges in the plain objects\", () =>{\n        @define \n        @mixins( M )\n        class X extends Mixable {\n        }\n\n        expect( X.prototype ).to.contain( M );\n    });\n\n    it( \"don't merge same mixin twice\", () =>{\n        @define \n        @mixins( M, M )\n        class X extends Mixable {\n        }\n\n        expect( X.mixins.appliedMixins.length ).to.equal( 1 );\n\n        @define @mixins( M ) class Y extends X {\n\n        }\n\n        expect( Y.mixins.appliedMixins.length ).to.equal( 1 );\n    });\n\n    it( \"mix in classes\", () =>{\n        @define @mixins( C ) class X {}\n        const x = new X();\n\n        expect( ( X as any ).a ).to.eql( 1 );\n        expect( ( x as any ).b ).to.be.instanceof( Function );\n    } );\n\n    it( \"mix in sequence\", () =>{\n        const A = { a : 1, b : 1 },\n             B = { a : 2 };\n\n        @define @mixins( B, A )\n        class X {}\n\n        const x : any = new X();\n\n        expect( x.a ).to.eql( 2 );\n        expect( x.b ).to.eql( 1 );\n    });\n\n    it( 'merge methods from mixin if they are not locally defined', () => {\n        @define class Base {\n            first(){}\n        }\n\n        const Mix = {\n            first(){},\n            second(){}\n        }\n\n        @define @mixins( Mix ) class Y extends Base {\n            second(){}\n        }\n\n        expect( Y.prototype.second ).to.not.eql( Mix.second );\n        expect( Y.prototype.first ).to.eql( Mix.first );\n\n    });\n} );\n\ndescribe( 'mixin rules', () => {\n    @define\n    @mixins( M, C )\n    @mixinRules({\n        fwd : mixinRules.classFirst,\n        bck : mixinRules.classLast\n    })\n    class X {\n    }\n\n    it( 'chains functions when merge rules are defined', () => {\n        const x = new X();\n        const fwda = [], bcka = [];\n        ( x as any).fwd( fwda );\n        (expect( fwda ).to.have as any).ordered.members([ \"M\", \"C\" ]);\n        \n        ( x as any ).bck( bcka );\n        (expect( bcka ).to.have as any).ordered.members([ \"C\", \"M\" ]);\n    });\n\n    it( 'chains function on inheritance', () =>{\n        @define\n        @mixins({\n            fwd( arr ){ arr.push( 'Z' ); },\n            bck( arr ){ arr.push( 'Z' ); }\n        })\n        class Y extends X {\n            fwd( arr ){ arr.push( 'Y' ); }\n            bck( arr ){ arr.push( 'Y' ); }\n        }\n\n        const y = new Y();\n\n        const fwda = [], bcka = [];\n        ( y as any).fwd( fwda );\n        (expect( fwda ).to.have as any).ordered.members([ \"Y\", \"Z\", \"M\", \"C\" ]);\n        \n        ( y as any ).bck( bcka );\n        (expect( bcka ).to.have as any).ordered.members([ \"C\", \"M\", \"Z\", \"Y\" ]);\n    } );\n});\n\ndescribe( '@definitions', ()=>{\n    it( 'extract definitions from statics', ()=>{\n        @define\n        @definitions({\n            a : mixinRules.value,\n            b : mixinRules.merge\n        })\n        class Y {\n            static a = 'a';\n            static b = { a : 1 };\n            zzz : any;\n\n            static onDefine( spec ){\n                expect( spec ).to.deep.equal({ a : 'a', b : { a : 1 }});\n                this.prototype.zzz = 'Hurrah!';\n            }\n        }\n    });\n\n    it( 'extract definitions from @define parameter', () => {\n        @define({\n            a : 'a',\n            b : { a : 1 }\n        })\n        @definitions({\n            a : mixinRules.value,\n            b : mixinRules.merge\n        })\n        class Y {\n            zzz : any;\n\n            static onDefine( spec ){\n                expect( spec ).to.deep.equal({ a : 'a', b : { a : 1 }});\n                this.prototype.zzz = 'Hurrah!';\n            }\n        }\n    });\n\n    it( 'extract definitions from mixins', () => {\n        @define({\n            a : 'a',\n            b : { a : 1 }\n        })\n        @mixins({\n            a : 'no',\n            b : { b : 1, a : 2 }\n        })\n        @definitions({\n            a : mixinRules.value,\n            b : mixinRules.merge\n        })\n        class Y {\n            zzz : any;\n            static b = { c : 1 };\n\n            static onDefine( spec ){\n                expect( spec ).to.deep.equal({ a : 'a', b : { a : 1, b : 1, c : 1 }});\n                this.prototype.zzz = 'Hurrah!';\n            }\n        }\n    });\n});","/*! *****************************************************************************\r\nCopyright (C) Microsoft. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\nnamespace Reflect {\r\n    \"use strict\";\r\n\r\n    // Metadata Proposal\r\n    // https://rbuckton.github.io/reflect-metadata/\r\n\r\n    type HashMap<V> = Record<string, V>;\r\n\r\n    interface BufferLike {\r\n        [offset: number]: number;\r\n        length: number;\r\n    }\r\n\r\n    type IteratorResult<T> = { value: T, done: false } | { value: never, done: true };\r\n\r\n    interface Iterator<T> {\r\n        next(value?: any): IteratorResult<T>;\r\n        throw?(value: any): IteratorResult<T>;\r\n        return?(value?: T): IteratorResult<T>;\r\n    }\r\n\r\n    interface Iterable<T> {\r\n        \"@@iterator\"(): Iterator<T>;\r\n    }\r\n\r\n    interface IterableIterator<T> extends Iterator<T> {\r\n        \"@@iterator\"(): IterableIterator<T>;\r\n    }\r\n\r\n    interface Map<K, V> extends Iterable<[K, V]> {\r\n        size: number;\r\n        has(key: K): boolean;\r\n        get(key: K): V;\r\n        set(key: K, value?: V): this;\r\n        delete(key: K): boolean;\r\n        clear(): void;\r\n        keys(): IterableIterator<K>;\r\n        values(): IterableIterator<V>;\r\n        entries(): IterableIterator<[K, V]>;\r\n    }\r\n\r\n    interface MapConstructor {\r\n        new (): Map<any, any>;\r\n        new <K, V>(): Map<K, V>;\r\n        prototype: Map<any, any>;\r\n    }\r\n\r\n    interface Set<T> extends Iterable<T> {\r\n        size: number;\r\n        has(value: T): boolean;\r\n        add(value: T): this;\r\n        delete(value: T): boolean;\r\n        clear(): void;\r\n        keys(): IterableIterator<T>;\r\n        values(): IterableIterator<T>;\r\n        entries(): IterableIterator<[T, T]>;\r\n    }\r\n\r\n    interface SetConstructor {\r\n        new (): Set<any>;\r\n        new <T>(): Set<T>;\r\n        prototype: Set<any>;\r\n    }\r\n\r\n    interface WeakMap<K, V> {\r\n        clear(): void;\r\n        delete(key: K): boolean;\r\n        get(key: K): V;\r\n        has(key: K): boolean;\r\n        set(key: K, value?: V): WeakMap<K, V>;\r\n    }\r\n\r\n    interface WeakMapConstructor {\r\n        new (): WeakMap<any, any>;\r\n        new <K, V>(): WeakMap<K, V>;\r\n        prototype: WeakMap<any, any>;\r\n    }\r\n\r\n    type MemberDecorator = <T>(target: Object, propertyKey: string | symbol, descriptor?: TypedPropertyDescriptor<T>) => TypedPropertyDescriptor<T> | void;\r\n\r\n    declare const Symbol: { iterator: symbol, toPrimitive: symbol };\r\n    declare const Set: SetConstructor;\r\n    declare const WeakMap: WeakMapConstructor;\r\n    declare const Map: MapConstructor;\r\n    declare const global: any;\r\n    declare const crypto: Crypto;\r\n    declare const msCrypto: Crypto;\r\n    declare const process: any;\r\n\r\n    const hasOwn = Object.prototype.hasOwnProperty;\r\n\r\n    // feature test for Symbol support\r\n    const supportsSymbol = typeof Symbol === \"function\";\r\n    const toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\r\n    const iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\r\n\r\n    namespace HashMap {\r\n        const supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\r\n        const supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\r\n        const downLevel = !supportsCreate && !supportsProto;\r\n\r\n        // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\r\n        export const create = supportsCreate\r\n            ? <V>() => MakeDictionary(Object.create(null) as HashMap<V>)\r\n            : supportsProto\r\n                ? <V>() => MakeDictionary({ __proto__: null as any } as HashMap<V>)\r\n                : <V>() => MakeDictionary({} as HashMap<V>);\r\n\r\n        export const has = downLevel\r\n            ? <V>(map: HashMap<V>, key: string | number | symbol) => hasOwn.call(map, key)\r\n            : <V>(map: HashMap<V>, key: string | number | symbol) => key in map;\r\n\r\n        export const get = downLevel\r\n            ? <V>(map: HashMap<V>, key: string | number | symbol): V | undefined => hasOwn.call(map, key) ? map[key] : undefined\r\n            : <V>(map: HashMap<V>, key: string | number | symbol): V | undefined => map[key];\r\n    }\r\n\r\n    // Load global or shim versions of Map, Set, and WeakMap\r\n    const functionPrototype = Object.getPrototypeOf(Function);\r\n    const usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\r\n    const _Map: typeof Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\r\n    const _Set: typeof Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\r\n    const _WeakMap: typeof WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\r\n\r\n    // [[Metadata]] internal slot\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\r\n    const Metadata = new _WeakMap<any, Map<string | symbol | undefined, Map<any, any>>>();\r\n\r\n    /**\r\n      * Applies a set of decorators to a target object.\r\n      * @param decorators An array of decorators.\r\n      * @param target The target object.\r\n      * @returns The result of applying the provided decorators.\r\n      * @remarks Decorators are applied in reverse order of their positions in the array.\r\n      * @example\r\n      *\r\n      *     class Example { }\r\n      *\r\n      *     // constructor\r\n      *     Example = Reflect.decorate(decoratorsArray, Example);\r\n      *\r\n      */\r\n    export function decorate(decorators: ClassDecorator[], target: Function): Function;\r\n\r\n    /**\r\n      * Applies a set of decorators to a property of a target object.\r\n      * @param decorators An array of decorators.\r\n      * @param target The target object.\r\n      * @param propertyKey The property key to decorate.\r\n      * @param attributes A property descriptor.\r\n      * @remarks Decorators are applied in reverse order.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         static staticMethod() { }\r\n      *         method() { }\r\n      *     }\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Object.defineProperty(Example, \"staticMethod\",\r\n      *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\r\n      *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\r\n      *\r\n      *     // method (on prototype)\r\n      *     Object.defineProperty(Example.prototype, \"method\",\r\n      *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\r\n      *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\r\n      *\r\n      */\r\n    export function decorate(decorators: (PropertyDecorator | MethodDecorator)[], target: any, propertyKey: string | symbol, attributes?: PropertyDescriptor | null): PropertyDescriptor | undefined;\r\n\r\n    /**\r\n      * Applies a set of decorators to a property of a target object.\r\n      * @param decorators An array of decorators.\r\n      * @param target The target object.\r\n      * @param propertyKey The property key to decorate.\r\n      * @param attributes A property descriptor.\r\n      * @remarks Decorators are applied in reverse order.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         static staticMethod() { }\r\n      *         method() { }\r\n      *     }\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Object.defineProperty(Example, \"staticMethod\",\r\n      *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\r\n      *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\r\n      *\r\n      *     // method (on prototype)\r\n      *     Object.defineProperty(Example.prototype, \"method\",\r\n      *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\r\n      *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\r\n      *\r\n      */\r\n    export function decorate(decorators: (PropertyDecorator | MethodDecorator)[], target: any, propertyKey: string | symbol, attributes: PropertyDescriptor): PropertyDescriptor;\r\n\r\n    /**\r\n      * Applies a set of decorators to a property of a target object.\r\n      * @param decorators An array of decorators.\r\n      * @param target The target object.\r\n      * @param propertyKey (Optional) The property key to decorate.\r\n      * @param attributes (Optional) The property descriptor for the target key.\r\n      * @remarks Decorators are applied in reverse order.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     Example = Reflect.decorate(decoratorsArray, Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Object.defineProperty(Example, \"staticMethod\",\r\n      *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\r\n      *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\r\n      *\r\n      *     // method (on prototype)\r\n      *     Object.defineProperty(Example.prototype, \"method\",\r\n      *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\r\n      *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\r\n      *\r\n      */\r\n    export function decorate(decorators: (ClassDecorator | MemberDecorator)[], target: any, propertyKey?: string | symbol, attributes?: PropertyDescriptor | null): PropertyDescriptor | Function | undefined {\r\n        if (!IsUndefined(propertyKey)) {\r\n            if (!IsArray(decorators)) throw new TypeError();\r\n            if (!IsObject(target)) throw new TypeError();\r\n            if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes)) throw new TypeError();\r\n            if (IsNull(attributes)) attributes = undefined;\r\n            propertyKey = ToPropertyKey(propertyKey);\r\n            return DecorateProperty(<MemberDecorator[]>decorators, target, propertyKey, attributes);\r\n        }\r\n        else {\r\n            if (!IsArray(decorators)) throw new TypeError();\r\n            if (!IsConstructor(target)) throw new TypeError();\r\n            return DecorateConstructor(<ClassDecorator[]>decorators, <Function>target);\r\n        }\r\n    }\r\n\r\n    // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\r\n    // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\r\n\r\n    /**\r\n      * A default metadata decorator factory that can be used on a class, class member, or parameter.\r\n      * @param metadataKey The key for the metadata entry.\r\n      * @param metadataValue The value for the metadata entry.\r\n      * @returns A decorator function.\r\n      * @remarks\r\n      * If `metadataKey` is already defined for the target and target key, the\r\n      * metadataValue for that key will be overwritten.\r\n      * @example\r\n      *\r\n      *     // constructor\r\n      *     @Reflect.metadata(key, value)\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // property (on constructor, TypeScript only)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         static staticProperty;\r\n      *     }\r\n      *\r\n      *     // property (on prototype, TypeScript only)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         property;\r\n      *     }\r\n      *\r\n      *     // method (on constructor)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         static staticMethod() { }\r\n      *     }\r\n      *\r\n      *     // method (on prototype)\r\n      *     class Example {\r\n      *         @Reflect.metadata(key, value)\r\n      *         method() { }\r\n      *     }\r\n      *\r\n      */\r\n    export function metadata(metadataKey: any, metadataValue: any) {\r\n        function decorator(target: Function): void;\r\n        function decorator(target: any, propertyKey: string | symbol): void;\r\n        function decorator(target: any, propertyKey?: string | symbol): void {\r\n            if (!IsObject(target)) throw new TypeError();\r\n            if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey)) throw new TypeError();\r\n            OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n        }\r\n        return decorator;\r\n    }\r\n\r\n    // 4.1.3 Reflect.defineMetadata(metadataKey, metadataValue, target [, propertyKey])\r\n    // https://rbuckton.github.io/reflect-metadata/#reflect.definemetadata\r\n\r\n    /**\r\n      * Define a unique metadata entry on the target.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param metadataValue A value that contains attached metadata.\r\n      * @param target The target object on which to define metadata.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\r\n      *\r\n      *     // decorator factory as metadata-producing annotation.\r\n      *     function MyAnnotation(options): ClassDecorator {\r\n      *         return target => Reflect.defineMetadata(\"custom:annotation\", options, target);\r\n      *     }\r\n      *\r\n      */\r\n    export function defineMetadata(metadataKey: any, metadataValue: any, target: any): void;\r\n\r\n    /**\r\n      * Define a unique metadata entry on the target.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param metadataValue A value that contains attached metadata.\r\n      * @param target The target object on which to define metadata.\r\n      * @param propertyKey The property key for the target.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", Number, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", Number, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", Number, Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", Number, Example.prototype, \"method\");\r\n      *\r\n      *     // decorator factory as metadata-producing annotation.\r\n      *     function MyAnnotation(options): PropertyDecorator {\r\n      *         return (target, key) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\r\n      *     }\r\n      *\r\n      */\r\n    export function defineMetadata(metadataKey: any, metadataValue: any, target: any, propertyKey: string | symbol): void;\r\n\r\n    /**\r\n      * Define a unique metadata entry on the target.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param metadataValue A value that contains attached metadata.\r\n      * @param target The target object on which to define metadata.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\r\n      *\r\n      *     // decorator factory as metadata-producing annotation.\r\n      *     function MyAnnotation(options): Decorator {\r\n      *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\r\n      *     }\r\n      *\r\n      */\r\n    export function defineMetadata(metadataKey: any, metadataValue: any, target: any, propertyKey?: string | symbol): void {\r\n        if (!IsObject(target)) throw new TypeError();\r\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\r\n    }\r\n\r\n    // 4.1.4 Reflect.hasMetadata(metadataKey, target [, propertyKey])\r\n    // https://rbuckton.github.io/reflect-metadata/#reflect.hasmetadata\r\n\r\n    /**\r\n      * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\r\n      *\r\n      */\r\n    export function hasMetadata(metadataKey: any, target: any): boolean;\r\n\r\n    /**\r\n      * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey The property key for the target.\r\n      * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function hasMetadata(metadataKey: any, target: any, propertyKey: string | symbol): boolean;\r\n\r\n    /**\r\n      * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function hasMetadata(metadataKey: any, target: any, propertyKey?: string | symbol): boolean {\r\n        if (!IsObject(target)) throw new TypeError();\r\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryHasMetadata(metadataKey, target, propertyKey);\r\n    }\r\n\r\n    // 4.1.5 Reflect.hasOwnMetadata(metadataKey, target [, propertyKey])\r\n    // https://rbuckton.github.io/reflect-metadata/#reflect-hasownmetadata\r\n\r\n    /**\r\n      * Gets a value indicating whether the target object has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\r\n      *\r\n      */\r\n    export function hasOwnMetadata(metadataKey: any, target: any): boolean;\r\n\r\n    /**\r\n      * Gets a value indicating whether the target object has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey The property key for the target.\r\n      * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function hasOwnMetadata(metadataKey: any, target: any, propertyKey: string | symbol): boolean;\r\n\r\n    /**\r\n      * Gets a value indicating whether the target object has the provided metadata key defined.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function hasOwnMetadata(metadataKey: any, target: any, propertyKey?: string | symbol): boolean {\r\n        if (!IsObject(target)) throw new TypeError();\r\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\r\n    }\r\n\r\n    // 4.1.6 Reflect.getMetadata(metadataKey, target [, propertyKey])\r\n    // https://rbuckton.github.io/reflect-metadata/#reflect-getmetadata\r\n\r\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example);\r\n      *\r\n      */\r\n    export function getMetadata(metadataKey: any, target: any): any;\r\n\r\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey The property key for the target.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function getMetadata(metadataKey: any, target: any, propertyKey: string | symbol): any;\r\n\r\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function getMetadata(metadataKey: any, target: any, propertyKey?: string | symbol): any {\r\n        if (!IsObject(target)) throw new TypeError();\r\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryGetMetadata(metadataKey, target, propertyKey);\r\n    }\r\n\r\n    // 4.1.7 Reflect.getOwnMetadata(metadataKey, target [, propertyKey])\r\n    // https://rbuckton.github.io/reflect-metadata/#reflect-getownmetadata\r\n\r\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\r\n      *\r\n      */\r\n    export function getOwnMetadata(metadataKey: any, target: any): any;\r\n\r\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey The property key for the target.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function getOwnMetadata(metadataKey: any, target: any, propertyKey: string | symbol): any;\r\n\r\n    /**\r\n      * Gets the metadata value for the provided metadata key on the target object.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function getOwnMetadata(metadataKey: any, target: any, propertyKey?: string | symbol): any {\r\n        if (!IsObject(target)) throw new TypeError();\r\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\r\n    }\r\n\r\n    // 4.1.8 Reflect.getMetadataKeys(target [, propertyKey])\r\n    // https://rbuckton.github.io/reflect-metadata/#reflect-getmetadatakeys\r\n\r\n    /**\r\n      * Gets the metadata keys defined on the target object or its prototype chain.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getMetadataKeys(Example);\r\n      *\r\n      */\r\n    export function getMetadataKeys(target: any): any[];\r\n\r\n    /**\r\n      * Gets the metadata keys defined on the target object or its prototype chain.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey The property key for the target.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function getMetadataKeys(target: any, propertyKey: string | symbol): any[];\r\n\r\n    /**\r\n      * Gets the metadata keys defined on the target object or its prototype chain.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getMetadataKeys(Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function getMetadataKeys(target: any, propertyKey?: string | symbol): any[] {\r\n        if (!IsObject(target)) throw new TypeError();\r\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryMetadataKeys(target, propertyKey);\r\n    }\r\n\r\n    // 4.1.9 Reflect.getOwnMetadataKeys(target [, propertyKey])\r\n    // https://rbuckton.github.io/reflect-metadata/#reflect-getownmetadata\r\n\r\n    /**\r\n      * Gets the unique metadata keys defined on the target object.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getOwnMetadataKeys(Example);\r\n      *\r\n      */\r\n    export function getOwnMetadataKeys(target: any): any[];\r\n\r\n    /**\r\n      * Gets the unique metadata keys defined on the target object.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey The property key for the target.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function getOwnMetadataKeys(target: any, propertyKey: string | symbol): any[];\r\n\r\n    /**\r\n      * Gets the unique metadata keys defined on the target object.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns An array of unique metadata keys.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.getOwnMetadataKeys(Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function getOwnMetadataKeys(target: any, propertyKey?: string | symbol): any[] {\r\n        if (!IsObject(target)) throw new TypeError();\r\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\r\n        return OrdinaryOwnMetadataKeys(target, propertyKey);\r\n    }\r\n\r\n    // 4.1.10 Reflect.deleteMetadata(metadataKey, target [, propertyKey])\r\n    // https://rbuckton.github.io/reflect-metadata/#reflect-deletemetadata\r\n\r\n    /**\r\n      * Deletes the metadata entry from the target object with the provided key.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @returns `true` if the metadata entry was found and deleted; otherwise, false.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\r\n      *\r\n      */\r\n    export function deleteMetadata(metadataKey: any, target: any): boolean;\r\n\r\n    /**\r\n      * Deletes the metadata entry from the target object with the provided key.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey The property key for the target.\r\n      * @returns `true` if the metadata entry was found and deleted; otherwise, false.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function deleteMetadata(metadataKey: any, target: any, propertyKey: string | symbol): boolean;\r\n\r\n    /**\r\n      * Deletes the metadata entry from the target object with the provided key.\r\n      * @param metadataKey A key used to store and retrieve metadata.\r\n      * @param target The target object on which the metadata is defined.\r\n      * @param propertyKey (Optional) The property key for the target.\r\n      * @returns `true` if the metadata entry was found and deleted; otherwise, false.\r\n      * @example\r\n      *\r\n      *     class Example {\r\n      *         // property declarations are not part of ES6, though they are valid in TypeScript:\r\n      *         // static staticProperty;\r\n      *         // property;\r\n      *\r\n      *         constructor(p) { }\r\n      *         static staticMethod(p) { }\r\n      *         method(p) { }\r\n      *     }\r\n      *\r\n      *     // constructor\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\r\n      *\r\n      *     // property (on constructor)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\r\n      *\r\n      *     // property (on prototype)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\r\n      *\r\n      *     // method (on constructor)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\r\n      *\r\n      *     // method (on prototype)\r\n      *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\r\n      *\r\n      */\r\n    export function deleteMetadata(metadataKey: any, target: any, propertyKey?: string | symbol): boolean {\r\n        if (!IsObject(target)) throw new TypeError();\r\n        if (!IsUndefined(propertyKey)) propertyKey = ToPropertyKey(propertyKey);\r\n        const metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\r\n        if (IsUndefined(metadataMap)) return false;\r\n        if (!metadataMap.delete(metadataKey)) return false;\r\n        if (metadataMap.size > 0) return true;\r\n        const targetMetadata = Metadata.get(target);\r\n        targetMetadata.delete(propertyKey);\r\n        if (targetMetadata.size > 0) return true;\r\n        Metadata.delete(target);\r\n        return true;\r\n    }\r\n\r\n    function DecorateConstructor(decorators: ClassDecorator[], target: Function): Function {\r\n        for (let i = decorators.length - 1; i >= 0; --i) {\r\n            const decorator = decorators[i];\r\n            const decorated = decorator(target);\r\n            if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                if (!IsConstructor(decorated)) throw new TypeError();\r\n                target = <Function>decorated;\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function DecorateProperty(decorators: MemberDecorator[], target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor | undefined): PropertyDescriptor | undefined {\r\n        for (let i = decorators.length - 1; i >= 0; --i) {\r\n            const decorator = decorators[i];\r\n            const decorated = decorator(target, propertyKey, descriptor);\r\n            if (!IsUndefined(decorated) && !IsNull(decorated)) {\r\n                if (!IsObject(decorated)) throw new TypeError();\r\n                descriptor = <PropertyDescriptor>decorated;\r\n            }\r\n        }\r\n        return descriptor;\r\n    }\r\n\r\n    // 2.1.1 GetOrCreateMetadataMap(O, P, Create)\r\n    // https://rbuckton.github.io/reflect-metadata/#getorcreatemetadatamap\r\n    function GetOrCreateMetadataMap(O: any, P: string | symbol | undefined, Create: true): Map<any, any>;\r\n    function GetOrCreateMetadataMap(O: any, P: string | symbol | undefined, Create: false): Map<any, any> | undefined;\r\n    function GetOrCreateMetadataMap(O: any, P: string | symbol | undefined, Create: boolean): Map<any, any> | undefined {\r\n        let targetMetadata = Metadata.get(O);\r\n        if (IsUndefined(targetMetadata)) {\r\n            if (!Create) return undefined;\r\n            targetMetadata = new _Map<string | symbol | undefined, Map<any, any>>();\r\n            Metadata.set(O, targetMetadata);\r\n        }\r\n        let metadataMap = targetMetadata.get(P);\r\n        if (IsUndefined(metadataMap)) {\r\n            if (!Create) return undefined;\r\n            metadataMap = new _Map<any, any>();\r\n            targetMetadata.set(P, metadataMap);\r\n        }\r\n        return metadataMap;\r\n    }\r\n\r\n    // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\r\n    function OrdinaryHasMetadata(MetadataKey: any, O: any, P: string | symbol | undefined): boolean {\r\n        const hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n        if (hasOwn) return true;\r\n        const parent = OrdinaryGetPrototypeOf(O);\r\n        if (!IsNull(parent)) return OrdinaryHasMetadata(MetadataKey, parent, P);\r\n        return false;\r\n    }\r\n\r\n    // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\r\n    function OrdinaryHasOwnMetadata(MetadataKey: any, O: any, P: string | symbol | undefined): boolean {\r\n        const metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n        if (IsUndefined(metadataMap)) return false;\r\n        return ToBoolean(metadataMap.has(MetadataKey));\r\n    }\r\n\r\n    // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\r\n    function OrdinaryGetMetadata(MetadataKey: any, O: any, P: string | symbol | undefined): any {\r\n        const hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\r\n        if (hasOwn) return OrdinaryGetOwnMetadata(MetadataKey, O, P);\r\n        const parent = OrdinaryGetPrototypeOf(O);\r\n        if (!IsNull(parent)) return OrdinaryGetMetadata(MetadataKey, parent, P);\r\n        return undefined;\r\n    }\r\n\r\n    // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\r\n    function OrdinaryGetOwnMetadata(MetadataKey: any, O: any, P: string | symbol | undefined): any {\r\n        const metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n        if (IsUndefined(metadataMap)) return undefined;\r\n        return metadataMap.get(MetadataKey);\r\n    }\r\n\r\n    // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\r\n    function OrdinaryDefineOwnMetadata(MetadataKey: any, MetadataValue: any, O: any, P: string | symbol | undefined): void {\r\n        const metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\r\n        metadataMap.set(MetadataKey, MetadataValue);\r\n    }\r\n\r\n    // 3.1.6.1 OrdinaryMetadataKeys(O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\r\n    function OrdinaryMetadataKeys(O: any, P: string | symbol | undefined): any[] {\r\n        const ownKeys = OrdinaryOwnMetadataKeys(O, P);\r\n        const parent = OrdinaryGetPrototypeOf(O);\r\n        if (parent === null) return ownKeys;\r\n        const parentKeys = OrdinaryMetadataKeys(parent, P);\r\n        if (parentKeys.length <= 0) return ownKeys;\r\n        if (ownKeys.length <= 0) return parentKeys;\r\n        const set = new _Set<any>();\r\n        const keys: any[] = [];\r\n        for (const key of ownKeys) {\r\n            const hasKey = set.has(key);\r\n            if (!hasKey) {\r\n                set.add(key);\r\n                keys.push(key);\r\n            }\r\n        }\r\n        for (const key of parentKeys) {\r\n            const hasKey = set.has(key);\r\n            if (!hasKey) {\r\n                set.add(key);\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    }\r\n\r\n    // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\r\n    // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\r\n    function OrdinaryOwnMetadataKeys(O: any, P: string | symbol | undefined): any[] {\r\n        const keys: any[] = [];\r\n        const metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\r\n        if (IsUndefined(metadataMap)) return keys;\r\n        const keysObj = metadataMap.keys();\r\n        const iterator = GetIterator(keysObj);\r\n        let k = 0;\r\n        while (true) {\r\n            const next = IteratorStep(iterator);\r\n            if (!next) {\r\n                keys.length = k;\r\n                return keys;\r\n            }\r\n            const nextValue = IteratorValue(next);\r\n            try {\r\n                keys[k] = nextValue;\r\n            }\r\n            catch (e) {\r\n                try {\r\n                    IteratorClose(iterator);\r\n                }\r\n                finally {\r\n                    throw e;\r\n                }\r\n            }\r\n            k++;\r\n        }\r\n    }\r\n\r\n    // 6 ECMAScript Data Typ0es and Values\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\r\n    function Type(x: any): Tag {\r\n        if (x === null) return Tag.Null;\r\n        switch (typeof x) {\r\n            case \"undefined\": return Tag.Undefined;\r\n            case \"boolean\": return Tag.Boolean;\r\n            case \"string\": return Tag.String;\r\n            case \"symbol\": return Tag.Symbol;\r\n            case \"number\": return Tag.Number;\r\n            case \"object\": return x === null ? Tag.Null : Tag.Object;\r\n            default: return Tag.Object;\r\n        }\r\n    }\r\n\r\n    // 6.1 ECMAScript Language Types\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types\r\n    const enum Tag {\r\n        Undefined,\r\n        Null,\r\n        Boolean,\r\n        String,\r\n        Symbol,\r\n        Number,\r\n        Object\r\n    }\r\n\r\n    // 6.1.1 The Undefined Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\r\n    function IsUndefined(x: any): x is undefined {\r\n        return x === undefined;\r\n    }\r\n\r\n    // 6.1.2 The Null Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\r\n    function IsNull(x: any): x is null {\r\n        return x === null;\r\n    }\r\n\r\n    // 6.1.5 The Symbol Type\r\n    // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\r\n    function IsSymbol(x: any): x is symbol {\r\n        return typeof x === \"symbol\";\r\n    }\r\n\r\n    // 6.1.7 The Object Type\r\n    // https://tc39.github.io/ecma262/#sec-object-type\r\n    function IsObject<T>(x: T | undefined | null | boolean | string | symbol | number): x is T {\r\n        return typeof x === \"object\" ? x !== null : typeof x === \"function\";\r\n    }\r\n\r\n    // 7.1 Type Conversion\r\n    // https://tc39.github.io/ecma262/#sec-type-conversion\r\n\r\n    // 7.1.1 ToPrimitive(input [, PreferredType])\r\n    // https://tc39.github.io/ecma262/#sec-toprimitive\r\n    function ToPrimitive(input: any, PreferredType?: Tag): undefined | null | boolean | string | symbol | number {\r\n        switch (Type(input)) {\r\n            case Tag.Undefined: return input;\r\n            case Tag.Null: return input;\r\n            case Tag.Boolean: return input;\r\n            case Tag.String: return input;\r\n            case Tag.Symbol: return input;\r\n            case Tag.Number: return input;\r\n        }\r\n        const hint: \"string\" | \"number\" | \"default\" = PreferredType === Tag.String ? \"string\" : PreferredType === Tag.Number ? \"number\" : \"default\";\r\n        const exoticToPrim = GetMethod(input, toPrimitiveSymbol);\r\n        if (exoticToPrim !== undefined) {\r\n            const result = exoticToPrim.call(input, hint);\r\n            if (IsObject(result)) throw new TypeError();\r\n            return result;\r\n        }\r\n        return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\r\n    }\r\n\r\n    // 7.1.1.1 OrdinaryToPrimitive(O, hint)\r\n    // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\r\n    function OrdinaryToPrimitive(O: any, hint: \"string\" | \"number\"): undefined | null | boolean | string | symbol | number {\r\n        if (hint === \"string\") {\r\n            const toString = O.toString;\r\n            if (IsCallable(toString)) {\r\n                const result = toString.call(O);\r\n                if (!IsObject(result)) return result;\r\n            }\r\n            const valueOf = O.valueOf;\r\n            if (IsCallable(valueOf)) {\r\n                const result = valueOf.call(O);\r\n                if (!IsObject(result)) return result;\r\n            }\r\n        }\r\n        else {\r\n            const valueOf = O.valueOf;\r\n            if (IsCallable(valueOf)) {\r\n                const result = valueOf.call(O);\r\n                if (!IsObject(result)) return result;\r\n            }\r\n            const toString = O.toString;\r\n            if (IsCallable(toString)) {\r\n                const result = toString.call(O);\r\n                if (!IsObject(result)) return result;\r\n            }\r\n        }\r\n        throw new TypeError();\r\n    }\r\n\r\n    // 7.1.2 ToBoolean(argument)\r\n    // https://tc39.github.io/ecma262/2016/#sec-toboolean\r\n    function ToBoolean(argument: any): boolean {\r\n        return !!argument;\r\n    }\r\n\r\n    // 7.1.12 ToString(argument)\r\n    // https://tc39.github.io/ecma262/#sec-tostring\r\n    function ToString(argument: any): string {\r\n        return \"\" + argument;\r\n    }\r\n\r\n    // 7.1.14 ToPropertyKey(argument)\r\n    // https://tc39.github.io/ecma262/#sec-topropertykey\r\n    function ToPropertyKey(argument: any): string | symbol {\r\n        const key = ToPrimitive(argument, Tag.String);\r\n        if (IsSymbol(key)) return key;\r\n        return ToString(key);\r\n    }\r\n\r\n    // 7.2 Testing and Comparison Operations\r\n    // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\r\n\r\n    // 7.2.2 IsArray(argument)\r\n    // https://tc39.github.io/ecma262/#sec-isarray\r\n    function IsArray(argument: any): argument is any[] {\r\n        return Array.isArray\r\n            ? Array.isArray(argument)\r\n            : argument instanceof Object\r\n                ? argument instanceof Array\r\n                : Object.prototype.toString.call(argument) === \"[object Array]\";\r\n    }\r\n\r\n    // 7.2.3 IsCallable(argument)\r\n    // https://tc39.github.io/ecma262/#sec-iscallable\r\n    function IsCallable(argument: any): argument is Function {\r\n        // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\r\n        return typeof argument === \"function\";\r\n    }\r\n\r\n    // 7.2.4 IsConstructor(argument)\r\n    // https://tc39.github.io/ecma262/#sec-isconstructor\r\n    function IsConstructor(argument: any): argument is Function {\r\n        // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\r\n        return typeof argument === \"function\";\r\n    }\r\n\r\n    // 7.2.7 IsPropertyKey(argument)\r\n    // https://tc39.github.io/ecma262/#sec-ispropertykey\r\n    function IsPropertyKey(argument: any): argument is string | symbol {\r\n        switch (Type(argument)) {\r\n            case Tag.String: return true;\r\n            case Tag.Symbol: return true;\r\n            default: return false;\r\n        }\r\n    }\r\n\r\n    // 7.3 Operations on Objects\r\n    // https://tc39.github.io/ecma262/#sec-operations-on-objects\r\n\r\n    // 7.3.9 GetMethod(V, P)\r\n    // https://tc39.github.io/ecma262/#sec-getmethod\r\n    function GetMethod(V: any, P: any): Function | undefined {\r\n        const func = V[P];\r\n        if (func === undefined || func === null) return undefined;\r\n        if (!IsCallable(func)) throw new TypeError();\r\n        return func;\r\n    }\r\n\r\n    // 7.4 Operations on Iterator Objects\r\n    // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\r\n\r\n    function GetIterator<T>(obj: Iterable<T>): Iterator<T> {\r\n        const method = GetMethod(obj, iteratorSymbol);\r\n        if (!IsCallable(method)) throw new TypeError(); // from Call\r\n        const iterator = method.call(obj);\r\n        if (!IsObject(iterator)) throw new TypeError();\r\n        return iterator;\r\n    }\r\n\r\n    // 7.4.4 IteratorValue(iterResult)\r\n    // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\r\n    function IteratorValue<T>(iterResult: IteratorResult<T>): T {\r\n        return iterResult.value;\r\n    }\r\n\r\n    // 7.4.5 IteratorStep(iterator)\r\n    // https://tc39.github.io/ecma262/#sec-iteratorstep\r\n    function IteratorStep<T>(iterator: Iterator<T>): IteratorResult<T> | false {\r\n        const result = iterator.next();\r\n        return result.done ? false : result;\r\n    }\r\n\r\n    // 7.4.6 IteratorClose(iterator, completion)\r\n    // https://tc39.github.io/ecma262/#sec-iteratorclose\r\n    function IteratorClose<T>(iterator: Iterator<T>) {\r\n        const f = iterator[\"return\"];\r\n        if (f) f.call(iterator);\r\n    }\r\n\r\n    // 9.1 Ordinary Object Internal Methods and Internal Slots\r\n    // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\r\n\r\n    // 9.1.1.1 OrdinaryGetPrototypeOf(O)\r\n    // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\r\n    function OrdinaryGetPrototypeOf(O: any): any {\r\n        const proto = Object.getPrototypeOf(O);\r\n        if (typeof O !== \"function\" || O === functionPrototype) return proto;\r\n\r\n        // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\r\n        // Try to determine the superclass constructor. Compatible implementations\r\n        // must either set __proto__ on a subclass constructor to the superclass constructor,\r\n        // or ensure each class has a valid `constructor` property on its prototype that\r\n        // points back to the constructor.\r\n\r\n        // If this is not the same as Function.[[Prototype]], then this is definately inherited.\r\n        // This is the case when in ES6 or when using __proto__ in a compatible browser.\r\n        if (proto !== functionPrototype) return proto;\r\n\r\n        // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\r\n        const prototype = O.prototype;\r\n        const prototypeProto = prototype && Object.getPrototypeOf(prototype);\r\n        if (prototypeProto == null || prototypeProto === Object.prototype) return proto;\r\n\r\n        // If the constructor was not a function, then we cannot determine the heritage.\r\n        const constructor = prototypeProto.constructor;\r\n        if (typeof constructor !== \"function\") return proto;\r\n\r\n        // If we have some kind of self-reference, then we cannot determine the heritage.\r\n        if (constructor === O) return proto;\r\n\r\n        // we have a pretty good guess at the heritage.\r\n        return constructor;\r\n    }\r\n\r\n    // naive Map shim\r\n    function CreateMapPolyfill(): MapConstructor {\r\n        const cacheSentinel = {};\r\n        const arraySentinel: any[] = [];\r\n\r\n        class MapIterator<K, V, R extends (K | V | [K, V])> implements IterableIterator<R> {\r\n            private _keys: K[];\r\n            private _values: V[];\r\n            private _index = 0;\r\n            private _selector: (key: K, value: V) => R;\r\n            constructor(keys: K[], values: V[], selector: (key: K, value: V) => R) {\r\n                this._keys = keys;\r\n                this._values = values;\r\n                this._selector = selector;\r\n            }\r\n            \"@@iterator\"() { return this; }\r\n            [iteratorSymbol]() { return this; }\r\n            next(): IteratorResult<R> {\r\n                const index = this._index;\r\n                if (index >= 0 && index < this._keys.length) {\r\n                    const result = this._selector(this._keys[index], this._values[index]);\r\n                    if (index + 1 >= this._keys.length) {\r\n                        this._index = -1;\r\n                        this._keys = arraySentinel;\r\n                        this._values = arraySentinel;\r\n                    }\r\n                    else {\r\n                        this._index++;\r\n                    }\r\n                    return { value: result, done: false };\r\n                }\r\n                return { value: <never>undefined, done: true };\r\n            }\r\n            throw(error: any): IteratorResult<R> {\r\n                if (this._index >= 0) {\r\n                    this._index = -1;\r\n                    this._keys = arraySentinel;\r\n                    this._values = arraySentinel;\r\n                }\r\n                throw error;\r\n            }\r\n            return(value?: R): IteratorResult<R> {\r\n                if (this._index >= 0) {\r\n                    this._index = -1;\r\n                    this._keys = arraySentinel;\r\n                    this._values = arraySentinel;\r\n                }\r\n                return { value: <never>value, done: true };\r\n            }\r\n        }\r\n\r\n        return class Map<K, V> {\r\n            private _keys: K[] = [];\r\n            private _values: (V | undefined)[] = [];\r\n            private _cacheKey = cacheSentinel;\r\n            private _cacheIndex = -2;\r\n            get size() { return this._keys.length; }\r\n            has(key: K): boolean { return this._find(key, /*insert*/ false) >= 0; }\r\n            get(key: K): V | undefined {\r\n                const index = this._find(key, /*insert*/ false);\r\n                return index >= 0 ? this._values[index] : undefined;\r\n            }\r\n            set(key: K, value: V): this {\r\n                const index = this._find(key, /*insert*/ true);\r\n                this._values[index] = value;\r\n                return this;\r\n            }\r\n            delete(key: K): boolean {\r\n                const index = this._find(key, /*insert*/ false);\r\n                if (index >= 0) {\r\n                    const size = this._keys.length;\r\n                    for (let i = index + 1; i < size; i++) {\r\n                        this._keys[i - 1] = this._keys[i];\r\n                        this._values[i - 1] = this._values[i];\r\n                    }\r\n                    this._keys.length--;\r\n                    this._values.length--;\r\n                    if (key === this._cacheKey) {\r\n                        this._cacheKey = cacheSentinel;\r\n                        this._cacheIndex = -2;\r\n                    }\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            clear(): void {\r\n                this._keys.length = 0;\r\n                this._values.length = 0;\r\n                this._cacheKey = cacheSentinel;\r\n                this._cacheIndex = -2;\r\n            }\r\n            keys() { return new MapIterator(this._keys, this._values, getKey); }\r\n            values() { return new MapIterator(this._keys, this._values, getValue); }\r\n            entries() { return new MapIterator(this._keys, this._values, getEntry); }\r\n            \"@@iterator\"() { return this.entries(); }\r\n            [iteratorSymbol]() { return this.entries(); }\r\n            private _find(key: K, insert?: boolean): number {\r\n                if (this._cacheKey !== key) {\r\n                    this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\r\n                }\r\n                if (this._cacheIndex < 0 && insert) {\r\n                    this._cacheIndex = this._keys.length;\r\n                    this._keys.push(key);\r\n                    this._values.push(undefined);\r\n                }\r\n                return this._cacheIndex;\r\n            }\r\n        };\r\n\r\n        function getKey<K, V>(key: K, _: V) {\r\n            return key;\r\n        }\r\n\r\n        function getValue<K, V>(_: K, value: V) {\r\n            return value;\r\n        }\r\n\r\n        function getEntry<K, V>(key: K, value: V) {\r\n            return [key, value] as [K, V];\r\n        }\r\n    }\r\n\r\n    // naive Set shim\r\n    function CreateSetPolyfill(): SetConstructor {\r\n        return class Set<T> {\r\n            private _map = new _Map<any, any>();\r\n            get size() { return this._map.size; }\r\n            has(value: T): boolean { return this._map.has(value); }\r\n            add(value: T): Set<T> { return this._map.set(value, value), this; }\r\n            delete(value: T): boolean { return this._map.delete(value); }\r\n            clear(): void { this._map.clear(); }\r\n            keys() { return this._map.keys(); }\r\n            values() { return this._map.values(); }\r\n            entries() { return this._map.entries(); }\r\n            \"@@iterator\"() { return this.keys(); }\r\n            [iteratorSymbol]() { return this.keys(); }\r\n        };\r\n    }\r\n\r\n    // naive WeakMap shim\r\n    function CreateWeakMapPolyfill(): WeakMapConstructor {\r\n        const UUID_SIZE = 16;\r\n        const keys = HashMap.create<boolean>();\r\n        const rootKey = CreateUniqueKey();\r\n        return class WeakMap<K, V> {\r\n            private _key = CreateUniqueKey();\r\n            has(target: K): boolean {\r\n                const table = GetOrCreateWeakMapTable<K>(target, /*create*/ false);\r\n                return table !== undefined ? HashMap.has(table, this._key) : false;\r\n            }\r\n            get(target: K): V {\r\n                const table = GetOrCreateWeakMapTable<K>(target, /*create*/ false);\r\n                return table !== undefined ? HashMap.get(table, this._key) : undefined;\r\n            }\r\n            set(target: K, value: V): WeakMap<K, V> {\r\n                const table = GetOrCreateWeakMapTable<K>(target, /*create*/ true);\r\n                table[this._key] = value;\r\n                return this;\r\n            }\r\n            delete(target: K): boolean {\r\n                const table = GetOrCreateWeakMapTable<K>(target, /*create*/ false);\r\n                return table !== undefined ? delete table[this._key] : false;\r\n            }\r\n            clear(): void {\r\n                // NOTE: not a real clear, just makes the previous data unreachable\r\n                this._key = CreateUniqueKey();\r\n            }\r\n        };\r\n\r\n        function CreateUniqueKey(): string {\r\n            let key: string;\r\n            do key = \"@@WeakMap@@\" + CreateUUID();\r\n            while (HashMap.has(keys, key));\r\n            keys[key] = true;\r\n            return key;\r\n        }\r\n\r\n        function GetOrCreateWeakMapTable<K>(target: K, create: true): HashMap<any>;\r\n        function GetOrCreateWeakMapTable<K>(target: K, create: false): HashMap<any> | undefined;\r\n        function GetOrCreateWeakMapTable<K>(target: K, create: boolean): HashMap<any> | undefined {\r\n            if (!hasOwn.call(target, rootKey)) {\r\n                if (!create) return undefined;\r\n                Object.defineProperty(target, rootKey, { value: HashMap.create<any>() });\r\n            }\r\n            return (<any>target)[rootKey];\r\n        }\r\n\r\n        function FillRandomBytes(buffer: BufferLike, size: number): BufferLike {\r\n            for (let i = 0; i < size; ++i) buffer[i] = Math.random() * 0xff | 0;\r\n            return buffer;\r\n        }\r\n\r\n        function GenRandomBytes(size: number): BufferLike {\r\n            if (typeof Uint8Array === \"function\") {\r\n                if (typeof crypto !== \"undefined\") return crypto.getRandomValues(new Uint8Array(size)) as Uint8Array;\r\n                if (typeof msCrypto !== \"undefined\") return msCrypto.getRandomValues(new Uint8Array(size)) as Uint8Array;\r\n                return FillRandomBytes(new Uint8Array(size), size);\r\n            }\r\n            return FillRandomBytes(new Array(size), size);\r\n        }\r\n\r\n        function CreateUUID() {\r\n            const data = GenRandomBytes(UUID_SIZE);\r\n            // mark as random - RFC 4122 § 4.4\r\n            data[6] = data[6] & 0x4f | 0x40;\r\n            data[8] = data[8] & 0xbf | 0x80;\r\n            let result = \"\";\r\n            for (let offset = 0; offset < UUID_SIZE; ++offset) {\r\n                const byte = data[offset];\r\n                if (offset === 4 || offset === 6 || offset === 8) result += \"-\";\r\n                if (byte < 16) result += \"0\";\r\n                result += byte.toString(16).toLowerCase();\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n\r\n    // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\r\n    function MakeDictionary<T>(obj: T): T {\r\n        (<any>obj).__ = undefined;\r\n        delete (<any>obj).__;\r\n        return obj;\r\n    }\r\n\r\n    // patch global Reflect\r\n    (function (__global: any) {\r\n        if (typeof __global.Reflect !== \"undefined\") {\r\n            if (__global.Reflect !== Reflect) {\r\n                for (const p in Reflect) {\r\n                    if (hasOwn.call(Reflect, p)) {\r\n                        __global.Reflect[p] = (<any>Reflect)[p];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            __global.Reflect = Reflect;\r\n        }\r\n    })(\r\n        typeof global !== \"undefined\" ? global :\r\n            typeof self !== \"undefined\" ? self :\r\n                Function(\"return this;\")());\r\n}","import \"reflect-metadata\"\nimport { predefine, define, attr, prop, Record, Store, Collection } from '../../../lib'\nimport { expect } from 'chai'\n\ndescribe( 'Record', () =>{\n    it( \"can be instantiated\", ()=>{\n        new Record();\n    } );\n\n    describe( 'Subclass', ()=>{\n        it( \"attaches properties to prototype\", ()=>{\n            @define( {\n                a : 'a'\n            } )\n            class M extends Record {\n                a : string\n            }\n\n            expect( M.prototype.a ).to.eql( 'a' );\n        } );\n    } );\n\n    describe( \"Attribute spec\", () =>{\n        describe( '...as constructors', () =>{\n            @define class M extends Record {\n                @attr( String ) s\n                @attr( Number ) n\n                @attr( Boolean ) b\n                @attr( Object ) o\n                @attr( Array ) a\n                @attr d : Date\n            }\n\n            it( \"invokes constructor to create defaults\", () =>{\n                const m = new M();\n                expect( m.s ).to.equal( '' );\n                expect( m.n ).to.equal( 0 );\n                expect( m.b ).to.equal( false );\n                expect( m.o ).to.eql( {} );\n                expect( m.a ).to.eql( [] );\n                expect( m.d ).to.be.instanceof( Date );\n            } );\n\n            it( \"convert values to defined type in 'new'\", () =>{\n                const m = new M( {\n                    s : 55,\n                    n : \"1\",\n                    b : 'not bool',\n                    o : \"not an object\",\n                    a : \"not an array\",\n                    d : 678678678\n                } );\n\n                expect( m.s ).to.equal( '55' );\n                expect( m.n ).to.equal( 1 );\n                expect( m.b ).to.equal( true );\n                expect( m.o ).to.be.an.instanceOf( Object )\n                expect( m.a ).to.eql( [] );\n                expect( m.d ).to.be.instanceof( Date );\n            } );\n\n            it( \"convert values to defined types on assignment\", () =>{\n                const m = new M();\n\n                m.s = 55 as any;\n                m.n = \"1\" as any;\n                m.b = 'not bool' as any;\n                m.o = \"not an object\" as any;\n                m.a = \"not an array\" as any;\n                m.d = 678678678  as any;\n\n                expect( m.s ).to.equal( '55' );\n                expect( m.n ).to.equal( 1 );\n                expect( m.b ).to.equal( true );\n                expect( m.o ).to.be.an.instanceOf( Object );\n                expect( m.a ).to.eql( [] );\n                expect( m.d ).to.be.instanceof( Date );\n            } );\n\n            it( \"convert values to defined types on set\", () =>{\n                const m = new M();\n\n                m.set({\n                    s : 55,\n                    n : \"1\",\n                    b : 'not bool',\n                    o : \"not an object\",\n                    a : \"not an array\",\n                    d : 678678678\n                });\n\n                expect( m.s ).to.equal( '55' );\n                expect( m.n ).to.equal( 1 );\n                expect( m.b ).to.equal( true );\n                expect( m.o ).to.be.an.instanceOf( Object );\n                expect( m.a ).to.eql( [] );\n                expect( m.d ).to.be.instanceof( Date );\n            } );\n        } );\n        describe( '...as default values', () =>{\n            @define class M extends Record {\n                @attr s : string = 'b'\n                @attr n : number = 1\n                @attr b : boolean = true\n                @attr o : object = {}\n                @attr a : string[] = []\n                @attr d : Date\n            }\n\n            it( \"accepts values as type spec\", () =>{\n                const m = new M();\n                expect( m.s ).to.equal( 'b' );\n                expect( m.n ).to.equal( 1 );\n                expect( m.b ).to.equal( true );\n\n                expect( m.o ).to.not.equal( {} );\n                expect( m.o ).to.be.an.instanceOf( Object );\n\n                expect( m.a ).to.not.equal( [] );\n                expect( m.a ).to.eql( [] );\n\n                expect( m.d ).to.be.instanceof( Date );\n            } );\n\n            it( \"infers types from values\", () =>{\n                const m = new M(),\n                      { _attributes } = m;\n\n                expect( _attributes.s.type ).to.equal( String );\n                expect( _attributes.n.type ).to.equal( Number );\n                expect( _attributes.b.type ).to.equal( Boolean );\n                expect( _attributes.o.type ).to.equal( Object );\n                expect( _attributes.a.type ).to.equal( Array );\n                expect( _attributes.d.type ).to.equal( Date );\n            } );\n        } );\n        describe( '...as constructors with values', () =>{\n            it( \"converts default values to defined types\", () =>{\n                @define( {\n                    attributes : {\n                        s : String.value( 55 ),\n                        n : Number.value( \"1\" ),\n                        b : Boolean.value( \"some\" ),\n                        o : Object.value( \"not an object\" ),\n                        a : Array.value( \"not an array\" ),\n                        d : Date.value( 22222 )\n                    }\n                } )\n                class M extends Record {\n                    s : string\n                    n : number\n                    b : boolean\n                    o : object\n                    a : any[]\n                    d : Date                    \n                }\n\n                const m = new M();\n\n                expect( m.s ).to.equal( '55' );\n                expect( m.n ).to.equal( 1 );\n                expect( m.b ).to.equal( true );\n                expect( m.o ).to.be.an.instanceOf( Object );\n                expect( m.a ).to.eql( [] );\n                expect( m.d ).to.be.instanceof( Date );\n            } );\n\n            it( \"accepts null as default value\", () =>{\n                @define( {\n                    attributes : {\n                        s : String.value( null ),\n                        n : Number.value( null ),\n                        b : Boolean.value( null ),\n                        o : Object.value( null ),\n                        a : Array.value( null ),\n                        d : Date.value( null )\n                    }\n                } )\n                class M extends Record {\n                    s : string\n                    n : number\n                    b : boolean\n                    o : object\n                    a : any[]\n                    d : Date                    \n                }\n\n                const m = new M();\n\n                expect( m.s ).to.equal( null );\n                expect( m.n ).to.equal( null);\n                expect( m.b ).to.equal( null );\n                expect( m.o ).to.eql( null );\n                expect( m.a ).to.eql( null );\n                expect( m.d ).to.eql( null );\n            } );\n        } );\n    });\n\n    describe( \"Record's collection\", () =>{\n        it( \"is defined in the base Record\", ()=>{\n            expect( Record.Collection ).to.be.a( 'function' );\n            expect( Record.Collection.prototype.model ).to.eql( Record );\n        } );\n\n        it( \"is created on Record's extension\", () =>{\n            @define\n            class M extends Record {\n            }\n\n            const { prototype } = M.Collection;\n            expect( prototype ).to.be.instanceof( Record.Collection );\n            expect( prototype.model ).to.eql( M );\n        } );\n\n        it( \"takes properties from .collection\", () =>{\n            @define( {\n                collection : {\n                    a : 'a'\n                }\n            } )\n            class M extends Record {\n            }\n\n            expect( ( M as any ).Collection.prototype.a ).to.eql( 'a' );\n        } );\n\n        it( \"can be defined separately\", () =>{\n            @define( {\n                a : 'a'\n            } )\n            class C extends Collection<M> {\n                a : string\n            }\n\n            @define\n            class M extends Record {\n                static Collection = C as any; // Do something with it.\n            }\n\n            expect( M.Collection ).to.equal( C );\n            const { prototype } = M.Collection as any;\n            expect( prototype ).to.be.instanceof( Record.Collection );\n            expect( prototype.a ).to.eql( 'a' );\n            expect( prototype.model ).to.eql( M );\n        } );\n    } );\n\n    describe( 'Attribute types', () =>{\n        @define class Test extends Record {\n            @attr( Function.value( null ) ) fun : Function\n        }\n\n        it( 'Supports function type', ()=>{\n            const t = new Test();\n            const t2 = t.clone();\n\n            console.log( '!!!', t._attributes );\n            expect( t.fun ).to.eql( t2.fun );\n        } );\n    });\n\n    describe( 'Record pre-definition', ()=>{\n        @define\n        class M1 extends Record {\n        }\n\n        @predefine class M2 extends Record {}\n        M2.define();\n\n        it( 'predefine collection types', ()=>{\n            expect( M1.Collection ).to.be.instanceOf( Function );\n            expect( M2.Collection ).to.be.instanceOf( Function );\n        } );\n\n        it( \"can't be instantiated\", ()=>{\n            new M1(); //should throw\n        } );\n\n        it( 'support forward declaration', () =>{\n            @define\n            class M extends Record {\n                a : string\n            }\n\n            expect( M.Collection ).to.be.a( 'function' );\n            expect( M.Collection.prototype.model ).to.eql( M );\n\n            M.define( {\n                a : 'a'\n            } );\n\n            expect( M.prototype.a ).to.eql( 'a' );\n        } );\n\n        it( 'can be defined', ()=>{\n            M1.define( {\n                a          : 'first',\n                collection : {\n                    b : 'second'\n                }\n            } );\n\n            M2.define( {\n                a : 'first'\n            } );\n\n            M2.Collection.define( {\n                b : 'second'\n            } );\n        } );\n    } );\n} );","import { Model, Transactional, ChainableAttributeSpec } from '../../../lib'\n\nexport const SecondsInterval = Model.extend({\n    units: [\n        'seconds',\n        'minutes',\n        'hours',\n        'days',\n        'weeks',\n        'months',\n        'years'\n    ],\n\n    defaults: {\n        value: 1,\n        interval: String.value('months')\n    },\n\n    properties: {\n        seconds: function() { return this.getUnitValue(1) },\n        minutes: function() { return this.getUnitValue(60) },\n        hours: function() { return this.getUnitValue(3600) },\n        days: function() { return this.getUnitValue(86400) },\n        weeks: function() { return this.getUnitValue(604800) },\n        months: function() { return this.getUnitValue(2628000) },\n        years: function() { return this.getUnitValue(31536000) }\n    },\n\n    getUnitValue( value ){\n        return value;\n    },\n\n    parse: function (data) {\n        var res = {\n            value: 1,\n            interval: 'months'\n        };\n\n        data = typeof data === 'object' ? 0 : data;\n\n        for( var i = this.units.length; i > 0; i-- ){\n            let l = this.units[i-1];\n            if ( data % this[l] == 0 ) {\n                res.value = Math.floor( data / this[l]);\n                res.interval = l;\n                return res;\n            }\n        }\n\n        return res;\n    },\n\n    toInteger: function () {\n        return this.value * this[this.interval];\n    },\n\n    toJSON: function () {\n        return this.toInteger();\n    },\n\n    getUnits(){\n        let units = {}\n        Object.keys( this.units ).forEach( name => {\n            units[name] = this[name];\n        });\n\n        return units;\n    }\n});\n    \nexport const MinutesInterval = SecondsInterval.extend({\n    units: [\n        'minutes',\n        'hours',\n        'days',\n        'weeks',\n        'months',\n        'years'\n    ],\n\n    getUnitValue( value ){\n        return value / 60;\n    },\n});","import \"reflect-metadata\"\nimport { predefine, define, attr, prop, Record, Store, Collection } from '../../../lib'\nimport { expect } from 'chai'\nimport { MinutesInterval } from './common'\n\ndescribe( 'Bugs from Volicon Observer', () =>{\n    describe( 'Attribute change watcher', () =>{\n        it( 'works in base class and subclass', () => {\n            let calls = [];\n\n            @define class Base extends Record {\n                @attr( String.has.watcher( x => calls.push( 'inherited' ) ) )\n                inherited : string;\n\n                @attr( String.has.watcher( 'onNamedWatcher' ) )\n                namedWatcher : string;\n\n                @attr( String.has.watcher( x => calls.push( 'base' ) ) )\n                overriden : string;\n            }\n\n            @define class Subclass extends Base {\n                @attr( String.has.watcher( x => calls.push( 'added' ) ) )\n                added : string;\n\n                @attr( String.has.watcher( x => calls.push( 'subclass') ) )\n                overriden : string;\n\n                onNamedWatcher(){\n                    calls.push( 'named' );\n                }\n            }\n\n            const subclass = new Subclass();\n            subclass.inherited = \"a\";\n            subclass.added = \"b\";\n            subclass.overriden = \"b\";\n            subclass.namedWatcher = \"t\";\n\n            expect( calls ).to.eql( [ 'inherited', 'added', 'subclass', 'base', 'named' ] );\n        } );\n\n    } );\n\n    describe( 'Validation', () => {\n        it( 'performs validation if collection item is changed', ()=>{\n            var BitrateModel = Record.extend({\n                defaults: {\n                    bitrate: Number.value(512)\n                },\n            \n                properties: {\n                    bitrates: function () {\n                        const available_bitrate = [128, 256, 384, 450, 512, 768, 896, 1000, 1500, 2000, 2500, 3000, 4500, 6000, 6500, 9000, 12000, 15000];\n            \n                        if (available_bitrate.indexOf(this.bitrate) === -1) {\n                            available_bitrate.push(this.bitrate);\n                        }\n                        return available_bitrate.sort(function (a, b) {\n                            return a - b\n                        });\n                    }\n                },\n            \n            \n                initialize: function (options) {\n                    Record.prototype.initialize.apply(this, arguments);\n            \n                    /*\n                     this.listenTo( this, 'change:bitrate', function( model, value ){\n                     value = Number( value );\n                     console.log( 'change bitrate', value );\n                     });\n                     */\n                },\n            \n                parse( data ){\n                    return { bitrate: data / 1000 };\n                },\n            \n                toJSON: function () {\n                    var json = Record.prototype.toJSON.apply(this, arguments),\n                        bitrate = json.bitrate * 1000;\n                    /* convert to bps from kbps*/\n            \n                    return bitrate;\n                }\n            });\n\n            const SubEncoder : any = Record.extend({\n                defaults :{\n                    Bitrate: BitrateModel,\n                    HistoryDepth: MinutesInterval.has.value( 43800 ),\n                    BitrateAsString: null,\n                    ResolutionHeight: Number,\n                    ResolutionWidth: Number,\n                    resolution: String.has.toJSON(false)\n                },\n    \n               collection : {\n                    get : function( a ){\n                        return Collection.prototype.get.apply( this, arguments ) || this.models[ a ];\n                    },\n    \n                   comparator: function( model1, model2 ){\n                        if( model1.Bitrate.bitrate > model2.Bitrate.bitrate ){\n                            return 1;\n                        }else if( model1.Bitrate.bitrate < model2.Bitrate.bitrate ){\n                            return -1;\n                        }else{\n                            if( model1.ResolutionWidth > model2.ResolutionWidth ){\n                                return 1;\n                            }else if( model1.ResolutionWidth < model2.ResolutionWidth ){\n                                return -1;\n                            }else{\n                                if( model1.ResolutionHeight > model2.ResolutionHeight ){\n                                    return 1;\n                                }else if( model1.ResolutionHeight < model2.ResolutionHeight ){\n                                    return -1;\n                                }else{\n                                    return 0;\n                                }\n                            }\n                        }\n                    },\n                    \n                   localEvents : {\n                        change(){\n                            this.sort();\n                        }\n                    }\n                }\n            });\n            \n            const Placeholder = Record.extend({\n                attributes : {\n                    subEncoders : SubEncoder.Collection.has.check( function(x){\n                        console.log( 'SubEncoders', this, x );\n                        return x.length > 0;\n                    },'ccccc')\n                }\n            });\n\n            const p = new Placeholder(),\n                { subEncoders } = p;\n\n            expect( p.isValid() ).to.be.false;\n            expect( subEncoders.isValid() ).to.be.true;\n            subEncoders.add( {} );\n\n            expect( p._validationError ).to.be.undefined;\n            expect( p.isValid() ).to.be.true;\n\n            subEncoders.first().HistoryDepth.value = 2;\n\n            expect( p._validationError ).to.be.undefined;\n            expect( p.isValid() ).to.be.true;\n            expect( subEncoders.isValid() ).to.be.true;\n            expect( p._validationError ).not.to.be.undefined;\n        } );\n    });\n\n    describe( 'assignFrom', ()=>{\n        it( 'copy the value if the target is null', () =>{\n            @define class Inner extends Record {\n                @attr name : string\n            }\n    \n            @define class Test extends Record {\n                @attr( Inner.value( null ) ) inner : Inner;\n            }\n    \n            const target = new Test(),\n                source = new Test({ inner : { name : \"ron\" } } );\n    \n            expect( target.inner ).to.be.null;\n    \n            target.assignFrom( source );\n    \n            expect( target.inner !== source.inner ).to.be.true;\n            console.log( target.inner.cid, source.inner.cid );\n        });\n    });\n} );","import { IOEndpoint, IOPromise, createIOPromise } from '../io-tools'\n\nexport type Index = ( number | string )[];\n\nexport function create( init = [], delay = 50 ){\n    return new MemoryEndpoint( init, delay );\n}\n\nexport { create as memoryIO };\n\nexport class MemoryEndpoint implements IOEndpoint {\n    resolve( value ){\n        return createIOPromise( ( resolve, reject ) => {\n            setTimeout( () => resolve( value ), this.delay );\n        });\n    }\n    \n    reject( value ){\n        return createIOPromise( ( resolve, reject ) => {\n            setTimeout( () => reject( value ), this.delay );\n        });\n    }\n\n    constructor( init : object[], public delay : number ){\n        for( let obj of init ){\n            this.create( obj, {} );\n        }\n    }\n\n    index : Index = [ 0 ];\n    items = {};\n\n    generateId( a_id ){\n        // Update index counter...\n        const id = Number( a_id );\n        if( !isNaN( id ) ){\n            this.index[ 0 ] = Math.max( this.index[ 0 ] as number, id );\n        }\n\n        // Return id...\n        return a_id || String( ( this.index[ 0 ] as number ) ++ );\n    }\n\n    create( json, options ) {\n        const id = json.id = this.generateId( json.id );\n        this.index.push( id );\n        this.items[ id ] = json;\n        return this.resolve({ id });\n    }\n\n    update( id, json, options ) {\n        this.items[ id ] = json;\n        return this.resolve( {} );\n    }\n\n    read( id, options ){\n        const existing = this.items[ id ];\n        return existing ?\n            this.resolve( existing ) : \n            this.reject( \"Not found\" );\n    }\n\n    destroy( id, options ){\n        const existing = this.items[ id ];\n        if( existing ){\n            delete this.items[ id ];\n            this.index = this.index.filter( x => x !== id );\n            return this.resolve( {} );\n        }\n        else{\n            return this.reject( \"Not found\" );\n        }\n    }\n\n    list( options? : object ) {\n        return this.resolve( this.index.slice( 1 ).map( id => this.items[ id ]) );\n    }\n\n    subscribe( events ) : any {}\n    unsubscribe( events) : any {}\n}","import { IOEndpoint, IOOptions, IOPromise, createIOPromise } from '../io-tools'\n\nexport function create(){\n    return new AttributesEndpoint();\n}\n\nexport { create as attributesIO };\n\nexport class AttributesEndpoint implements IOEndpoint {\n    create( json, options : IOOptions ) : IOPromise<any> {\n        throw new Error( 'Method is not supported.' );        \n    }\n\n    update( id, json, options : IOOptions ) : IOPromise<any> {\n        throw new Error( 'Method is not supported.' );        \n    }\n\n    read( id, options : IOOptions, record ) : IOPromise<any> {\n        const names = record.keys().filter( name => record[ name ] && record[ name ].fetch ),\n            promises = names.map( name => record[ name ].fetch( options ) ),\n            promise : IOPromise<any> = Promise.all( promises ).then( () => {} );\n\n        promise.abort = function(){\n            promises.forEach( x => x.abort && x.abort() );\n        }\n\n        return promise;\n    }\n\n    destroy( id, options : IOOptions ) : IOPromise<any> {\n        throw new Error( 'Method is not supported.' );        \n    }\n\n    list( options? : IOOptions ) : IOPromise<any> {\n        throw new Error( 'Method is not supported.' );\n    }\n\n    subscribe( events ) : any {}\n    unsubscribe( events) : any {}\n}\n\ndeclare var Promise;","import { IOEndpoint, IOOptions, IOPromise, createIOPromise } from '../io-tools'\n\nexport type Index = number[];\n\nexport function create( key : string ){\n    return new LocalStorageEndpoint( key );\n}\n\nexport { create as localStorageIO }\n\nexport class LocalStorageEndpoint implements IOEndpoint {\n    constructor( public key : string ){\n    }\n\n    resolve( value ){\n        return createIOPromise( ( resolve, reject ) => {\n            setTimeout( () =>{\n                resolve( value )\n            }, 0 );\n        });\n    }\n    \n    reject( value ){\n        return createIOPromise( ( resolve, reject ) => {\n            setTimeout( () => reject( value ), 0 );\n        });\n    }\n\n    create( json, options : IOOptions ) {\n        const { index } = this;\n        index.push( json.id = String( ( index[ 0 ] as number )++ ) );\n        this.index = index;\n        this.set( json );\n        return this.resolve({ id : json.id });\n    }\n\n    set( json ){\n        localStorage.setItem( this.key + '#' + json.id, JSON.stringify( json ) );\n    }\n\n    get( id ){\n        return JSON.parse( localStorage.getItem( this.key + '#' + id ) );\n    }\n\n    update( id, json, options : IOOptions ) {\n        json.id = id;\n        this.set( json );\n        return this.resolve( {} );\n    }\n\n    read( id, options : IOOptions ){\n        const existing = this.get( id );\n        return existing ?\n            this.resolve( existing ) : \n            this.reject( \"Not found\" );\n    }\n\n    destroy( id, options : IOOptions ){\n        const existing = this.get( id );\n        if( existing ){\n            localStorage.removeItem( this.key + '#' + id );\n            this.index = this.index.filter( x => x !== id );\n            return this.resolve( {} );\n        }\n        else{\n            return this.reject( \"Not found\" );\n        }\n    }\n\n    get index() : ( string | number )[]{\n        return JSON.parse( localStorage.getItem( this.key ) ) || [ 0 ];\n    }\n\n    set index( x ){\n        localStorage.setItem( this.key, JSON.stringify( x ) );\n    }\n\n    list( options? : IOOptions ) {\n        const { index } = this; \n        return this.resolve( this.index.slice( 1 ).map( id => this.get( id ) ) );\n    }\n\n    subscribe( events ) : any {}\n    unsubscribe( events) : any {}\n}","import \"reflect-metadata\"\nimport { predefine, define, attr, prop, Record, Store, Collection } from '../../../lib'\nimport { expect } from 'chai'\nimport { memoryIO } from '../../../lib/endpoints/memory'\nimport { attributesIO } from '../../../lib/endpoints/attributes'\nimport { localStorageIO } from '../../../lib/endpoints/localStorage'\n\ndescribe( 'IO', function(){\n    describe( 'memory endpoint', () => {\n        const testData = [\n            { name : \"John\" }\n        ];\n    \n        @define class User extends Record {\n            static endpoint = memoryIO( testData );\n    \n            @attr name : string\n        }\n    \n        it( 'loads the test data', done => {\n            const users = new User.Collection();\n            users.fetch()\n                .then( () => {\n                    expect( users.length ).to.eql( 1 );\n                    expect( ( users.first() as any ).name ).to.eql( 'John' );\n                    done();\n                });\n        });\n        \n        it( 'create', done =>{\n            const x = new User({ name : \"test\" });\n            x.save().then( () => {\n                expect( x.id ).to.eql( \"1\" );\n                done();\n            });\n        });\n    \n        it( 'read', done => {\n            const x = new User({ id : \"1\" });\n            x.fetch().then( () => {\n                expect( x.name ).to.eql( \"test\" );\n                done();\n            });\n        });\n    \n        it( 'update', done => {\n            const x = new User({ id : \"1\" });\n            x.fetch()\n                .then( () => {\n                    x.name = \"Mike\";\n                    return x.save();\n                })\n                .then( () => {\n                    const y = new User({ id : \"1\" });\n                    return y.fetch();\n                })\n                .then( y => {\n                    expect( y.name ).to.eql( 'Mike' );\n                    done();\n                });\n        });\n    \n        it( 'list', done => {\n            const users = new User.Collection();\n            users.fetch()\n                .then( () =>{\n                    expect( users.length ).to.eql( 2 );\n                    expect( ( users.first() as any ).name ).to.eql( \"John\" );\n                    expect( ( users.last() as any ).name ).to.eql( \"Mike\" );\n                    done();\n                });\n        });\n    \n        it( \"destroy\", done => {\n            const x = new User({ id : \"1\" });\n            x.destroy()\n                .then( () => {\n                    const users = new User.Collection();\n                    return users.fetch();\n                })\n                .then( users => {\n                    expect( users.length ).to.eql( 1 );\n                    expect( users.first().name ).to.eql( \"John\" );\n                    done();\n                });\n        });\n    });\n\n    it( 'can override endpoint with .has.endpoint', done =>{\n        @define class NoEndpoint extends Record {\n            static attributes = {\n                type : 'no endpoint'\n            }\n        }\n\n        @define class HasEndpoint extends Record {\n            static endpoint = memoryIO([{ id : 666 }]);\n\n            static attributes = {\n                type : 'has endpoint'\n            }\n        }\n\n        @define class TestStore extends Store {\n            static endpoint = attributesIO();\n            static attributes = {\n                a : NoEndpoint.Collection.has.endpoint( memoryIO([{ id : \"777\" }]) ),\n                b : HasEndpoint.Collection,\n                c : HasEndpoint.Collection.has.endpoint( memoryIO([{ id : \"555\" }]) )\n            }\n\n            a;\n            b;\n            c;\n        }\n\n        const s = new TestStore();\n        s.fetch().then( () => {\n            expect( s.a.first().id ).to.eql( \"777\" );\n            expect( s.b.first().id ).to.eql( 666 );\n            expect( s.c.first().id ).to.eql( \"555\" );\n\n            done();\n        });\n    });\n\n    if( typeof localStorage !== 'undefined') describe( 'localStorage endpoint', testEndpoint( localStorageIO( \"/test\" ) ));\n});\n\nfunction testEndpoint( endpoint ){\n    return () =>{\n\n        @define class User extends Record {\n            static endpoint = endpoint;\n    \n            @attr name : string\n        }\n\n        let generatedId;\n        \n        it( 'create', done =>{\n            const x = new User({ name : \"test\" });\n            x.save().then( () => {\n                generatedId = x.id;\n                expect( x.id ).to.be.not.empty;\n                done();\n            });\n        });\n    \n        it( 'read', done => {\n            const x = new User({ id : generatedId });\n            x.fetch().then( () => {\n                expect( x.name ).to.eql( \"test\" );\n                done();\n            });\n        });\n    \n        it( 'update', done => {\n            const x = new User({ id : generatedId });\n            x.fetch()\n                .then( () => {\n                    x.name = \"Mike\";\n                    return x.save();\n                })\n                .then( () => {\n                    const y = new User({ id : generatedId });\n                    return y.fetch();\n                })\n                .then( y => {\n                    expect( y.name ).to.eql( 'Mike' );\n                    done();\n                });\n        });\n    \n        it( 'list', done => {\n            const users = new User.Collection();\n            users.fetch()\n                .then( () =>{\n                    expect( users.length ).to.eql( 1 );\n                    expect( ( users.last() as any ).name ).to.eql( \"Mike\" );\n                    done();\n                });\n        });\n    \n        it( \"destroy\", done => {\n            const x = new User({ id : generatedId });\n            x.destroy()\n                .then( () => {\n                    const users = new User.Collection();\n                    return users.fetch();\n                })\n                .then( users => {\n                    expect( users.length ).to.eql( 0 );\n                    done();\n                });\n        });\n    }\n}"],"names":["tslib_1.__extends","eventSplitter","on","off","trigger5","trigger3","trigger2","EventHandler","_once","once","tools.assign","tools.log","commit","begin","markAsDirty","notEqual","assign","tools.isValidJSON","free","aquire","_.transform","_.defaults","eventsApi.EventMap","isEmpty","log","keys","defaults","_reallocate","tslib_1.__assign","tools.notEqual","hasProperty","getPathInfo","flag","global","type","AssertionError","getName","inspect","getActual","objDisplay","isProxyEnabled","chai","transferFlags","addLengthGuard","proxify","getOwnEnumerablePropertySymbols","functionNameMatch","getMessage","isNaN","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","util","core","expect","Reflect","tslib_1.__decorate","Model","value","memoryIO","attributesIO","localStorageIO"],"mappings":"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"}